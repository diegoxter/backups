ccopy_reg
_reconstructor
p1
(cfeedparser
FeedParserDict
p2
c__builtin__
dict
p3
(dp4
S'feed'
p5
g1
(g2
g3
(dp6
S'updated'
p7
V2013-03-21T01:59:24.615+11:00
p8
sVgd_image
p9
(dp10
S'width'
p11
V16
p12
sS'src'
p13
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p14
sS'rel'
p15
Vhttp://schemas.google.com/g/2005#thumbnail
p16
sS'height'
p17
V16
p18
ssS'subtitle'
p19
VA development blog of what Con Kolivas is doing with code at the moment with the emphasis on linux kernel, BFS and -ck.
p20
sS'updated_parsed'
p21
ctime
struct_time
p22
((I2013
I3
I20
I14
I59
I24
I2
I79
I0
t(dtRp23
sS'links'
p24
(lp25
g1
(g2
g3
(dp26
S'href'
p27
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p28
sS'type'
p29
Vapplication/atom+xml
p30
sS'rel'
p31
Vhttp://schemas.google.com/g/2005#feed
p32
stRp33
ag1
(g2
g3
(dp34
S'href'
p35
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default
p36
sS'type'
p37
Vapplication/atom+xml
p38
sS'rel'
p39
Vself
p40
stRp41
ag1
(g2
g3
(dp42
S'href'
p43
Vhttp://ck-hack.blogspot.com/
p44
sS'type'
p45
Vtext/html
p46
sS'rel'
p47
Valternate
p48
stRp49
ag1
(g2
g3
(dp50
S'href'
p51
Vhttp://pubsubhubbub.appspot.com/
p52
sS'type'
p53
Vtext/html
p54
sS'rel'
p55
Vhub
p56
stRp57
ag1
(g2
g3
(dp58
S'href'
p59
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default?start-index=26&max-results=25
p60
sS'type'
p61
Vapplication/atom+xml
p62
sS'rel'
p63
Vnext
p64
stRp65
asS'tags'
p66
(lp67
g1
(g2
g3
(dp68
S'term'
p69
V3.0.0
p70
sS'scheme'
p71
NsS'label'
p72
NstRp73
ag1
(g2
g3
(dp74
g69
Vdarwin
p75
sg71
Nsg72
NstRp76
ag1
(g2
g3
(dp77
g69
Vmmap
p78
sg71
Nsg72
NstRp79
ag1
(g2
g3
(dp80
g69
V3.3.0
p81
sg71
Nsg72
NstRp82
ag1
(g2
g3
(dp83
g69
Vbitcoin
p84
sg71
Nsg72
NstRp85
ag1
(g2
g3
(dp86
g69
Vbug
p87
sg71
Nsg72
NstRp88
ag1
(g2
g3
(dp89
g69
V3.5.0
p90
sg71
Nsg72
NstRp91
ag1
(g2
g3
(dp92
g69
Vdeterministic
p93
sg71
Nsg72
NstRp94
ag1
(g2
g3
(dp95
g69
Vtty
p96
sg71
Nsg72
NstRp97
ag1
(g2
g3
(dp98
g69
Vlatency
p99
sg71
Nsg72
NstRp100
ag1
(g2
g3
(dp101
g69
VUID Groups
p102
sg71
Nsg72
NstRp103
ag1
(g2
g3
(dp104
g69
V-ck
p105
sg71
Nsg72
NstRp106
ag1
(g2
g3
(dp107
g69
V2.6.38
p108
sg71
Nsg72
NstRp109
ag1
(g2
g3
(dp110
g69
Vencryption
p111
sg71
Nsg72
NstRp112
ag1
(g2
g3
(dp113
g69
Vscheduler
p114
sg71
Nsg72
NstRp115
ag1
(g2
g3
(dp116
g69
Vstdin
p117
sg71
Nsg72
NstRp118
ag1
(g2
g3
(dp119
g69
V2.6.32
p120
sg71
Nsg72
NstRp121
ag1
(g2
g3
(dp122
g69
Vgit
p123
sg71
Nsg72
NstRp124
ag1
(g2
g3
(dp125
g69
V3.4.0
p126
sg71
Nsg72
NstRp127
ag1
(g2
g3
(dp128
g69
V3.2.0
p129
sg71
Nsg72
NstRp130
ag1
(g2
g3
(dp131
g69
Vbfs
p132
sg71
Nsg72
NstRp133
ag1
(g2
g3
(dp134
g69
Vpenalty
p135
sg71
Nsg72
NstRp136
ag1
(g2
g3
(dp137
g69
Vfreebsd
p138
sg71
Nsg72
NstRp139
ag1
(g2
g3
(dp140
g69
Vinteractivity
p141
sg71
Nsg72
NstRp142
ag1
(g2
g3
(dp143
g69
V2.6.39
p144
sg71
Nsg72
NstRp145
ag1
(g2
g3
(dp146
g69
Vtask groups
p147
sg71
Nsg72
NstRp148
ag1
(g2
g3
(dp149
g69
V3.8.0
p150
sg71
Nsg72
NstRp151
ag1
(g2
g3
(dp152
g69
Vscalability
p153
sg71
Nsg72
NstRp154
ag1
(g2
g3
(dp155
g69
Vondemand
p156
sg71
Nsg72
NstRp157
ag1
(g2
g3
(dp158
g69
Vsorting
p159
sg71
Nsg72
NstRp160
ag1
(g2
g3
(dp161
g69
Vmultithreading
p162
sg71
Nsg72
NstRp163
ag1
(g2
g3
(dp164
g69
Vlrzip
p165
sg71
Nsg72
NstRp166
ag1
(g2
g3
(dp167
g69
Vfairness
p168
sg71
Nsg72
NstRp169
ag1
(g2
g3
(dp170
g69
Vmemory
p171
sg71
Nsg72
NstRp172
ag1
(g2
g3
(dp173
g69
Vreal-time
p174
sg71
Nsg72
NstRp175
ag1
(g2
g3
(dp176
g69
V2.6.36
p177
sg71
Nsg72
NstRp178
ag1
(g2
g3
(dp179
g69
Villumos
p180
sg71
Nsg72
NstRp181
ag1
(g2
g3
(dp182
g69
Vhierarchical
p183
sg71
Nsg72
NstRp184
ag1
(g2
g3
(dp185
g69
Vurwlocks
p186
sg71
Nsg72
NstRp187
ag1
(g2
g3
(dp188
g69
Vandroid
p189
sg71
Nsg72
NstRp190
ag1
(g2
g3
(dp191
g69
Vkernel
p192
sg71
Nsg72
NstRp193
ag1
(g2
g3
(dp194
g69
Vstdout
p195
sg71
Nsg72
NstRp196
ag1
(g2
g3
(dp197
g69
V3.0
p198
sg71
Nsg72
NstRp199
ag1
(g2
g3
(dp200
g69
Vsession
p201
sg71
Nsg72
NstRp202
ag1
(g2
g3
(dp203
g69
Vcompression window
p204
sg71
Nsg72
NstRp205
ag1
(g2
g3
(dp206
g69
V3.7
p207
sg71
Nsg72
NstRp208
ag1
(g2
g3
(dp209
g69
V3.1.0
p210
sg71
Nsg72
NstRp211
ag1
(g2
g3
(dp212
g69
Vblogging
p213
sg71
Nsg72
NstRp214
ag1
(g2
g3
(dp215
g69
Vtree
p216
sg71
Nsg72
NstRp217
ag1
(g2
g3
(dp218
g69
Vcksort
p219
sg71
Nsg72
NstRp220
ag1
(g2
g3
(dp221
g69
Vqueuing theory
p222
sg71
Nsg72
NstRp223
ag1
(g2
g3
(dp224
g69
V2.6.37
p225
sg71
Nsg72
NstRp226
asS'generator_detail'
p227
g1
(g2
g3
(dp228
S'href'
p229
Vhttp://www.blogger.com
p230
sS'version'
p231
V7.00
p232
sS'name'
p233
VBlogger
p234
stRp235
sg229
Vhttp://www.blogger.com/profile/02904761195451530213
p236
sS'link'
p237
g44
sS'authors'
p238
(lp239
g1
(g2
g3
(dp240
g229
g236
sg233
Vck
p241
sS'email'
p242
Vnoreply@blogger.com
p243
stRp244
asVopensearch_totalresults
p245
V111
p246
sS'author_detail'
p247
g1
(g2
g3
(dp248
g229
g236
sg233
g241
sg242
g243
stRp249
sS'id'
p250
Vtag:blogger.com,1999:blog-6469704299235308349
p251
sS'generator'
p252
g234
sS'title'
p253
V-ck hacking
p254
sS'author'
p255
Vck (noreply@blogger.com)
p256
sS'subtitle_detail'
p257
g1
(g2
g3
(dp258
S'base'
p259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p260
sg53
Vtext/html
p261
sS'language'
p262
NsS'value'
p263
g20
stRp264
sS'guidislink'
p265
I01
sS'title_detail'
p266
g1
(g2
g3
(dp267
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p268
sg53
Vtext/plain
p269
sg262
Nsg263
g254
stRp270
sVopensearch_startindex
p271
V1
sVopensearch_itemsperpage
p272
V25
p273
stRp274
sS'status'
p275
I200
sg7
S'Wed, 20 Mar 2013 14:59:24 GMT'
p276
sg21
g22
((I2013
I3
I20
I14
I59
I24
I2
I79
I0
t(dtRp277
sS'encoding'
p278
VUTF-8
p279
sS'bozo'
p280
I0
sS'entries'
p281
(lp282
g1
(g2
g3
(dp283
g7
V2013-03-04T12:05:48.531+11:00
p284
sVgd_image
p285
(dp286
S'width'
p287
V16
p288
sS'src'
p289
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p290
sS'rel'
p291
Vhttp://schemas.google.com/g/2005#thumbnail
p292
sS'height'
p293
V16
p294
ssg21
g22
((I2013
I3
I4
I1
I5
I48
I0
I63
I0
t(dtRp295
sg24
(lp296
g1
(g2
g3
(dp297
S'href'
p298
Vhttp://ck-hack.blogspot.com/feeds/3944842459877341656/comments/default
p299
sS'type'
p300
Vapplication/atom+xml
p301
sS'rel'
p302
Vreplies
p303
sS'title'
p304
VPost Comments
p305
stRp306
ag1
(g2
g3
(dp307
S'href'
p308
Vhttp://ck-hack.blogspot.com/2013/03/bfs-0428-for-linux-38x.html#comment-form
p309
sS'type'
p310
Vtext/html
p311
sS'rel'
p312
Vreplies
p313
sS'title'
p314
V7 Comments
p315
stRp316
ag1
(g2
g3
(dp317
S'href'
p318
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/3944842459877341656
p319
sS'type'
p320
Vapplication/atom+xml
p321
sS'rel'
p322
Vedit
p323
stRp324
ag1
(g2
g3
(dp325
S'href'
p326
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/3944842459877341656
p327
sS'type'
p328
Vapplication/atom+xml
p329
sS'rel'
p330
Vself
p331
stRp332
ag1
(g2
g3
(dp333
S'href'
p334
Vhttp://ck-hack.blogspot.com/2013/03/bfs-0428-for-linux-38x.html
p335
sS'type'
p336
Vtext/html
p337
sS'rel'
p338
Valternate
p339
sS'title'
p340
VBFS 0.428 for linux-3.8.x
p341
stRp342
asg66
(lp343
g1
(g2
g3
(dp344
g69
V-ck
p345
sg71
Vhttp://www.blogger.com/atom/ns#
p346
sg72
NstRp347
ag1
(g2
g3
(dp348
g69
V3.8.0
p349
sg71
Vhttp://www.blogger.com/atom/ns#
p350
sg72
NstRp351
ag1
(g2
g3
(dp352
g69
Vbfs
p353
sg71
Vhttp://www.blogger.com/atom/ns#
p354
sg72
NstRp355
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p356
sVthr_total
p357
V7
sg238
(lp358
g1
(g2
g3
(dp359
g229
g356
sg233
Vck
p360
sg242
Vnoreply@blogger.com
p361
stRp362
asg237
g335
sS'author_detail'
p363
g1
(g2
g3
(dp364
g229
g356
sg233
g360
sg242
g361
stRp365
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-3944842459877341656
p366
sS'published_parsed'
p367
g22
((I2013
I3
I4
I1
I5
I0
I0
I63
I0
t(dtRp368
sg253
VBFS 0.428 for linux-3.8.x
p369
sg255
Vck (noreply@blogger.com)
p370
sS'summary'
p371
VAnnouncing a resync of the BFS and -ck patchsets for linux-3.8<br /><br />Full ck patch:<br /><a href="http://ck.kolivas.org/patches/3.0/3.8/3.8-ck1/">http://ck.kolivas.org/patches/3.0/3.8/3.8-ck1/</a><br /><br />BFS only patch:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.8/3.8-sched-bfs-428.patch">http://ck.kolivas.org/patches/bfs/3.0/3.8/3.8-sched-bfs-428.patch</a><br /><br />The full set of incremental patches is here:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.8/Incremental/">http://ck.kolivas.org/patches/bfs/3.0/3.8/Incremental/</a><br /><br /><br />The only changes to BFS include a resync from BFS 0.427, and a micro-optimisation to the CPU accounting courtesy of Olivier Langlois (thanks!). See the incremental patch for details.<br /><br /><br />As for the -ck patchset, I am dropping the patches that no longer seem to reliably work that set sysctl values since distributions seem to change them, along with removing patches of dubious utility.<br /><br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br />
p372
sS'content'
p373
(lp374
g1
(g2
g3
(dp375
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p376
sg53
g261
sg262
Nsg263
g372
stRp377
asg265
I01
sS'title_detail'
p378
g1
(g2
g3
(dp379
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p380
sg53
g269
sg262
Nsg263
g369
stRp381
sS'published'
p382
V2013-03-04T12:05:00.002+11:00
p383
sS'canto_state'
p384
(lp385
V-ck hacking
p386
aV*
aS'read'
p387
astRp388
ag1
(g2
g3
(dp389
g7
V2013-01-29T12:54:51.796+11:00
p390
sVgd_image
p391
(dp392
S'width'
p393
V16
p394
sS'src'
p395
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p396
sS'rel'
p397
Vhttp://schemas.google.com/g/2005#thumbnail
p398
sS'height'
p399
V16
p400
ssg21
g22
((I2013
I1
I29
I1
I54
I51
I1
I29
I0
t(dtRp401
sg24
(lp402
g1
(g2
g3
(dp403
S'href'
p404
Vhttp://ck-hack.blogspot.com/feeds/4296595129517401571/comments/default
p405
sS'type'
p406
Vapplication/atom+xml
p407
sS'rel'
p408
Vreplies
p409
sS'title'
p410
VPost Comments
p411
stRp412
ag1
(g2
g3
(dp413
S'href'
p414
Vhttp://ck-hack.blogspot.com/2013/01/bfs-0427-for-linux-37x.html#comment-form
p415
sS'type'
p416
Vtext/html
p417
sS'rel'
p418
Vreplies
p419
sS'title'
p420
V29 Comments
p421
stRp422
ag1
(g2
g3
(dp423
S'href'
p424
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4296595129517401571
p425
sS'type'
p426
Vapplication/atom+xml
p427
sS'rel'
p428
Vedit
p429
stRp430
ag1
(g2
g3
(dp431
S'href'
p432
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4296595129517401571
p433
sS'type'
p434
Vapplication/atom+xml
p435
sS'rel'
p436
Vself
p437
stRp438
ag1
(g2
g3
(dp439
S'href'
p440
Vhttp://ck-hack.blogspot.com/2013/01/bfs-0427-for-linux-37x.html
p441
sS'type'
p442
Vtext/html
p443
sS'rel'
p444
Valternate
p445
sS'title'
p446
VBFS 0.427 for linux 3.7.x
p447
stRp448
asg66
(lp449
g1
(g2
g3
(dp450
g69
V3.7
p451
sg71
Vhttp://www.blogger.com/atom/ns#
p452
sg72
NstRp453
ag1
(g2
g3
(dp454
g69
Vbfs
p455
sg71
Vhttp://www.blogger.com/atom/ns#
p456
sg72
NstRp457
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p458
sVthr_total
p459
V29
p460
sg238
(lp461
g1
(g2
g3
(dp462
g229
g458
sg233
Vck
p463
sg242
Vnoreply@blogger.com
p464
stRp465
asg237
g441
sS'author_detail'
p466
g1
(g2
g3
(dp467
g229
g458
sg233
g463
sg242
g464
stRp468
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-4296595129517401571
p469
sg367
g22
((I2013
I1
I29
I1
I54
I0
I1
I29
I0
t(dtRp470
sg253
VBFS 0.427 for linux 3.7.x
p471
sg255
Vck (noreply@blogger.com)
p472
sg371
VAnnouncing an updated BFS patch for linux 3.7, version 0.427<br /><br />Full patch:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-427.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-427.patch</a><br /><br />Incremental patch from bfs 426 (applies to 3.7.x-ck1 as well):<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-bfs426-427.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-bfs426-427.patch</a><br /><br />The full set of incremental patches, along with a description within each patch is here:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/">http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/</a><br /><br />A number of minor issues have been reported with BFS over time (interestingly none of them appear to be new). Some of them were cosmetic, like the reported suspicious rcu warning on startup, and the accounting for close to 100\u005c% bound cpu tasks flicking between 99 and 101\u005c%.<br /><br />The most interesting actual bug was that clock_nanosleep, and timer_create would not work when used with the clock id of CLOCK_PROCESS_CPUTIME_ID. This is a timer which goes off based on the total CPU used by a process or its thread group, which I have never used myself nor was aware of its intricacies. This bug was only picked up as part of building and glibc testing by <span class="gD" name="Olivier Langlois">Olivier Langlois. This was an interesting bug for a number of reasons to me. First was that it had never manifested as far as I'm aware anywhere in the wild despite being a posix 2001 function, so presumably it is almost never used. Second is it's one of the few functions that tries to get accounting as a total of all the CPU used by a thread group rather than just per thread. Third is that you cannot really use clock_nanosleep with this clock id unless it is done from a separate thread to the one consuming CPU (since it puts the calling thread to sleep) so there would be precious few scenarios it would be in use currently, though coding multithreaded apps that use it for resource monitoring and control would make complete sense. Finally the most interesting part was I can now tell that it had been in BFS since its first release and no one had ever noticed as far as I'm aware.&nbsp;</span><br /><br /><span class="gD" name="Olivier Langlois">Unfortunately it took me quite a while to find since I had to dig deep into figuring out how the whole system of timers works on a low level in the kernel before finally stumbling across one tiny piece of accounting/reporting that was missing on BFS. It's funny that a bug that directly affected almost no one should be so hard to track down. In the meantime it allowed me to tweak a number of bits of internal accounting so hopefully that should have improved as well.</span><br /><br /><span class="gD" name="Olivier Langlois">Please enjoy.</span><br /><span class="gD" name="Olivier Langlois">\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044</span><br /><span class="gD" name="Olivier Langlois">&nbsp;</span><br /><span class="gD" name="Olivier Langlois">&nbsp;</span> <span class="go"></span>
p473
sg373
(lp474
g1
(g2
g3
(dp475
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p476
sg53
g261
sg262
Nsg263
VAnnouncing an updated BFS patch for linux 3.7, version 0.427<br /><br />Full patch:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-427.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-427.patch</a><br /><br />Incremental patch from bfs 426 (applies to 3.7.x-ck1 as well):<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-bfs426-427.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-bfs426-427.patch</a><br /><br />The full set of incremental patches, along with a description within each patch is here:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/">http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/</a><br /><br />A number of minor issues have been reported with BFS over time (interestingly none of them appear to be new). Some of them were cosmetic, like the reported suspicious rcu warning on startup, and the accounting for close to 100\u005c% bound cpu tasks flicking between 99 and 101\u005c%.<br /><br />The most interesting actual bug was that clock_nanosleep, and timer_create would not work when used with the clock id of CLOCK_PROCESS_CPUTIME_ID. This is a timer which goes off based on the total CPU used by a process or its thread group, which I have never used myself nor was aware of its intricacies. This bug was only picked up as part of building and glibc testing by <span class="gD" name="Olivier Langlois">Olivier Langlois. This was an interesting bug for a number of reasons to me. First was that it had never manifested as far as I'm aware anywhere in the wild despite being a posix 2001 function, so presumably it is almost never used. Second is it's one of the few functions that tries to get accounting as a total of all the CPU used by a thread group rather than just per thread. Third is that you cannot really use clock_nanosleep with this clock id unless it is done from a separate thread to the one consuming CPU (since it puts the calling thread to sleep) so there would be precious few scenarios it would be in use currently, though coding multithreaded apps that use it for resource monitoring and control would make complete sense. Finally the most interesting part was I can now tell that it had been in BFS since its first release and no one had ever noticed as far as I'm aware.&nbsp;</span><br /><br /><span class="gD" name="Olivier Langlois">Unfortunately it took me quite a while to find since I had to dig deep into figuring out how the whole system of timers works on a low level in the kernel before finally stumbling across one tiny piece of accounting/reporting that was missing on BFS. It's funny that a bug that directly affected almost no one should be so hard to track down. In the meantime it allowed me to tweak a number of bits of internal accounting so hopefully that should have improved as well.</span><br /><br /><span class="gD" name="Olivier Langlois">Please enjoy.</span><br /><span class="gD" name="Olivier Langlois">\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044</span><br /><span class="gD" name="Olivier Langlois">&nbsp;</span><br /><span class="gD" name="Olivier Langlois">&nbsp;</span> <span class="go"></span>
p477
stRp478
asg265
I01
sS'title_detail'
p479
g1
(g2
g3
(dp480
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p481
sg53
g269
sg262
Nsg263
g471
stRp482
sg382
V2013-01-29T12:54:00.003+11:00
p483
sg384
(lp484
g386
aV*
ag387
astRp485
ag1
(g2
g3
(dp486
g7
V2012-12-16T00:31:01.661+11:00
p487
sVgd_image
p488
(dp489
S'width'
p490
V16
p491
sS'src'
p492
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p493
sS'rel'
p494
Vhttp://schemas.google.com/g/2005#thumbnail
p495
sS'height'
p496
V16
p497
ssg21
g22
((I2012
I12
I15
I13
I31
I1
I5
I350
I0
t(dtRp498
sg24
(lp499
g1
(g2
g3
(dp500
Vhref
p501
Vhttp://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patch-3.7-ck1.bz2
p502
sS'rel'
p503
Venclosure
p504
sg253
g1
(cBeautifulSoup
NavigableString
p505
c__builtin__
unicode
p506
Vpatch-3.7-ck1.bz2
tRp507
(dp508
S'nextSibling'
p509
NsS'next'
p510
g1
(cBeautifulSoup
Tag
p511
c__builtin__
object
p512
NtRp513
(dp514
S'escapeUnrecognizedEntities'
p515
I00
sS'name'
p516
Vbr
p517
sS'parent'
p518
g1
(cBeautifulSoup
BeautifulSoup
p519
g512
NtRp520
(dp521
S'declaredHTMLEncoding'
p522
NsS'verbose'
p523
I0
sg509
NsS'attrs'
p524
(lp525
sS'convertXMLEntities'
p526
I00
sS'containsSubstitutions'
p527
I00
sS'contents'
p528
(lp529
g1
(g505
g506
VSome degree of normality has returned to my life, so I bring to you a resync of the BFS cpu scheduler for 3.7, along with the -ck patches to date.
tRp530
(dp531
g509
g1
(g511
g512
NtRp532
(dp533
g515
I00
sg516
Vbr
p534
sg518
g520
sS'parserClass'
p535
g519
sg509
g1
(g511
g512
NtRp536
(dp537
g515
I00
sg516
Vbr
p538
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VApply to 3.7.x:
tRp539
(dp540
g509
g1
(g511
g512
NtRp541
(dp542
g515
I00
sg516
Vbr
p543
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp544
(dp545
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g513
sS'convertHTMLEntities'
p546
I00
sg510
g507
sS'isSelfClosing'
p547
I00
sg524
(lp548
(g501
g502
tp549
asS'attrMap'
p550
(dp551
g501
g502
sg503
g504
sg253
g507
ssg526
I00
sS'hidden'
p552
I00
sS'previousSibling'
p553
g541
sg527
I00
sg528
(lp554
g507
asS'previous'
p555
g541
sbsg546
I00
sg510
g544
sg547
I01
sg524
(lp556
sg550
(dp557
sg526
I00
sg552
I00
sg553
g539
sg527
I00
sg528
(lp558
sg555
g539
sbsg510
g541
sg553
g536
sg518
g520
sg555
g536
sbsg546
I00
sg510
g539
sg547
I01
sg524
(lp559
sg550
(dp560
sg526
I00
sg552
I00
sg553
g532
sg527
I00
sg528
(lp561
sg555
g532
sbsg546
I00
sg510
g536
sg547
I01
sg524
(lp562
sg550
(dp563
sg526
I00
sg552
I00
sg553
g530
sg527
I00
sg528
(lp564
sg555
g530
sbsg510
g532
sg553
Nsg518
g520
sg555
Nsbag532
ag536
ag539
ag541
ag544
ag513
ag1
(g505
g506
Vor
tRp565
(dp566
g509
g1
(g511
g512
NtRp567
(dp568
g515
I00
sg516
Vbr
p569
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp570
(dp571
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp572
(dp573
g515
I00
sg516
Vbr
p574
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp575
(dp576
g515
I00
sg516
Vbr
p577
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VBroken out tarball:
tRp578
(dp579
g509
g1
(g511
g512
NtRp580
(dp581
g515
I00
sg516
Vbr
p582
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp583
(dp584
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp585
(dp586
g515
I00
sg516
Vbr
p587
sg518
g520
sg535
g519
sg509
g1
(g505
g506
Vor
tRp588
(dp589
g509
g1
(g511
g512
NtRp590
(dp591
g515
I00
sg516
Vbr
p592
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp593
(dp594
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp595
(dp596
g515
I00
sg516
Vbr
p597
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp598
(dp599
g515
I00
sg516
Vbr
p600
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VDiscrete patches:
tRp601
(dp602
g509
g1
(g511
g512
NtRp603
(dp604
g515
I00
sg516
Vbr
p605
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp606
(dp607
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp608
(dp609
g515
I00
sg516
Vbr
p610
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp611
(dp612
g515
I00
sg516
Vbr
p613
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VLatest BFS by itself:
tRp614
(dp615
g509
g1
(g511
g512
NtRp616
(dp617
g515
I00
sg516
Vbr
p618
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp619
(dp620
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp621
(dp622
g515
I00
sg516
Vbr
p623
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp624
(dp625
g515
I00
sg516
Vbr
p626
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp627
(dp628
g515
I00
sg516
Vbr
p629
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VPeople often ask me why I don't maintain a git tree of my patches or at least BFS and make it easier on myself and those who download it. As it turns out, it is actually less work only for those who download it to have a git tree and would actually be 
tRp630
(dp631
g509
g1
(g511
g512
NtRp632
(dp633
g515
I00
sg516
Vi
sg518
g520
sg535
g519
sg509
g1
(g505
g506
V for me to maintain a git tree.
tRp634
(dp635
g509
g1
(g511
g512
NtRp636
(dp637
g515
I00
sg516
Vbr
p638
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp639
(dp640
g515
I00
sg516
Vbr
p641
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VWhile I'm sure most people are shaking their head and thinking I'm just some kind of git-phobe, I'll try to explain (Note that I maintain git trees for lrzip 
tRp642
(dp643
g509
g1
(g511
g512
NtRp644
(dp645
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g505
g506
V and cgminer 
tRp646
(dp647
g509
g1
(g511
g512
NtRp648
(dp649
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g505
g506
V).
tRp650
(dp651
g509
g1
(g511
g512
NtRp652
(dp653
g515
I00
sg516
Vbr
p654
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp655
(dp656
g515
I00
sg516
Vbr
p657
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VI do NOT keep track of the linux kernel patches as they come in during the development phase prior to the latest stable release. Unfortunately I simply do not have the time nor the inclination to care on that level any more about linux kernel. However I still do believe quite a lot in what BFS has to offer. If I watched each patch as it came into git, I could simply keep my fork with BFS and merge the linux kernel patches as they came in, resyncing and modifying as it went along with the changes. When new patches go into the kernel, there is a common pattern of many changes occurring shortly after they're merged, with a few fixes going in, some files being moved around a few times, and occasionally the patch backed out when it's found the patch introduces some nasty regression that proves a showstopper to it being released. Each one of these changes - fixes, moves, renames, removal, require a resync if you are maintaining a fork.
tRp658
(dp659
g509
g1
(g511
g512
NtRp660
(dp661
g515
I00
sg516
Vbr
p662
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp663
(dp664
g515
I00
sg516
Vbr
p665
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VThe way I've coded up the actual BFS patch itself is to be as unobtrusive as possible - it does not actually replace large chunks of code en bloc, just adding files and redirecting builds to use those new files instead of the mainline files. This is done to minimise how much effort it is to resync when new changes come. The vast majority of the time, only trivial changes need to be made for the patch to even apply. Thus applying an old patch to a new kernel just needs fixes to apply (even if it doesn't build). This is usually the first step I do in syncing BFS, and I end up with something like this after fixing the rejects:
tRp666
(dp667
g509
g1
(g511
g512
NtRp668
(dp669
g515
I00
sg516
Vbr
p670
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp671
(dp672
g515
I00
sg516
Vbr
p673
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp674
(dp675
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp676
(dp677
g515
I00
sg516
Vbr
p678
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp679
(dp680
g515
I00
sg516
Vbr
p681
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VThis patch is only the 3.6 patch fixing any chunks that don't apply.
tRp682
(dp683
g509
g1
(g511
g512
NtRp684
(dp685
g515
I00
sg516
Vbr
p686
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp687
(dp688
g515
I00
sg516
Vbr
p689
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VAfter that, I go through the incremental changes from mainline 3.6 to 3.7 to see any scheduler related changes that should be applied to BFS to 1. make it build with API changes in mainline and 2. benefit from any new features going into mainline that are relevant to the scheduler in general. I manually add the changes and end up with an incremental patch like this:
tRp690
(dp691
g509
g1
(g511
g512
NtRp692
(dp693
g515
I00
sg516
Vbr
p694
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp695
(dp696
g515
I00
sg516
Vbr
p697
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp698
(dp699
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp700
(dp701
g515
I00
sg516
Vbr
p702
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VThis patch is only merging 3.6-&gt;3.7 changes into BFS itself
tRp703
(dp704
g509
g1
(g511
g512
NtRp705
(dp706
g515
I00
sg516
Vbr
p707
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp708
(dp709
g515
I00
sg516
Vbr
p710
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VFinally I actually apply any new changes to BFS since the last major release, bugfixes or improvements as the case may be, as per this patch here:
tRp711
(dp712
g509
g1
(g511
g512
NtRp713
(dp714
g515
I00
sg516
Vbr
p715
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp716
(dp717
g515
I00
sg516
Va
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp718
(dp719
g515
I00
sg516
Vbr
p720
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp721
(dp722
g515
I00
sg516
Vbr
p723
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VGit is an excellent source control tool, but provides me with almost nothing for this sort of process where a patch is synced up after 3 months of development. If I were to have my fork and then start merging all patches between 3.6 and 3.7, it would fail to merge new changes probably dozens and potentially hundreds of times along the way, each requiring manual correction. While merge conflicts are just as easy to resolve with git as they are with patch, they aren't actually 
tRp724
(dp725
g509
g1
(g511
g512
NtRp726
(dp727
g515
I00
sg516
Vi
sg518
g520
sg535
g519
sg509
g1
(g505
g506
V, and instead of there being conflicts precisely once in the development process, there are likely many with this approach.
tRp728
(dp729
g509
g1
(g511
g512
NtRp730
(dp731
g515
I00
sg516
Vbr
p732
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp733
(dp734
g515
I00
sg516
Vbr
p735
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VHowever git also does not provide me with any way to port new changes from mainline to the BFS patch itself. They still need to be applied manually, and if changes occur along the way between 3.6 stable through 3.7-rc unstable to 3.7 stable, each time a change occurs to mainline, the change needs to be done to BFS. Thus I end up reproducing all the bugfixes, moves, renames and back-outs that mainline does along the way, instead of just doing it once.
tRp736
(dp737
g509
g1
(g511
g512
NtRp738
(dp739
g515
I00
sg516
Vbr
p740
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp741
(dp742
g515
I00
sg516
Vbr
p743
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VHopefully this gives some insight into the process and why git is actually counter-productive to BFS syncing.
tRp744
(dp745
g509
g1
(g511
g512
NtRp746
(dp747
g515
I00
sg516
Vbr
p748
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp749
(dp750
g515
I00
sg516
Vbr
p751
sg518
g520
sg535
g519
sg509
g1
(g505
g506
VEnjoy 3.7 BFS.
tRp752
(dp753
g509
g1
(g511
g512
NtRp754
(dp755
g515
I00
sg516
Vbr
p756
sg518
g520
sg535
g519
sg509
g1
(g505
g506
V\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044
tRp757
(dp758
g509
g1
(g511
g512
NtRp759
(dp760
g515
I00
sg516
Vbr
p761
sg518
g520
sg535
g519
sg509
g1
(g511
g512
NtRp762
(dp763
g515
I00
sg516
Vbr
p764
sg518
g520
sg535
g519
sg509
Nsg546
I00
sg510
Nsg547
I01
sg524
(lp765
sg550
(dp766
sg526
I00
sg552
I00
sg553
g759
sg527
I00
sg528
(lp767
sg555
g759
sbsg546
I00
sg510
g762
sg547
I01
sg524
(lp768
sg550
(dp769
sg526
I00
sg552
I00
sg553
g757
sg527
I00
sg528
(lp770
sg555
g757
sbsg510
g759
sg553
g754
sg518
g520
sg555
g754
sbsg546
I00
sg510
g757
sg547
I01
sg524
(lp771
sg550
(dp772
sg526
I00
sg552
I00
sg553
g752
sg527
I00
sg528
(lp773
sg555
g752
sbsg510
g754
sg553
g749
sg518
g520
sg555
g749
sbsg546
I00
sg510
g752
sg547
I01
sg524
(lp774
sg550
(dp775
sg526
I00
sg552
I00
sg553
g746
sg527
I00
sg528
(lp776
sg555
g746
sbsg546
I00
sg510
g749
sg547
I01
sg524
(lp777
sg550
(dp778
sg526
I00
sg552
I00
sg553
g744
sg527
I00
sg528
(lp779
sg555
g744
sbsg510
g746
sg553
g741
sg518
g520
sg555
g741
sbsg546
I00
sg510
g744
sg547
I01
sg524
(lp780
sg550
(dp781
sg526
I00
sg552
I00
sg553
g738
sg527
I00
sg528
(lp782
sg555
g738
sbsg546
I00
sg510
g741
sg547
I01
sg524
(lp783
sg550
(dp784
sg526
I00
sg552
I00
sg553
g736
sg527
I00
sg528
(lp785
sg555
g736
sbsg510
g738
sg553
g733
sg518
g520
sg555
g733
sbsg546
I00
sg510
g736
sg547
I01
sg524
(lp786
sg550
(dp787
sg526
I00
sg552
I00
sg553
g730
sg527
I00
sg528
(lp788
sg555
g730
sbsg546
I00
sg510
g733
sg547
I01
sg524
(lp789
sg550
(dp790
sg526
I00
sg552
I00
sg553
g728
sg527
I00
sg528
(lp791
sg555
g728
sbsg510
g730
sg553
g726
sg518
g520
sg555
g1
(g505
g506
Veasier
tRp792
(dp793
g509
Nsg510
g728
sg553
Nsg518
g726
sg555
g726
sbsbsg546
I00
sg510
g792
sg547
I00
sg524
(lp794
sg550
(dp795
sg526
I00
sg552
I00
sg553
g724
sg527
I00
sg528
(lp796
g792
asg555
g724
sbsg510
g726
sg553
g721
sg518
g520
sg555
g721
sbsg546
I00
sg510
g724
sg547
I01
sg524
(lp797
sg550
(dp798
sg526
I00
sg552
I00
sg553
g718
sg527
I00
sg528
(lp799
sg555
g718
sbsg546
I00
sg510
g721
sg547
I01
sg524
(lp800
sg550
(dp801
sg526
I00
sg552
I00
sg553
g716
sg527
I00
sg528
(lp802
sg555
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-updates.patch
tRp803
(dp804
g509
Nsg510
g718
sg553
Nsg518
g716
sg555
g716
sbsbsg546
I00
sg510
g803
sg547
I00
sg524
(lp805
(Vhref
p806
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-updates.patch
p807
tp808
asg550
(dp809
g806
g807
ssg526
I00
sg552
I00
sg553
g713
sg527
I00
sg528
(lp810
g803
asg555
g713
sbsg546
I00
sg510
g716
sg547
I01
sg524
(lp811
sg550
(dp812
sg526
I00
sg552
I00
sg553
g711
sg527
I00
sg528
(lp813
sg555
g711
sbsg510
g713
sg553
g708
sg518
g520
sg555
g708
sbsg546
I00
sg510
g711
sg547
I01
sg524
(lp814
sg550
(dp815
sg526
I00
sg552
I00
sg553
g705
sg527
I00
sg528
(lp816
sg555
g705
sbsg546
I00
sg510
g708
sg547
I01
sg524
(lp817
sg550
(dp818
sg526
I00
sg552
I00
sg553
g703
sg527
I00
sg528
(lp819
sg555
g703
sbsg510
g705
sg553
g700
sg518
g520
sg555
g700
sbsg546
I00
sg510
g703
sg547
I01
sg524
(lp820
sg550
(dp821
sg526
I00
sg552
I00
sg553
g698
sg527
I00
sg528
(lp822
sg555
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-merge.patch
tRp823
(dp824
g509
Nsg510
g700
sg553
Nsg518
g698
sg555
g698
sbsbsg546
I00
sg510
g823
sg547
I00
sg524
(lp825
(Vhref
p826
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-merge.patch
p827
tp828
asg550
(dp829
g826
g827
ssg526
I00
sg552
I00
sg553
g695
sg527
I00
sg528
(lp830
g823
asg555
g695
sbsg546
I00
sg510
g698
sg547
I01
sg524
(lp831
sg550
(dp832
sg526
I00
sg552
I00
sg553
g692
sg527
I00
sg528
(lp833
sg555
g692
sbsg546
I00
sg510
g695
sg547
I01
sg524
(lp834
sg550
(dp835
sg526
I00
sg552
I00
sg553
g690
sg527
I00
sg528
(lp836
sg555
g690
sbsg510
g692
sg553
g687
sg518
g520
sg555
g687
sbsg546
I00
sg510
g690
sg547
I01
sg524
(lp837
sg550
(dp838
sg526
I00
sg552
I00
sg553
g684
sg527
I00
sg528
(lp839
sg555
g684
sbsg546
I00
sg510
g687
sg547
I01
sg524
(lp840
sg550
(dp841
sg526
I00
sg552
I00
sg553
g682
sg527
I00
sg528
(lp842
sg555
g682
sbsg510
g684
sg553
g679
sg518
g520
sg555
g679
sbsg546
I00
sg510
g682
sg547
I01
sg524
(lp843
sg550
(dp844
sg526
I00
sg552
I00
sg553
g676
sg527
I00
sg528
(lp845
sg555
g676
sbsg546
I00
sg510
g679
sg547
I01
sg524
(lp846
sg550
(dp847
sg526
I00
sg552
I00
sg553
g674
sg527
I00
sg528
(lp848
sg555
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/3.7-sched-bfs-425.patch
tRp849
(dp850
g509
Nsg510
g676
sg553
Nsg518
g674
sg555
g674
sbsbsg546
I00
sg510
g849
sg547
I00
sg524
(lp851
(Vhref
p852
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/3.7-sched-bfs-425.patch
p853
tp854
asg550
(dp855
g852
g853
ssg526
I00
sg552
I00
sg553
g671
sg527
I00
sg528
(lp856
g849
asg555
g671
sbsg546
I00
sg510
g674
sg547
I01
sg524
(lp857
sg550
(dp858
sg526
I00
sg552
I00
sg553
g668
sg527
I00
sg528
(lp859
sg555
g668
sbsg546
I00
sg510
g671
sg547
I01
sg524
(lp860
sg550
(dp861
sg526
I00
sg552
I00
sg553
g666
sg527
I00
sg528
(lp862
sg555
g666
sbsg510
g668
sg553
g663
sg518
g520
sg555
g663
sbsg546
I00
sg510
g666
sg547
I01
sg524
(lp863
sg550
(dp864
sg526
I00
sg552
I00
sg553
g660
sg527
I00
sg528
(lp865
sg555
g660
sbsg546
I00
sg510
g663
sg547
I01
sg524
(lp866
sg550
(dp867
sg526
I00
sg552
I00
sg553
g658
sg527
I00
sg528
(lp868
sg555
g658
sbsg510
g660
sg553
g655
sg518
g520
sg555
g655
sbsg546
I00
sg510
g658
sg547
I01
sg524
(lp869
sg550
(dp870
sg526
I00
sg552
I00
sg553
g652
sg527
I00
sg528
(lp871
sg555
g652
sbsg546
I00
sg510
g655
sg547
I01
sg524
(lp872
sg550
(dp873
sg526
I00
sg552
I00
sg553
g650
sg527
I00
sg528
(lp874
sg555
g650
sbsg510
g652
sg553
g648
sg518
g520
sg555
g1
(g505
g506
Vhttps://github.com/ckolivas/cgminer
tRp875
(dp876
g509
Nsg510
g650
sg553
Nsg518
g648
sg555
g648
sbsbsg546
I00
sg510
g875
sg547
I00
sg524
(lp877
(Vhref
p878
Vhttps://github.com/ckolivas/cgminer
p879
tp880
asg550
(dp881
g878
g879
ssg526
I00
sg552
I00
sg553
g646
sg527
I00
sg528
(lp882
g875
asg555
g646
sbsg510
g648
sg553
g644
sg518
g520
sg555
g1
(g505
g506
Vhttps://github.com/ckolivas/lrzip
tRp883
(dp884
g509
Nsg510
g646
sg553
Nsg518
g644
sg555
g644
sbsbsg546
I00
sg510
g883
sg547
I00
sg524
(lp885
(Vhref
p886
Vhttps://github.com/ckolivas/lrzip
p887
tp888
asg550
(dp889
g886
g887
ssg526
I00
sg552
I00
sg553
g642
sg527
I00
sg528
(lp890
g883
asg555
g642
sbsg510
g644
sg553
g639
sg518
g520
sg555
g639
sbsg546
I00
sg510
g642
sg547
I01
sg524
(lp891
sg550
(dp892
sg526
I00
sg552
I00
sg553
g636
sg527
I00
sg528
(lp893
sg555
g636
sbsg546
I00
sg510
g639
sg547
I01
sg524
(lp894
sg550
(dp895
sg526
I00
sg552
I00
sg553
g634
sg527
I00
sg528
(lp896
sg555
g634
sbsg510
g636
sg553
g632
sg518
g520
sg555
g1
(g505
g506
Vmore work
tRp897
(dp898
g509
Nsg510
g634
sg553
Nsg518
g632
sg555
g632
sbsbsg546
I00
sg510
g897
sg547
I00
sg524
(lp899
sg550
(dp900
sg526
I00
sg552
I00
sg553
g630
sg527
I00
sg528
(lp901
g897
asg555
g630
sbsg510
g632
sg553
g627
sg518
g520
sg555
g627
sbsg546
I00
sg510
g630
sg547
I01
sg524
(lp902
sg550
(dp903
sg526
I00
sg552
I00
sg553
g624
sg527
I00
sg528
(lp904
sg555
g624
sbsg546
I00
sg510
g627
sg547
I01
sg524
(lp905
sg550
(dp906
sg526
I00
sg552
I00
sg553
g621
sg527
I00
sg528
(lp907
sg555
g621
sbsg546
I00
sg510
g624
sg547
I01
sg524
(lp908
sg550
(dp909
sg526
I00
sg552
I00
sg553
g619
sg527
I00
sg528
(lp910
sg555
g1
(g505
g506
V3.7-sched-bfs-426.patch
tRp911
(dp912
g509
Nsg510
g621
sg553
Nsg518
g619
sg555
g619
sbsbsg546
I00
sg510
g911
sg547
I00
sg524
(lp913
(Vhref
p914
Vhttp://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-426.patch
p915
tp916
asg550
(dp917
g914
g915
ssg526
I00
sg552
I00
sg553
g616
sg527
I00
sg528
(lp918
g911
asg555
g616
sbsg546
I00
sg510
g619
sg547
I01
sg524
(lp919
sg550
(dp920
sg526
I00
sg552
I00
sg553
g614
sg527
I00
sg528
(lp921
sg555
g614
sbsg510
g616
sg553
g611
sg518
g520
sg555
g611
sbsg546
I00
sg510
g614
sg547
I01
sg524
(lp922
sg550
(dp923
sg526
I00
sg552
I00
sg553
g608
sg527
I00
sg528
(lp924
sg555
g608
sbsg546
I00
sg510
g611
sg547
I01
sg524
(lp925
sg550
(dp926
sg526
I00
sg552
I00
sg553
g606
sg527
I00
sg528
(lp927
sg555
g1
(g505
g506
Vpatches
tRp928
(dp929
g509
Nsg510
g608
sg553
Nsg518
g606
sg555
g606
sbsbsg546
I00
sg510
g928
sg547
I00
sg524
(lp930
(Vhref
p931
Vhttp://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patches/
p932
tp933
asg550
(dp934
g931
g932
ssg526
I00
sg552
I00
sg553
g603
sg527
I00
sg528
(lp935
g928
asg555
g603
sbsg546
I00
sg510
g606
sg547
I01
sg524
(lp936
sg550
(dp937
sg526
I00
sg552
I00
sg553
g601
sg527
I00
sg528
(lp938
sg555
g601
sbsg510
g603
sg553
g598
sg518
g520
sg555
g598
sbsg546
I00
sg510
g601
sg547
I01
sg524
(lp939
sg550
(dp940
sg526
I00
sg552
I00
sg553
g595
sg527
I00
sg528
(lp941
sg555
g595
sbsg546
I00
sg510
g598
sg547
I01
sg524
(lp942
sg550
(dp943
sg526
I00
sg552
I00
sg553
g593
sg527
I00
sg528
(lp944
sg555
g1
(g505
g506
V3.7-ck1-broken-out.tar.lrz
tRp945
(dp946
g509
Nsg510
g595
sg553
Nsg518
g593
sg555
g593
sbsbsg546
I00
sg510
g945
sg547
I00
sg524
(lp947
(Vhref
p948
Vhttp://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/3.7-ck1-broken-out.tar.lrz
p949
tp950
asg550
(dp951
g948
g949
ssg526
I00
sg552
I00
sg553
g590
sg527
I00
sg528
(lp952
g945
asg555
g590
sbsg546
I00
sg510
g593
sg547
I01
sg524
(lp953
sg550
(dp954
sg526
I00
sg552
I00
sg553
g588
sg527
I00
sg528
(lp955
sg555
g588
sbsg510
g590
sg553
g585
sg518
g520
sg555
g585
sbsg546
I00
sg510
g588
sg547
I01
sg524
(lp956
sg550
(dp957
sg526
I00
sg552
I00
sg553
g583
sg527
I00
sg528
(lp958
sg555
g1
(g505
g506
V3.7-ck1-broken-out.tar.bz2
tRp959
(dp960
g509
Nsg510
g585
sg553
Nsg518
g583
sg555
g583
sbsbsg546
I00
sg510
g959
sg547
I00
sg524
(lp961
(Vhref
p962
Vhttp://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/3.7-ck1-broken-out.tar.bz2
p963
tp964
asg550
(dp965
g962
g963
sg503
g504
sg253
g959
ssg526
I00
sg552
I00
sg553
g580
sg527
I00
sg528
(lp966
g959
asg555
g580
sbsg546
I00
sg510
g583
sg547
I01
sg524
(lp967
sg550
(dp968
sg526
I00
sg552
I00
sg553
g578
sg527
I00
sg528
(lp969
sg555
g578
sbsg510
g580
sg553
g575
sg518
g520
sg555
g575
sbsg546
I00
sg510
g578
sg547
I01
sg524
(lp970
sg550
(dp971
sg526
I00
sg552
I00
sg553
g572
sg527
I00
sg528
(lp972
sg555
g572
sbsg546
I00
sg510
g575
sg547
I01
sg524
(lp973
sg550
(dp974
sg526
I00
sg552
I00
sg553
g570
sg527
I00
sg528
(lp975
sg555
g1
(g505
g506
Vpatch-3.7-ck1.lrz
tRp976
(dp977
g509
Nsg510
g572
sg553
Nsg518
g570
sg555
g570
sbsbsg546
I00
sg510
g976
sg547
I00
sg524
(lp978
(Vhref
p979
Vhttp://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patch-3.7-ck1.lrz
p980
tp981
asg550
(dp982
g979
g980
ssg526
I00
sg552
I00
sg553
g567
sg527
I00
sg528
(lp983
g976
asg555
g567
sbsg546
I00
sg510
g570
sg547
I01
sg524
(lp984
sg550
(dp985
sg526
I00
sg552
I00
sg553
g565
sg527
I00
sg528
(lp986
sg555
g565
sbsg510
g567
sg553
g513
sg518
g520
sg555
g513
sbag567
ag570
ag572
ag575
ag578
ag580
ag583
ag585
ag588
ag590
ag593
ag595
ag598
ag601
ag603
ag606
ag608
ag611
ag614
ag616
ag619
ag621
ag624
ag627
ag630
ag632
ag634
ag636
ag639
ag642
ag644
ag646
ag648
ag650
ag652
ag655
ag658
ag660
ag663
ag666
ag668
ag671
ag674
ag676
ag679
ag682
ag684
ag687
ag690
ag692
ag695
ag698
ag700
ag703
ag705
ag708
ag711
ag713
ag716
ag718
ag721
ag724
ag726
ag728
ag730
ag733
ag736
ag738
ag741
ag744
ag746
ag749
ag752
ag754
ag757
ag759
ag762
asg555
g762
sS'tagStack'
p987
(lp988
g520
asg515
I00
sS'smartQuotesTo'
p989
S'html'
p990
sS'nomoretags'
p991
I0
sg510
NsS'literal'
p992
I0
sS'lineno'
p993
I1
sg552
I1
sg553
NsS'parseOnlyThese'
p994
NsS'fromEncoding'
p995
Nsg518
Nsg535
g519
sg546
I00
sS'_SGMLParser__starttag_text'
p996
V<br  />
p997
sg547
I00
sS'offset'
p998
I0
sS'instanceSelfClosingTags'
p999
(dp1000
NNssS'convertEntities'
p1001
NsS'stack'
p1002
(lp1003
sS'quoteStack'
p1004
(lp1005
sg516
V[document]
p1006
sS'markup'
p1007
NsS'rawdata'
p1008
V
sS'lasttag'
p1009
g764
sS'originalEncoding'
p1010
S'utf-8'
p1011
sS'currentTag'
p1012
g520
sS'currentData'
p1013
(lp1014
sbsg535
g519
sg509
g565
sg546
I00
sg510
g565
sg547
I01
sg524
(lp1015
sg550
(dp1016
sg526
I00
sg552
I00
sg553
g544
sg527
I00
sg528
(lp1017
sg555
g507
sbsg553
Nsg518
g544
sg555
g544
sbstRp1018
ag1
(g2
g3
(dp1019
g962
g963
sg503
g504
sg253
g959
stRp1020
ag1
(g2
g3
(dp1021
S'href'
p1022
Vhttp://ck-hack.blogspot.com/feeds/5472708000195561029/comments/default
p1023
sS'type'
p1024
Vapplication/atom+xml
p1025
sS'rel'
p1026
Vreplies
p1027
sS'title'
p1028
VPost Comments
p1029
stRp1030
ag1
(g2
g3
(dp1031
S'href'
p1032
Vhttp://ck-hack.blogspot.com/2012/12/37-ck1-bfs-426-for-linux-37.html#comment-form
p1033
sS'type'
p1034
Vtext/html
p1035
sS'rel'
p1036
Vreplies
p1037
sS'title'
p1038
V73 Comments
p1039
stRp1040
ag1
(g2
g3
(dp1041
S'href'
p1042
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5472708000195561029
p1043
sS'type'
p1044
Vapplication/atom+xml
p1045
sS'rel'
p1046
Vedit
p1047
stRp1048
ag1
(g2
g3
(dp1049
S'href'
p1050
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5472708000195561029
p1051
sS'type'
p1052
Vapplication/atom+xml
p1053
sS'rel'
p1054
Vself
p1055
stRp1056
ag1
(g2
g3
(dp1057
S'href'
p1058
Vhttp://ck-hack.blogspot.com/2012/12/37-ck1-bfs-426-for-linux-37.html
p1059
sS'type'
p1060
Vtext/html
p1061
sS'rel'
p1062
Valternate
p1063
sS'title'
p1064
V3.7-ck1, BFS 426 for linux-3.7
p1065
stRp1066
asg66
(lp1067
g1
(g2
g3
(dp1068
g69
V-ck
p1069
sg71
Vhttp://www.blogger.com/atom/ns#
p1070
sg72
NstRp1071
ag1
(g2
g3
(dp1072
g69
V3.7
p1073
sg71
Vhttp://www.blogger.com/atom/ns#
p1074
sg72
NstRp1075
ag1
(g2
g3
(dp1076
g69
Vgit
p1077
sg71
Vhttp://www.blogger.com/atom/ns#
p1078
sg72
NstRp1079
ag1
(g2
g3
(dp1080
g69
Vbfs
p1081
sg71
Vhttp://www.blogger.com/atom/ns#
p1082
sg72
NstRp1083
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1084
sVthr_total
p1085
V73
p1086
sg238
(lp1087
g1
(g2
g3
(dp1088
g229
g1084
sg233
Vck
p1089
sg242
Vnoreply@blogger.com
p1090
stRp1091
asg237
g1059
sS'author_detail'
p1092
g1
(g2
g3
(dp1093
g229
g1084
sg233
g1089
sg242
g1090
stRp1094
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-5472708000195561029
p1095
sg367
g22
((I2012
I12
I15
I11
I33
I0
I5
I350
I0
t(dtRp1096
sg253
V3.7-ck1, BFS 426 for linux-3.7
p1097
sg255
Vck (noreply@blogger.com)
p1098
sg371
VSome degree of normality has returned to my life, so I bring to you a resync of the BFS cpu scheduler for 3.7, along with the -ck patches to date.<br /><br />Apply to 3.7.x:<br /><a href="http://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patch-3.7-ck1.bz2">patch-3.7-ck1.bz2</a><br />or<br /><a href="http://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patch-3.7-ck1.lrz">patch-3.7-ck1.lrz</a><br /><br />Broken out tarball:<br /><a href="http://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/3.7-ck1-broken-out.tar.bz2">3.7-ck1-broken-out.tar.bz2</a><br />or<br /><a href="http://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/3.7-ck1-broken-out.tar.lrz">3.7-ck1-broken-out.tar.lrz</a><br /><br />Discrete patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.7/3.7-ck1/patches/">patches</a><br /><br />Latest BFS by itself:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/3.7-sched-bfs-426.patch">3.7-sched-bfs-426.patch</a><br /><br /><br />People often ask me why I don't maintain a git tree of my patches or at least BFS and make it easier on myself and those who download it. As it turns out, it is actually less work only for those who download it to have a git tree and would actually be <i>more work</i> for me to maintain a git tree.<br /><br />While I'm sure most people are shaking their head and thinking I'm just some kind of git-phobe, I'll try to explain (Note that I maintain git trees for lrzip <a href="https://github.com/ckolivas/lrzip">https://github.com/ckolivas/lrzip</a> and cgminer <a href="https://github.com/ckolivas/cgminer">https://github.com/ckolivas/cgminer</a>).<br /><br />I do NOT keep track of the linux kernel patches as they come in during the development phase prior to the latest stable release. Unfortunately I simply do not have the time nor the inclination to care on that level any more about linux kernel. However I still do believe quite a lot in what BFS has to offer. If I watched each patch as it came into git, I could simply keep my fork with BFS and merge the linux kernel patches as they came in, resyncing and modifying as it went along with the changes. When new patches go into the kernel, there is a common pattern of many changes occurring shortly after they're merged, with a few fixes going in, some files being moved around a few times, and occasionally the patch backed out when it's found the patch introduces some nasty regression that proves a showstopper to it being released. Each one of these changes - fixes, moves, renames, removal, require a resync if you are maintaining a fork.<br /><br />The way I've coded up the actual BFS patch itself is to be as unobtrusive as possible - it does not actually replace large chunks of code en bloc, just adding files and redirecting builds to use those new files instead of the mainline files. This is done to minimise how much effort it is to resync when new changes come. The vast majority of the time, only trivial changes need to be made for the patch to even apply. Thus applying an old patch to a new kernel just needs fixes to apply (even if it doesn't build). This is usually the first step I do in syncing BFS, and I end up with something like this after fixing the rejects:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/3.7-sched-bfs-425.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/3.7-sched-bfs-425.patch</a><br /><br />This patch is only the 3.6 patch fixing any chunks that don't apply.<br /><br />After that, I go through the incremental changes from mainline 3.6 to 3.7 to see any scheduler related changes that should be applied to BFS to 1. make it build with API changes in mainline and 2. benefit from any new features going into mainline that are relevant to the scheduler in general. I manually add the changes and end up with an incremental patch like this:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-merge.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-merge.patch</a><br />This patch is only merging 3.6-&gt;3.7 changes into BFS itself<br /><br />Finally I actually apply any new changes to BFS since the last major release, bugfixes or improvements as the case may be, as per this patch here:<br /><a href="http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-updates.patch">http://ck.kolivas.org/patches/bfs/3.0/3.7/incremental/bfs425-updates.patch</a><br /><br />Git is an excellent source control tool, but provides me with almost nothing for this sort of process where a patch is synced up after 3 months of development. If I were to have my fork and then start merging all patches between 3.6 and 3.7, it would fail to merge new changes probably dozens and potentially hundreds of times along the way, each requiring manual correction. While merge conflicts are just as easy to resolve with git as they are with patch, they aren't actually <i>easier</i>, and instead of there being conflicts precisely once in the development process, there are likely many with this approach.<br /><br />However git also does not provide me with any way to port new changes from mainline to the BFS patch itself. They still need to be applied manually, and if changes occur along the way between 3.6 stable through 3.7-rc unstable to 3.7 stable, each time a change occurs to mainline, the change needs to be done to BFS. Thus I end up reproducing all the bugfixes, moves, renames and back-outs that mainline does along the way, instead of just doing it once.<br /><br />Hopefully this gives some insight into the process and why git is actually counter-productive to BFS syncing.<br /><br />Enjoy 3.7 BFS.<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />
p1099
sg373
(lp1100
g1
(g2
g3
(dp1101
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1102
sg53
g261
sg262
Nsg263
g1099
stRp1103
asg265
I01
sS'title_detail'
p1104
g1
(g2
g3
(dp1105
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1106
sg53
g269
sg262
Nsg263
g1097
stRp1107
sg382
V2012-12-15T22:33:00.003+11:00
p1108
sg384
(lp1109
g386
aV*
ag387
astRp1110
ag1
(g2
g3
(dp1111
g7
V2012-11-13T11:10:44.638+11:00
p1112
sVgd_image
p1113
(dp1114
S'width'
p1115
V16
p1116
sS'src'
p1117
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1118
sS'rel'
p1119
Vhttp://schemas.google.com/g/2005#thumbnail
p1120
sS'height'
p1121
V16
p1122
ssg21
g22
((I2012
I11
I13
I0
I10
I44
I1
I318
I0
t(dtRp1123
sg24
(lp1124
g1
(g2
g3
(dp1125
S'href'
p1126
Vhttp://ck-hack.blogspot.com/feeds/5799789590688339622/comments/default
p1127
sS'type'
p1128
Vapplication/atom+xml
p1129
sS'rel'
p1130
Vreplies
p1131
sS'title'
p1132
VPost Comments
p1133
stRp1134
ag1
(g2
g3
(dp1135
S'href'
p1136
Vhttp://ck-hack.blogspot.com/2012/11/bfs-related.html#comment-form
p1137
sS'type'
p1138
Vtext/html
p1139
sS'rel'
p1140
Vreplies
p1141
sS'title'
p1142
V17 Comments
p1143
stRp1144
ag1
(g2
g3
(dp1145
S'href'
p1146
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5799789590688339622
p1147
sS'type'
p1148
Vapplication/atom+xml
p1149
sS'rel'
p1150
Vedit
p1151
stRp1152
ag1
(g2
g3
(dp1153
S'href'
p1154
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5799789590688339622
p1155
sS'type'
p1156
Vapplication/atom+xml
p1157
sS'rel'
p1158
Vself
p1159
stRp1160
ag1
(g2
g3
(dp1161
S'href'
p1162
Vhttp://ck-hack.blogspot.com/2012/11/bfs-related.html
p1163
sS'type'
p1164
Vtext/html
p1165
sS'rel'
p1166
Valternate
p1167
sS'title'
p1168
VBFS related
p1169
stRp1170
asg66
(lp1171
g1
(g2
g3
(dp1172
g69
Vbfs
p1173
sg71
Vhttp://www.blogger.com/atom/ns#
p1174
sg72
NstRp1175
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1176
sVthr_total
p1177
V17
p1178
sg238
(lp1179
g1
(g2
g3
(dp1180
g229
g1176
sg233
Vck
p1181
sg242
Vnoreply@blogger.com
p1182
stRp1183
asg237
g1163
sS'author_detail'
p1184
g1
(g2
g3
(dp1185
g229
g1176
sg233
g1181
sg242
g1182
stRp1186
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-5799789590688339622
p1187
sg367
g22
((I2012
I11
I13
I0
I10
I0
I1
I318
I0
t(dtRp1188
sg253
VBFS related
p1189
sg255
Vck (noreply@blogger.com)
p1190
sg371
VUnfortunately my life remains in disarray with respect to dealing with my brother's issues.<br /><br />However a couple of BFS related things came in my mail and I thought I'd share them.<br /><br />One is graysky's performance comparison of current schedulers across various hardware in this comprehensive pdf:<br /><br /><a href="http://repo-ck.com/bench/cpu_schedulers_compared.pdf">cpu_schedulers_compared.pdf</a><br /><br />The second is this rather cute set of T-shirts that Teb had made for himself and his girlfriend:<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://ck.kolivas.org/patches/bfs/BFS_tshirt.jpg" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="320" src="http://ck.kolivas.org/patches/bfs/BFS_tshirt.jpg" width="240" /></a></div><br />
p1191
sg373
(lp1192
g1
(g2
g3
(dp1193
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1194
sg53
g261
sg262
Nsg263
g1191
stRp1195
asg265
I01
sS'title_detail'
p1196
g1
(g2
g3
(dp1197
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1198
sg53
g269
sg262
Nsg263
g1189
stRp1199
sg382
V2012-11-13T11:10:00.001+11:00
p1200
sg384
(lp1201
g386
aV*
ag387
astRp1202
ag1
(g2
g3
(dp1203
g7
V2012-10-20T09:16:59.828+11:00
p1204
sVgd_image
p1205
(dp1206
S'width'
p1207
V16
p1208
sS'src'
p1209
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1210
sS'rel'
p1211
Vhttp://schemas.google.com/g/2005#thumbnail
p1212
sS'height'
p1213
V16
p1214
ssg21
g22
((I2012
I10
I19
I22
I16
I59
I4
I293
I0
t(dtRp1215
sg24
(lp1216
g1
(g2
g3
(dp1217
S'href'
p1218
Vhttp://ck-hack.blogspot.com/feeds/1964606105693591480/comments/default
p1219
sS'type'
p1220
Vapplication/atom+xml
p1221
sS'rel'
p1222
Vreplies
p1223
sS'title'
p1224
VPost Comments
p1225
stRp1226
ag1
(g2
g3
(dp1227
S'href'
p1228
Vhttp://ck-hack.blogspot.com/2012/10/the-vicissitudes-of-life.html#comment-form
p1229
sS'type'
p1230
Vtext/html
p1231
sS'rel'
p1232
Vreplies
p1233
sS'title'
p1234
V41 Comments
p1235
stRp1236
ag1
(g2
g3
(dp1237
S'href'
p1238
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/1964606105693591480
p1239
sS'type'
p1240
Vapplication/atom+xml
p1241
sS'rel'
p1242
Vedit
p1243
stRp1244
ag1
(g2
g3
(dp1245
S'href'
p1246
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/1964606105693591480
p1247
sS'type'
p1248
Vapplication/atom+xml
p1249
sS'rel'
p1250
Vself
p1251
stRp1252
ag1
(g2
g3
(dp1253
S'href'
p1254
Vhttp://ck-hack.blogspot.com/2012/10/the-vicissitudes-of-life.html
p1255
sS'type'
p1256
Vtext/html
p1257
sS'rel'
p1258
Valternate
p1259
sS'title'
p1260
VThe vicissitudes of life
p1261
stRp1262
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1263
sg237
g1255
sg238
(lp1264
g1
(g2
g3
(dp1265
g229
g1263
sg233
Vck
p1266
sg242
Vnoreply@blogger.com
p1267
stRp1268
asS'author_detail'
p1269
g1
(g2
g3
(dp1270
g229
g1263
sg233
g1266
sg242
g1267
stRp1271
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-1964606105693591480
p1272
sg367
g22
((I2012
I10
I13
I9
I11
I0
I5
I287
I0
t(dtRp1273
sg253
VThe vicissitudes of life
p1274
sg255
Vck (noreply@blogger.com)
p1275
sg371
V<div style="text-align: center;"><b><span style="font-size: x-large;">\u4e03\u8ee2\u516b\u8d77</span></b></div><div style="text-align: left;"><br /></div><div style="text-align: left;">I realise in this world there are people with far worse tragedies and far worse issues to deal with than my own so I've been reluctant to make a big deal of my own issues online, even though I have a mildly public persona. However I've been touched by the many warm wishes people have sent me over the last month when I mentioned that I had a family tragedy to deal with which was keeping me offline, despite the fact most of you did not even know what it was. </div><div style="text-align: left;"><br /></div><div style="text-align: left;">While I usually prefer to keep my private life separate from my online life, many of you have asked what it was that was so traumatic. Initially it was very difficult to talk about but now I find it somewhat helpful to speak about.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">I'm from a family that has always been very close and I have two older brothers. On the Australian Father's day, 2nd September, my eldest brother George, who is the father of&nbsp; two himself, was involved in a motor vehicle accident which gave him critical head injuries. Unfortunately he has been left with massive brain damage with very little prospect of recovery. He also had asked me many years previously to be his enduring power of attorney. Over the last month I have had to deal with the grief of his (effective) loss, been the medical contact for the family since I'm the only doctor in the family, deal with issues of choices to do with end-of-life decision making versus potential life in a vegetative state, support for various people affected by this tragedy, dealing with lawyers, financial institutions, credit card companies, utilities, gaining access to email, work authorities, insurance bodies and so on. The "system" does not seem well set up to take over someone's life if they're indefinitely incapacitated.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">I don't really wish to go into any greater detail about this online, but suffice to say it has been the worst month of my life and I wouldn't wish this on my worst enemies.<br /><br />And yes, my parents are still alive, and they are, without doubt, taking this the hardest.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">The only good news, I guess, is that I'm working towards what I call the "new normal" in my life. I'll be hacking on BFS and -ck again fairly soon.<br /><br />-ck<br /><br />P.S. BFS and -ck for 3.6 is up in the usual place...<br /><br />EDIT: Courtesy of&nbsp; Matthias Kohler, this patch may fix boot issues if you have them:<br /><a href="http://ck.kolivas.org/patches/3.0/3.6/3.6-ck1/Fix\u005c%20boot\u005c%20issue\u005c%20with\u005c%20BFS\u005c%20and\u005c%20linux-3.6.patch">http://ck.kolivas.org/patches/3.0/3.6/3.6-ck1/Fix\u005c%20boot\u005c%20issue\u005c%20with\u005c%20BFS\u005c%20and\u005c%20linux-3.6.patch</a></div>
p1276
sg373
(lp1277
g1
(g2
g3
(dp1278
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1279
sg53
g261
sg262
Nsg263
V<div style="text-align: center;"><b><span style="font-size: x-large;">\u4e03\u8ee2\u516b\u8d77</span></b></div><div style="text-align: left;"><br /></div><div style="text-align: left;">I realise in this world there are people with far worse tragedies and far worse issues to deal with than my own so I've been reluctant to make a big deal of my own issues online, even though I have a mildly public persona. However I've been touched by the many warm wishes people have sent me over the last month when I mentioned that I had a family tragedy to deal with which was keeping me offline, despite the fact most of you did not even know what it was. </div><div style="text-align: left;"><br /></div><div style="text-align: left;">While I usually prefer to keep my private life separate from my online life, many of you have asked what it was that was so traumatic. Initially it was very difficult to talk about but now I find it somewhat helpful to speak about.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">I'm from a family that has always been very close and I have two older brothers. On the Australian Father's day, 2nd September, my eldest brother George, who is the father of&nbsp; two himself, was involved in a motor vehicle accident which gave him critical head injuries. Unfortunately he has been left with massive brain damage with very little prospect of recovery. He also had asked me many years previously to be his enduring power of attorney. Over the last month I have had to deal with the grief of his (effective) loss, been the medical contact for the family since I'm the only doctor in the family, deal with issues of choices to do with end-of-life decision making versus potential life in a vegetative state, support for various people affected by this tragedy, dealing with lawyers, financial institutions, credit card companies, utilities, gaining access to email, work authorities, insurance bodies and so on. The "system" does not seem well set up to take over someone's life if they're indefinitely incapacitated.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">I don't really wish to go into any greater detail about this online, but suffice to say it has been the worst month of my life and I wouldn't wish this on my worst enemies.<br /><br />And yes, my parents are still alive, and they are, without doubt, taking this the hardest.</div><div style="text-align: left;"><br /></div><div style="text-align: left;">The only good news, I guess, is that I'm working towards what I call the "new normal" in my life. I'll be hacking on BFS and -ck again fairly soon.<br /><br />-ck<br /><br />P.S. BFS and -ck for 3.6 is up in the usual place...<br /><br />EDIT: Courtesy of&nbsp; Matthias Kohler, this patch may fix boot issues if you have them:<br /><a href="http://ck.kolivas.org/patches/3.0/3.6/3.6-ck1/Fix\u005c%20boot\u005c%20issue\u005c%20with\u005c%20BFS\u005c%20and\u005c%20linux-3.6.patch">http://ck.kolivas.org/patches/3.0/3.6/3.6-ck1/Fix\u005c%20boot\u005c%20issue\u005c%20with\u005c%20BFS\u005c%20and\u005c%20linux-3.6.patch</a></div>
p1280
stRp1281
asg265
I01
sS'title_detail'
p1282
g1
(g2
g3
(dp1283
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1284
sg53
g269
sg262
Nsg263
g1274
stRp1285
sVthr_total
p1286
V41
p1287
sg382
V2012-10-13T20:11:00.003+11:00
p1288
sg384
(lp1289
g386
aV*
ag387
astRp1290
ag1
(g2
g3
(dp1291
g7
V2012-08-16T14:07:45.041+10:00
p1292
sVgd_image
p1293
(dp1294
S'width'
p1295
V16
p1296
sS'src'
p1297
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1298
sS'rel'
p1299
Vhttp://schemas.google.com/g/2005#thumbnail
p1300
sS'height'
p1301
V16
p1302
ssg21
g22
((I2012
I8
I16
I4
I7
I45
I3
I229
I0
t(dtRp1303
sg24
(lp1304
g1
(g2
g3
(dp1305
Vhref
p1306
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.bz2
p1307
sg503
g504
sg253
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.bz2
tRp1308
(dp1309
g509
Nsg510
g1
(g511
g512
NtRp1310
(dp1311
g515
I00
sg516
Vbr
p1312
sg518
g1
(g511
g512
NtRp1313
(dp1314
g515
I00
sg516
Vpre
p1315
sg518
g1
(g519
g512
NtRp1316
(dp1317
g522
Nsg523
I0
sg509
Nsg524
(lp1318
sg526
I00
sg527
I00
sg528
(lp1319
g1
(g505
g506
VThanks to those who have been providing interim patches porting BFS to linux 3.5 while I've been busy!  Finally I found some downtime from my current coding contract work to port BFS and -ck to linux 3.5, and here is the announce below:   
tRp1320
(dp1321
g509
g1
(g511
g512
NtRp1322
(dp1323
g515
I00
sg516
Vbr
p1324
sg518
g1316
sg535
g519
sg509
g1
(g511
g512
NtRp1325
(dp1326
g515
I00
sg516
Vpre
p1327
sg518
g1316
sg535
g519
sg509
g1
(g511
g512
NtRp1328
(dp1329
g515
I00
sg516
Vpre
p1330
sg518
g1316
sg535
g519
sg509
g1313
sg546
I00
sg510
g1
(g505
g506
V&nbsp;
tRp1331
(dp1332
g509
Nsg510
g1313
sg553
Nsg518
g1328
sg555
g1328
sbsg547
I00
sg524
(lp1333
sg550
(dp1334
sg526
I00
sg552
I00
sg553
g1325
sg527
I00
sg528
(lp1335
g1331
asg555
g1
(g505
g506
V&nbsp;
tRp1336
(dp1337
g509
Nsg510
g1328
sg553
Nsg518
g1325
sg555
g1325
sbsbsg546
I00
sg510
g1336
sg547
I00
sg524
(lp1338
sg550
(dp1339
sg526
I00
sg552
I00
sg553
g1322
sg527
I00
sg528
(lp1340
g1336
asg555
g1322
sbsg546
I00
sg510
g1325
sg547
I01
sg524
(lp1341
sg550
(dp1342
sg526
I00
sg552
I00
sg553
g1320
sg527
I00
sg528
(lp1343
sg555
g1320
sbsg510
g1322
sg553
Nsg518
g1316
sg555
Nsbag1322
ag1325
ag1328
ag1313
asg555
g1
(g511
g512
NtRp1344
(dp1345
g515
I00
sg516
Vbr
p1346
sg518
g1313
sg535
g519
sg509
Nsg546
I00
sg510
Nsg547
I01
sg524
(lp1347
sg550
(dp1348
sg526
I00
sg552
I00
sg553
g1
(g505
g506
V-ck
tRp1349
(dp1350
g509
g1344
sg510
g1344
sg553
g1
(g511
g512
NtRp1351
(dp1352
g515
I00
sg516
Vbr
p1353
sg518
g1313
sg535
g519
sg509
g1349
sg546
I00
sg510
g1349
sg547
I01
sg524
(lp1354
sg550
(dp1355
sg526
I00
sg552
I00
sg553
g1
(g505
g506
V-- 
tRp1356
(dp1357
g509
g1351
sg510
g1351
sg553
g1
(g511
g512
NtRp1358
(dp1359
g515
I00
sg516
Vbr
p1360
sg518
g1313
sg535
g519
sg509
g1356
sg546
I00
sg510
g1356
sg547
I01
sg524
(lp1361
sg550
(dp1362
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1363
(dp1364
g515
I00
sg516
Vbr
p1365
sg518
g1313
sg535
g519
sg509
g1358
sg546
I00
sg510
g1358
sg547
I01
sg524
(lp1366
sg550
(dp1367
sg526
I00
sg552
I00
sg553
g1
(g505
g506
V\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044
tRp1368
(dp1369
g509
g1363
sg510
g1363
sg553
g1
(g511
g512
NtRp1370
(dp1371
g515
I00
sg516
Vbr
p1372
sg518
g1313
sg535
g519
sg509
g1368
sg546
I00
sg510
g1368
sg547
I01
sg524
(lp1373
sg550
(dp1374
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VEnjoy!
tRp1375
(dp1376
g509
g1370
sg510
g1370
sg553
g1
(g511
g512
NtRp1377
(dp1378
g515
I00
sg516
Vbr
p1379
sg518
g1313
sg535
g519
sg509
g1375
sg546
I00
sg510
g1375
sg547
I01
sg524
(lp1380
sg550
(dp1381
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1382
(dp1383
g515
I00
sg516
Vbr
p1384
sg518
g1313
sg535
g519
sg509
g1377
sg546
I00
sg510
g1377
sg547
I01
sg524
(lp1385
sg550
(dp1386
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vdetriment in its current state, but is code for future development.
tRp1387
(dp1388
g509
g1382
sg510
g1382
sg553
g1
(g511
g512
NtRp1389
(dp1390
g515
I00
sg516
Vbr
p1391
sg518
g1313
sg535
g519
sg509
g1387
sg546
I00
sg510
g1387
sg547
I01
sg524
(lp1392
sg550
(dp1393
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vseries file. It is currently of no demonstrable performance advantage OR 
tRp1394
(dp1395
g509
g1389
sg510
g1389
sg553
g1
(g511
g512
NtRp1396
(dp1397
g515
I00
sg516
Vbr
p1398
sg518
g1313
sg535
g519
sg509
g1394
sg546
I00
sg510
g1394
sg547
I01
sg524
(lp1399
sg550
(dp1400
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vbut can be applied manually at the  end of the series as indicated by the 
tRp1401
(dp1402
g509
g1396
sg510
g1396
sg553
g1
(g511
g512
NtRp1403
(dp1404
g515
I00
sg516
Vbr
p1405
sg518
g1313
sg535
g519
sg509
g1401
sg546
I00
sg510
g1401
sg547
I01
sg524
(lp1406
sg550
(dp1407
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vrunqueue in BFS to use the urwlocks. These are NOT applied in the -ck1 patch, 
tRp1408
(dp1409
g509
g1403
sg510
g1403
sg553
g1
(g511
g512
NtRp1410
(dp1411
g515
I00
sg516
Vbr
p1412
sg518
g1313
sg535
g519
sg509
g1408
sg546
I00
sg510
g1408
sg547
I01
sg524
(lp1413
sg550
(dp1414
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vinclude the upgradeable rwlocks patch, and a modification of the global 
tRp1415
(dp1416
g509
g1410
sg510
g1410
sg553
g1
(g511
g512
NtRp1417
(dp1418
g515
I00
sg516
Vbr
p1419
sg518
g1313
sg535
g519
sg509
g1415
sg546
I00
sg510
g1415
sg547
I01
sg524
(lp1420
sg550
(dp1421
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VThis is a resync from 3.4-ck3. However, the broken out tarballs above also 
tRp1422
(dp1423
g509
g1417
sg510
g1417
sg553
g1
(g511
g512
NtRp1424
(dp1425
g515
I00
sg516
Vbr
p1426
sg518
g1313
sg535
g519
sg509
g1422
sg546
I00
sg510
g1422
sg547
I01
sg524
(lp1427
sg550
(dp1428
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1429
(dp1430
g515
I00
sg516
Vbr
p1431
sg518
g1313
sg535
g519
sg509
g1424
sg546
I00
sg510
g1424
sg547
I01
sg524
(lp1432
sg550
(dp1433
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1434
(dp1435
g515
I00
sg516
Vbr
p1436
sg518
g1313
sg535
g519
sg509
g1429
sg546
I00
sg510
g1429
sg547
I01
sg524
(lp1437
sg550
(dp1438
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1439
(dp1440
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1434
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck-hack.blogspot.com/
tRp1441
(dp1442
g509
Nsg510
g1434
sg553
Nsg518
g1439
sg555
g1439
sbsg547
I00
sg524
(lp1443
(Vhref
p1444
Vhttp://ck-hack.blogspot.com/
p1445
tp1446
asg550
(dp1447
g1444
g1445
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1448
(dp1449
g515
I00
sg516
Vbr
p1450
sg518
g1313
sg535
g519
sg509
g1439
sg546
I00
sg510
g1439
sg547
I01
sg524
(lp1451
sg550
(dp1452
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VCode blog when I feel like it:
tRp1453
(dp1454
g509
g1448
sg510
g1448
sg553
g1
(g511
g512
NtRp1455
(dp1456
g515
I00
sg516
Vbr
p1457
sg518
g1313
sg535
g519
sg509
g1453
sg546
I00
sg510
g1453
sg547
I01
sg524
(lp1458
sg550
(dp1459
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1460
(dp1461
g515
I00
sg516
Vbr
p1462
sg518
g1313
sg535
g519
sg509
g1455
sg546
I00
sg510
g1455
sg547
I01
sg524
(lp1463
sg550
(dp1464
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1465
(dp1466
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1460
sg546
I00
sg510
g1
(g505
g506
Vhttp://kernel.kolivas.org
tRp1467
(dp1468
g509
Nsg510
g1460
sg553
Nsg518
g1465
sg555
g1465
sbsg547
I00
sg524
(lp1469
(Vhref
p1470
Vhttp://kernel.kolivas.org/
p1471
tp1472
asg550
(dp1473
g1470
g1471
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1474
(dp1475
g515
I00
sg516
Vbr
p1476
sg518
g1313
sg535
g519
sg509
g1465
sg546
I00
sg510
g1465
sg547
I01
sg524
(lp1477
sg550
(dp1478
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VWeb:
tRp1479
(dp1480
g509
g1474
sg510
g1474
sg553
g1
(g511
g512
NtRp1481
(dp1482
g515
I00
sg516
Vbr
p1483
sg518
g1313
sg535
g519
sg509
g1479
sg546
I00
sg510
g1479
sg547
I01
sg524
(lp1484
sg550
(dp1485
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1486
(dp1487
g515
I00
sg516
Vbr
p1488
sg518
g1313
sg535
g519
sg509
g1481
sg546
I00
sg510
g1481
sg547
I01
sg524
(lp1489
sg550
(dp1490
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1491
(dp1492
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1486
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/bfs/3.5.0/3.5-sched-bfs-424.patch
tRp1493
(dp1494
g509
Nsg510
g1486
sg553
Nsg518
g1491
sg555
g1491
sbsg547
I00
sg524
(lp1495
(Vhref
p1496
Vhttp://ck.kolivas.org/patches/bfs/3.5.0/3.5-sched-bfs-424.patch
p1497
tp1498
asg550
(dp1499
g1496
g1497
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1500
(dp1501
g515
I00
sg516
Vbr
p1502
sg518
g1313
sg535
g519
sg509
g1491
sg546
I00
sg510
g1491
sg547
I01
sg524
(lp1503
sg550
(dp1504
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VLatest BFS by itself:
tRp1505
(dp1506
g509
g1500
sg510
g1500
sg553
g1
(g511
g512
NtRp1507
(dp1508
g515
I00
sg516
Vbr
p1509
sg518
g1313
sg535
g519
sg509
g1505
sg546
I00
sg510
g1505
sg547
I01
sg524
(lp1510
sg550
(dp1511
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1512
(dp1513
g515
I00
sg516
Vbr
p1514
sg518
g1313
sg535
g519
sg509
g1507
sg546
I00
sg510
g1507
sg547
I01
sg524
(lp1515
sg550
(dp1516
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1517
(dp1518
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1512
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patches/
tRp1519
(dp1520
g509
Nsg510
g1512
sg553
Nsg518
g1517
sg555
g1517
sbsg547
I00
sg524
(lp1521
(Vhref
p1522
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patches/
p1523
tp1524
asg550
(dp1525
g1522
g1523
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1526
(dp1527
g515
I00
sg516
Vbr
p1528
sg518
g1313
sg535
g519
sg509
g1517
sg546
I00
sg510
g1517
sg547
I01
sg524
(lp1529
sg550
(dp1530
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VDiscrete patches:
tRp1531
(dp1532
g509
g1526
sg510
g1526
sg553
g1
(g511
g512
NtRp1533
(dp1534
g515
I00
sg516
Vbr
p1535
sg518
g1313
sg535
g519
sg509
g1531
sg546
I00
sg510
g1531
sg547
I01
sg524
(lp1536
sg550
(dp1537
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1538
(dp1539
g515
I00
sg516
Vbr
p1540
sg518
g1313
sg535
g519
sg509
g1533
sg546
I00
sg510
g1533
sg547
I01
sg524
(lp1541
sg550
(dp1542
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1543
(dp1544
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1538
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.lrz
tRp1545
(dp1546
g509
Nsg510
g1538
sg553
Nsg518
g1543
sg555
g1543
sbsg547
I00
sg524
(lp1547
(Vhref
p1548
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.lrz
p1549
tp1550
asg550
(dp1551
g1548
g1549
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1552
(dp1553
g515
I00
sg516
Vbr
p1554
sg518
g1313
sg535
g519
sg509
g1543
sg546
I00
sg510
g1543
sg547
I01
sg524
(lp1555
sg550
(dp1556
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vor
tRp1557
(dp1558
g509
g1552
sg510
g1552
sg553
g1
(g511
g512
NtRp1559
(dp1560
g515
I00
sg516
Vbr
p1561
sg518
g1313
sg535
g519
sg509
g1557
sg546
I00
sg510
g1557
sg547
I01
sg524
(lp1562
sg550
(dp1563
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1564
(dp1565
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1559
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.bz2
tRp1566
(dp1567
g509
Nsg510
g1559
sg553
Nsg518
g1564
sg555
g1564
sbsg547
I00
sg524
(lp1568
(Vhref
p1569
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.bz2
p1570
tp1571
asg550
(dp1572
g1569
g1570
sg503
g504
sg253
g1566
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1573
(dp1574
g515
I00
sg516
Vbr
p1575
sg518
g1313
sg535
g519
sg509
g1564
sg546
I00
sg510
g1564
sg547
I01
sg524
(lp1576
sg550
(dp1577
sg526
I00
sg552
I00
sg553
g1
(g505
g506
VBroken out tarball:
tRp1578
(dp1579
g509
g1573
sg510
g1573
sg553
g1
(g511
g512
NtRp1580
(dp1581
g515
I00
sg516
Vbr
p1582
sg518
g1313
sg535
g519
sg509
g1578
sg546
I00
sg510
g1578
sg547
I01
sg524
(lp1583
sg550
(dp1584
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1585
(dp1586
g515
I00
sg516
Vbr
p1587
sg518
g1313
sg535
g519
sg509
g1580
sg546
I00
sg510
g1580
sg547
I01
sg524
(lp1588
sg550
(dp1589
sg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1590
(dp1591
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1585
sg546
I00
sg510
g1
(g505
g506
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.lrz
tRp1592
(dp1593
g509
Nsg510
g1585
sg553
Nsg518
g1590
sg555
g1590
sbsg547
I00
sg524
(lp1594
(Vhref
p1595
Vhttp://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.lrz
p1596
tp1597
asg550
(dp1598
g1595
g1596
ssg526
I00
sg552
I00
sg553
g1
(g511
g512
NtRp1599
(dp1600
g515
I00
sg516
Vbr
p1601
sg518
g1313
sg535
g519
sg509
g1590
sg546
I00
sg510
g1590
sg547
I01
sg524
(lp1602
sg550
(dp1603
sg526
I00
sg552
I00
sg553
g1
(g505
g506
Vor
tRp1604
(dp1605
g509
g1599
sg510
g1599
sg553
g1310
sg518
g1313
sg555
g1310
sbsg527
I00
sg528
(lp1606
sg555
g1604
sbsg527
I00
sg528
(lp1607
g1592
asg555
g1599
sbsg527
I00
sg528
(lp1608
sg555
g1592
sbsg527
I00
sg528
(lp1609
sg555
g1585
sbsg518
g1313
sg555
g1580
sbsg527
I00
sg528
(lp1610
sg555
g1578
sbsg527
I00
sg528
(lp1611
g1566
asg555
g1573
sbsg527
I00
sg528
(lp1612
sg555
g1566
sbsg518
g1313
sg555
g1559
sbsg527
I00
sg528
(lp1613
sg555
g1557
sbsg527
I00
sg528
(lp1614
g1545
asg555
g1552
sbsg527
I00
sg528
(lp1615
sg555
g1545
sbsg527
I00
sg528
(lp1616
sg555
g1538
sbsg518
g1313
sg555
g1533
sbsg527
I00
sg528
(lp1617
sg555
g1531
sbsg527
I00
sg528
(lp1618
g1519
asg555
g1526
sbsg527
I00
sg528
(lp1619
sg555
g1519
sbsg527
I00
sg528
(lp1620
sg555
g1512
sbsg518
g1313
sg555
g1507
sbsg527
I00
sg528
(lp1621
sg555
g1505
sbsg527
I00
sg528
(lp1622
g1493
asg555
g1500
sbsg527
I00
sg528
(lp1623
sg555
g1493
sbsg527
I00
sg528
(lp1624
sg555
g1486
sbsg518
g1313
sg555
g1481
sbsg527
I00
sg528
(lp1625
sg555
g1479
sbsg527
I00
sg528
(lp1626
g1467
asg555
g1474
sbsg527
I00
sg528
(lp1627
sg555
g1467
sbsg527
I00
sg528
(lp1628
sg555
g1460
sbsg518
g1313
sg555
g1455
sbsg527
I00
sg528
(lp1629
sg555
g1453
sbsg527
I00
sg528
(lp1630
g1441
asg555
g1448
sbsg527
I00
sg528
(lp1631
sg555
g1441
sbsg527
I00
sg528
(lp1632
sg555
g1434
sbsg527
I00
sg528
(lp1633
sg555
g1429
sbsg518
g1313
sg555
g1424
sbsg527
I00
sg528
(lp1634
sg555
g1422
sbsg518
g1313
sg555
g1417
sbsg527
I00
sg528
(lp1635
sg555
g1415
sbsg518
g1313
sg555
g1410
sbsg527
I00
sg528
(lp1636
sg555
g1408
sbsg518
g1313
sg555
g1403
sbsg527
I00
sg528
(lp1637
sg555
g1401
sbsg518
g1313
sg555
g1396
sbsg527
I00
sg528
(lp1638
sg555
g1394
sbsg518
g1313
sg555
g1389
sbsg527
I00
sg528
(lp1639
sg555
g1387
sbsg527
I00
sg528
(lp1640
sg555
g1382
sbsg518
g1313
sg555
g1377
sbsg527
I00
sg528
(lp1641
sg555
g1375
sbsg518
g1313
sg555
g1370
sbsg527
I00
sg528
(lp1642
sg555
g1368
sbsg527
I00
sg528
(lp1643
sg555
g1363
sbsg518
g1313
sg555
g1358
sbsg527
I00
sg528
(lp1644
sg555
g1356
sbsg518
g1313
sg555
g1351
sbsg527
I00
sg528
(lp1645
sg555
g1349
sbsg987
(lp1646
g1316
asg515
I00
sg989
g990
sg991
I0
sg510
Nsg992
I0
sg993
I1
sg552
I1
sg553
Nsg994
Nsg995
Nsg518
Nsg535
g519
sg546
I00
sg996
V<br  />
p1647
sg547
I00
sg998
I0
sg999
(dp1648
NNssg1001
Nsg1002
(lp1649
sg1004
(lp1650
sg516
g1006
sg1007
Nsg1008
V
sg1009
g1346
sg1010
g1011
sg1012
g1316
sg1013
(lp1651
sbsg535
g519
sg509
Nsg546
I00
sg510
g1
(g505
g506
VThese are patches designed to improve system responsiveness and
tRp1652
(dp1653
g509
g1
(g511
g512
NtRp1654
(dp1655
g515
I00
sg516
Vbr
p1656
sg518
g1313
sg535
g519
sg509
g1
(g505
g506
Vinteractivity with specific emphasis on the desktop, but suitable to
tRp1657
(dp1658
g509
g1
(g511
g512
NtRp1659
(dp1660
g515
I00
sg516
Vbr
p1661
sg518
g1313
sg535
g519
sg509
g1
(g505
g506
Vany commodity hardware workload.
tRp1662
(dp1663
g509
g1
(g511
g512
NtRp1664
(dp1665
g515
I00
sg516
Vbr
p1666
sg518
g1313
sg535
g519
sg509
g1
(g511
g512
NtRp1667
(dp1668
g515
I00
sg516
Vbr
p1669
sg518
g1313
sg535
g519
sg509
g1
(g505
g506
VApply to 3.5.x:
tRp1670
(dp1671
g509
g1
(g511
g512
NtRp1672
(dp1673
g515
I00
sg516
Vbr
p1674
sg518
g1313
sg535
g519
sg509
g1
(g511
g512
NtRp1675
(dp1676
g515
I00
sg516
Va
sg518
g1313
sg535
g519
sg509
g1310
sg546
I00
sg510
g1308
sg547
I00
sg524
(lp1677
(g1306
g1307
tp1678
asg550
(dp1679
g1306
g1307
sg503
g504
sg253
g1308
ssg526
I00
sg552
I00
sg553
g1672
sg527
I00
sg528
(lp1680
g1308
asg555
g1672
sbsg546
I00
sg510
g1675
sg547
I01
sg524
(lp1681
sg550
(dp1682
sg526
I00
sg552
I00
sg553
g1670
sg527
I00
sg528
(lp1683
sg555
g1670
sbsg510
g1672
sg553
g1667
sg518
g1313
sg555
g1667
sbsg546
I00
sg510
g1670
sg547
I01
sg524
(lp1684
sg550
(dp1685
sg526
I00
sg552
I00
sg553
g1664
sg527
I00
sg528
(lp1686
sg555
g1664
sbsg546
I00
sg510
g1667
sg547
I01
sg524
(lp1687
sg550
(dp1688
sg526
I00
sg552
I00
sg553
g1662
sg527
I00
sg528
(lp1689
sg555
g1662
sbsg510
g1664
sg553
g1659
sg518
g1313
sg555
g1659
sbsg546
I00
sg510
g1662
sg547
I01
sg524
(lp1690
sg550
(dp1691
sg526
I00
sg552
I00
sg553
g1657
sg527
I00
sg528
(lp1692
sg555
g1657
sbsg510
g1659
sg553
g1654
sg518
g1313
sg555
g1654
sbsg546
I00
sg510
g1657
sg547
I01
sg524
(lp1693
sg550
(dp1694
sg526
I00
sg552
I00
sg553
g1652
sg527
I00
sg528
(lp1695
sg555
g1652
sbsg510
g1654
sg553
Nsg518
g1313
sg555
g1313
sbsg547
I00
sg524
(lp1696
sg550
(dp1697
sg526
I00
sg552
I00
sg553
g1328
sg527
I00
sg528
(lp1698
g1652
ag1654
ag1657
ag1659
ag1662
ag1664
ag1667
ag1670
ag1672
ag1675
ag1310
ag1604
ag1599
ag1590
ag1585
ag1580
ag1578
ag1573
ag1564
ag1559
ag1557
ag1552
ag1543
ag1538
ag1533
ag1531
ag1526
ag1517
ag1512
ag1507
ag1505
ag1500
ag1491
ag1486
ag1481
ag1479
ag1474
ag1465
ag1460
ag1455
ag1453
ag1448
ag1439
ag1434
ag1429
ag1424
ag1422
ag1417
ag1415
ag1410
ag1408
ag1403
ag1401
ag1396
ag1394
ag1389
ag1387
ag1382
ag1377
ag1375
ag1370
ag1368
ag1363
ag1358
ag1356
ag1351
ag1349
ag1344
asg555
g1331
sbsg535
g519
sg509
g1604
sg546
I00
sg510
g1604
sg547
I01
sg524
(lp1699
sg550
(dp1700
sg526
I00
sg552
I00
sg553
g1675
sg527
I00
sg528
(lp1701
sg555
g1308
sbsg553
Nsg518
g1675
sg555
g1675
sbstRp1702
ag1
(g2
g3
(dp1703
g1569
g1570
sg503
g504
sg253
g1566
stRp1704
ag1
(g2
g3
(dp1705
S'href'
p1706
Vhttp://ck-hack.blogspot.com/feeds/819287283668653493/comments/default
p1707
sS'type'
p1708
Vapplication/atom+xml
p1709
sS'rel'
p1710
Vreplies
p1711
sS'title'
p1712
VPost Comments
p1713
stRp1714
ag1
(g2
g3
(dp1715
S'href'
p1716
Vhttp://ck-hack.blogspot.com/2012/08/35-ck1-bfs-424-for-linux-35.html#comment-form
p1717
sS'type'
p1718
Vtext/html
p1719
sS'rel'
p1720
Vreplies
p1721
sS'title'
p1722
V116 Comments
p1723
stRp1724
ag1
(g2
g3
(dp1725
S'href'
p1726
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/819287283668653493
p1727
sS'type'
p1728
Vapplication/atom+xml
p1729
sS'rel'
p1730
Vedit
p1731
stRp1732
ag1
(g2
g3
(dp1733
S'href'
p1734
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/819287283668653493
p1735
sS'type'
p1736
Vapplication/atom+xml
p1737
sS'rel'
p1738
Vself
p1739
stRp1740
ag1
(g2
g3
(dp1741
S'href'
p1742
Vhttp://ck-hack.blogspot.com/2012/08/35-ck1-bfs-424-for-linux-35.html
p1743
sS'type'
p1744
Vtext/html
p1745
sS'rel'
p1746
Valternate
p1747
sS'title'
p1748
V3.5-ck1, BFS 424 for linux-3.5
p1749
stRp1750
asg66
(lp1751
g1
(g2
g3
(dp1752
g69
V-ck
p1753
sg71
Vhttp://www.blogger.com/atom/ns#
p1754
sg72
NstRp1755
ag1
(g2
g3
(dp1756
g69
Vurwlocks
p1757
sg71
Vhttp://www.blogger.com/atom/ns#
p1758
sg72
NstRp1759
ag1
(g2
g3
(dp1760
g69
V3.5.0
p1761
sg71
Vhttp://www.blogger.com/atom/ns#
p1762
sg72
NstRp1763
ag1
(g2
g3
(dp1764
g69
Vbfs
p1765
sg71
Vhttp://www.blogger.com/atom/ns#
p1766
sg72
NstRp1767
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1768
sVthr_total
p1769
V116
p1770
sg238
(lp1771
g1
(g2
g3
(dp1772
g229
g1768
sg233
Vck
p1773
sg242
Vnoreply@blogger.com
p1774
stRp1775
asg237
g1743
sS'author_detail'
p1776
g1
(g2
g3
(dp1777
g229
g1768
sg233
g1773
sg242
g1774
stRp1778
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-819287283668653493
p1779
sg367
g22
((I2012
I8
I16
I4
I7
I0
I3
I229
I0
t(dtRp1780
sg253
V3.5-ck1, BFS 424 for linux-3.5
p1781
sg255
Vck (noreply@blogger.com)
p1782
sg371
VThanks to those who have been providing interim patches porting BFS to linux 3.5 while I've been busy!  Finally I found some downtime from my current coding contract work to port BFS and -ck to linux 3.5, and here is the announce below:   <br /><pre>&nbsp;</pre><pre>&nbsp;</pre><pre>These are patches designed to improve system responsiveness and<br />interactivity with specific emphasis on the desktop, but suitable to<br />any commodity hardware workload.<br /><br />Apply to 3.5.x:<br /><a href="http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.bz2">http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.bz2</a><br />or<br /><a href="http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.lrz">http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patch-3.5-ck1.lrz</a><br /><br />Broken out tarball:<br /><a href="http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.bz2">http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.bz2</a><br />or<br /><a href="http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.lrz">http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/3.5-ck1-broken-out.tar.lrz</a><br /><br />Discrete patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patches/">http://ck.kolivas.org/patches/3.0/3.5/3.5-ck1/patches/</a><br /><br />Latest BFS by itself:<br /><a href="http://ck.kolivas.org/patches/bfs/3.5.0/3.5-sched-bfs-424.patch">http://ck.kolivas.org/patches/bfs/3.5.0/3.5-sched-bfs-424.patch</a><br /><br />Web:<br /><a href="http://kernel.kolivas.org/">http://kernel.kolivas.org</a><br /><br />Code blog when I feel like it:<br /><a href="http://ck-hack.blogspot.com/">http://ck-hack.blogspot.com/</a><br /><br /><br />This is a resync from 3.4-ck3. However, the broken out tarballs above also <br />include the upgradeable rwlocks patch, and a modification of the global <br />runqueue in BFS to use the urwlocks. These are NOT applied in the -ck1 patch, <br />but can be applied manually at the  end of the series as indicated by the <br />series file. It is currently of no demonstrable performance advantage OR <br />detriment in its current state, but is code for future development.<br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />-- <br />-ck<br /></pre>
p1783
sg373
(lp1784
g1
(g2
g3
(dp1785
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1786
sg53
g261
sg262
Nsg263
g1783
stRp1787
asg265
I01
sS'title_detail'
p1788
g1
(g2
g3
(dp1789
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1790
sg53
g269
sg262
Nsg263
g1781
stRp1791
sg382
V2012-08-16T14:07:00.004+10:00
p1792
sg384
(lp1793
g386
aV*
ag387
astRp1794
ag1
(g2
g3
(dp1795
g7
V2012-07-31T21:44:15.524+10:00
p1796
sVgd_image
p1797
(dp1798
S'width'
p1799
V16
p1800
sS'src'
p1801
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1802
sS'rel'
p1803
Vhttp://schemas.google.com/g/2005#thumbnail
p1804
sS'height'
p1805
V16
p1806
ssg21
g22
((I2012
I7
I31
I11
I44
I15
I1
I213
I0
t(dtRp1807
sg24
(lp1808
g1
(g2
g3
(dp1809
S'href'
p1810
Vhttp://ck-hack.blogspot.com/feeds/282973505016029251/comments/default
p1811
sS'type'
p1812
Vapplication/atom+xml
p1813
sS'rel'
p1814
Vreplies
p1815
sS'title'
p1816
VPost Comments
p1817
stRp1818
ag1
(g2
g3
(dp1819
S'href'
p1820
Vhttp://ck-hack.blogspot.com/2012/07/bfs-and-ck-delays-for-linux-350.html#comment-form
p1821
sS'type'
p1822
Vtext/html
p1823
sS'rel'
p1824
Vreplies
p1825
sS'title'
p1826
V34 Comments
p1827
stRp1828
ag1
(g2
g3
(dp1829
S'href'
p1830
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/282973505016029251
p1831
sS'type'
p1832
Vapplication/atom+xml
p1833
sS'rel'
p1834
Vedit
p1835
stRp1836
ag1
(g2
g3
(dp1837
S'href'
p1838
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/282973505016029251
p1839
sS'type'
p1840
Vapplication/atom+xml
p1841
sS'rel'
p1842
Vself
p1843
stRp1844
ag1
(g2
g3
(dp1845
S'href'
p1846
Vhttp://ck-hack.blogspot.com/2012/07/bfs-and-ck-delays-for-linux-350.html
p1847
sS'type'
p1848
Vtext/html
p1849
sS'rel'
p1850
Valternate
p1851
sS'title'
p1852
VBFS and -ck delays for linux-3.5.0
p1853
stRp1854
asg66
(lp1855
g1
(g2
g3
(dp1856
g69
V-ck
p1857
sg71
Vhttp://www.blogger.com/atom/ns#
p1858
sg72
NstRp1859
ag1
(g2
g3
(dp1860
g69
V3.5.0
p1861
sg71
Vhttp://www.blogger.com/atom/ns#
p1862
sg72
NstRp1863
ag1
(g2
g3
(dp1864
g69
Vbfs
p1865
sg71
Vhttp://www.blogger.com/atom/ns#
p1866
sg72
NstRp1867
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1868
sVthr_total
p1869
V34
p1870
sg238
(lp1871
g1
(g2
g3
(dp1872
g229
g1868
sg233
Vck
p1873
sg242
Vnoreply@blogger.com
p1874
stRp1875
asg237
g1847
sS'author_detail'
p1876
g1
(g2
g3
(dp1877
g229
g1868
sg233
g1873
sg242
g1874
stRp1878
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-282973505016029251
p1879
sg367
g22
((I2012
I7
I31
I11
I42
I0
I1
I213
I0
t(dtRp1880
sg253
VBFS and -ck delays for linux-3.5.0
p1881
sg255
Vck (noreply@blogger.com)
p1882
sg371
VOnce again I find myself writing a post saying there will be delays with the resync of BFS and -ck for the new linux kernel. This time the reason for most people would be a quite unexpected development. As you may have read on this blog last year, I got invited to interview with Google for a job as a software engineer and then in the end I got turned down due to lack of adequate breadth of knowledge. This was probably for the best for me anyway since I have a full time unrelated career and the jump would have been too great. Anyway a small company noticed the work I had done on cgminer with bitcoin and openCL work and asked if I was interested in writing some software for them. The work involves writing openCL frameworks so they can provide distributed computing capability to clients. They were quire happy to forego any of the regular interview details or pretty much anything that is normally involved in employing someone and before long we started talking contracts instead. Since the work itself actually looked like a lot of fun, I decided to go with the opportunity.<br /><br />Anyway, long story short, I'm doing a little bit of contract work for them and my kernel work will take a slightly lower&nbsp; priority in the meantime. I'm not abandoning it, but it will be delayed some more before the next release. Apologies for any inconvenience this may cause in the interim.
p1883
sg373
(lp1884
g1
(g2
g3
(dp1885
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1886
sg53
g261
sg262
Nsg263
g1883
stRp1887
asg265
I01
sS'title_detail'
p1888
g1
(g2
g3
(dp1889
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1890
sg53
g269
sg262
Nsg263
g1881
stRp1891
sg382
V2012-07-31T21:42:00.002+10:00
p1892
sg384
(lp1893
g386
aV*
ag387
astRp1894
ag1
(g2
g3
(dp1895
g7
V2012-07-13T11:04:59.835+10:00
p1896
sVgd_image
p1897
(dp1898
S'width'
p1899
V16
p1900
sS'src'
p1901
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1902
sS'rel'
p1903
Vhttp://schemas.google.com/g/2005#thumbnail
p1904
sS'height'
p1905
V16
p1906
ssg21
g22
((I2012
I7
I13
I1
I4
I59
I4
I195
I0
t(dtRp1907
sg24
(lp1908
g1
(g2
g3
(dp1909
S'href'
p1910
Vhttp://ck-hack.blogspot.com/feeds/5721299068278273114/comments/default
p1911
sS'type'
p1912
Vapplication/atom+xml
p1913
sS'rel'
p1914
Vreplies
p1915
sS'title'
p1916
VPost Comments
p1917
stRp1918
ag1
(g2
g3
(dp1919
S'href'
p1920
Vhttp://ck-hack.blogspot.com/2012/07/lrzip-0614.html#comment-form
p1921
sS'type'
p1922
Vtext/html
p1923
sS'rel'
p1924
Vreplies
p1925
sS'title'
p1926
V7 Comments
p1927
stRp1928
ag1
(g2
g3
(dp1929
S'href'
p1930
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5721299068278273114
p1931
sS'type'
p1932
Vapplication/atom+xml
p1933
sS'rel'
p1934
Vedit
p1935
stRp1936
ag1
(g2
g3
(dp1937
S'href'
p1938
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5721299068278273114
p1939
sS'type'
p1940
Vapplication/atom+xml
p1941
sS'rel'
p1942
Vself
p1943
stRp1944
ag1
(g2
g3
(dp1945
S'href'
p1946
Vhttp://ck-hack.blogspot.com/2012/07/lrzip-0614.html
p1947
sS'type'
p1948
Vtext/html
p1949
sS'rel'
p1950
Valternate
p1951
sS'title'
p1952
Vlrzip-0.614
p1953
stRp1954
asg66
(lp1955
g1
(g2
g3
(dp1956
g69
Vlrzip
p1957
sg71
Vhttp://www.blogger.com/atom/ns#
p1958
sg72
NstRp1959
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p1960
sVthr_total
p1961
V7
sg238
(lp1962
g1
(g2
g3
(dp1963
g229
g1960
sg233
Vck
p1964
sg242
Vnoreply@blogger.com
p1965
stRp1966
asg237
g1947
sS'author_detail'
p1967
g1
(g2
g3
(dp1968
g229
g1960
sg233
g1964
sg242
g1965
stRp1969
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-5721299068278273114
p1970
sg367
g22
((I2012
I7
I13
I1
I4
I0
I4
I195
I0
t(dtRp1971
sg253
Vlrzip-0.614
p1972
sg255
Vck (noreply@blogger.com)
p1973
sg371
VThis release is a quick hotfix for broken lrztar in lrzip 0.613.<br /><br /><a href="https://freecode.com/projects/long-range-zip">https://freecode.com/projects/long-range-zip</a><br /><br /><br />
p1974
sg373
(lp1975
g1
(g2
g3
(dp1976
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1977
sg53
g261
sg262
Nsg263
g1974
stRp1978
asg265
I01
sS'title_detail'
p1979
g1
(g2
g3
(dp1980
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p1981
sg53
g269
sg262
Nsg263
g1972
stRp1982
sg382
V2012-07-13T11:04:00.003+10:00
p1983
sg384
(lp1984
g386
aV*
ag387
astRp1985
ag1
(g2
g3
(dp1986
g7
V2012-07-08T11:43:40.239+10:00
p1987
sVgd_image
p1988
(dp1989
S'width'
p1990
V16
p1991
sS'src'
p1992
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p1993
sS'rel'
p1994
Vhttp://schemas.google.com/g/2005#thumbnail
p1995
sS'height'
p1996
V16
p1997
ssg21
g22
((I2012
I7
I8
I1
I43
I40
I6
I190
I0
t(dtRp1998
sg24
(lp1999
g1
(g2
g3
(dp2000
S'href'
p2001
Vhttp://ck-hack.blogspot.com/feeds/99315262391797970/comments/default
p2002
sS'type'
p2003
Vapplication/atom+xml
p2004
sS'rel'
p2005
Vreplies
p2006
sS'title'
p2007
VPost Comments
p2008
stRp2009
ag1
(g2
g3
(dp2010
S'href'
p2011
Vhttp://ck-hack.blogspot.com/2012/07/lrzip-0613.html#comment-form
p2012
sS'type'
p2013
Vtext/html
p2014
sS'rel'
p2015
Vreplies
p2016
sS'title'
p2017
V3 Comments
p2018
stRp2019
ag1
(g2
g3
(dp2020
S'href'
p2021
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/99315262391797970
p2022
sS'type'
p2023
Vapplication/atom+xml
p2024
sS'rel'
p2025
Vedit
p2026
stRp2027
ag1
(g2
g3
(dp2028
S'href'
p2029
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/99315262391797970
p2030
sS'type'
p2031
Vapplication/atom+xml
p2032
sS'rel'
p2033
Vself
p2034
stRp2035
ag1
(g2
g3
(dp2036
S'href'
p2037
Vhttp://ck-hack.blogspot.com/2012/07/lrzip-0613.html
p2038
sS'type'
p2039
Vtext/html
p2040
sS'rel'
p2041
Valternate
p2042
sS'title'
p2043
Vlrzip-0.613
p2044
stRp2045
asg66
(lp2046
g1
(g2
g3
(dp2047
g69
Vlrzip
p2048
sg71
Vhttp://www.blogger.com/atom/ns#
p2049
sg72
NstRp2050
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2051
sVthr_total
p2052
V3
sg238
(lp2053
g1
(g2
g3
(dp2054
g229
g2051
sg233
Vck
p2055
sg242
Vnoreply@blogger.com
p2056
stRp2057
asg237
g2038
sS'author_detail'
p2058
g1
(g2
g3
(dp2059
g229
g2051
sg233
g2055
sg242
g2056
stRp2060
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-99315262391797970
p2061
sg367
g22
((I2012
I7
I8
I1
I41
I0
I6
I190
I0
t(dtRp2062
sg253
Vlrzip-0.613
p2063
sg255
Vck (noreply@blogger.com)
p2064
sg371
Vlrzip 0.612 has been out in the wild for a while now and the good news is that there have been very few bug reports in that time. After allowing enough accumulated issues collect in my inbox, I've created a pure-bugfix maintenance release in version 0.613:<br /><br /><a href="https://freecode.com/projects/long-range-zip">long-range-zip 0.613</a><br /><br />One bug of note was that the md5 calculation on files that had compressed blocks greater than 4GB in size was wrong. This was very suspicious for a 32 bit overflow error. Indeed Serge Belyshev did some excellent detective work and found the culprit to be in the glibc implementation of md5, which is used by lrzip. This only affects using the md5 library components, not the md5sum command line utility which uses a different rolling algorithm so glibc userspace never hit it. The bug in question was amusing in the way it shows one of the many naive ways we dealt with 32 bit limitations in the past. It assumed anything larger than a 32bit chunk was just 2^31 + (chunk size modulo 2^31). That means it would never work with a chunk larger than 2^32. The fix has been pushed upstream and is now incorporated into lrzip.<br /><br />Another bug, as reported on this blog by a commenter, was that of creating corrupt very small archives (less than 64 bytes). This has been fixed by disabling the back end compression when the chunk is less than 64 bytes and just using the rzip first stage.<br /><br />A lot of the other work in this release was just getting it to compile&nbsp; on osx. Numerous issues showed up as always, and I didn't have access to an osx machine on the previous release to fix it. This time I used my wife's laptop ;) . One of the issues, for example, was that osx didn't see itself as #ifdef unix, which I thought was a little amusing. Another unexpected surprise was that the default osx filesystem is not case sensitive which caused a conflict lrzip.h vs Lrzip.h. Alas I have no other BSDs to try compiling it on so I'm not sure if they're fixed with this.<br /><br />Interestingly, I still have to disable md5 calculation on the osx build. The md5 is calculated the same on compression and decompression within lrzip, but it disagrees with the result returned from the ports version of md5! This defeats the whole purpose of including md5 in it since the point of it is to have a command line result to compare to. I'm guessing there's an endianness dispute there somewhere and haven't ever tracked it down, since osx has done an endian flip in the past. lrzip still uses crc32 checking of each block internally so it's not like there isn't any integrity checking.<br /><br />Finally what would a release be without some new benchmarks? Nothing performance-wise has changed in lrzip since the last version, <i>but</i> I have access to a 12 thread CPU machine with 32GB of ram now, so I did some quick benchmarks with the classic 10GB virtual image I've been using till now.<br /><br /><br /><pre><br />Compression  Size           Percentage  Compress Time  Decompress Time<br />None         10737418240     100.0<br />gzip          2772899756      25.8       3m56s          2m15s<br />pbzip2        2705814394      25.2       1m41s          1m46s<br />lrzip         1095337763      10.2       2m54s          2m21s<br /></pre> Note that with enough ram and CPU, lrzip is actually faster than gzip (which does compression in place) and comparable on decompression, despite a huge increase in compression. pbzip2 is faster than both but its compression is almost no better than gzip.
p2065
sg373
(lp2066
g1
(g2
g3
(dp2067
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2068
sg53
g261
sg262
Nsg263
g2065
stRp2069
asg265
I01
sS'title_detail'
p2070
g1
(g2
g3
(dp2071
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2072
sg53
g269
sg262
Nsg263
g2063
stRp2073
sg382
V2012-07-08T11:41:00.000+10:00
p2074
sg384
(lp2075
g386
aV*
ag387
astRp2076
ag1
(g2
g3
(dp2077
g7
V2012-07-03T14:10:18.017+10:00
p2078
sVgd_image
p2079
(dp2080
S'width'
p2081
V16
p2082
sS'src'
p2083
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2084
sS'rel'
p2085
Vhttp://schemas.google.com/g/2005#thumbnail
p2086
sS'height'
p2087
V16
p2088
ssg21
g22
((I2012
I7
I3
I4
I10
I18
I1
I185
I0
t(dtRp2089
sg24
(lp2090
g1
(g2
g3
(dp2091
S'href'
p2092
Vhttp://ck-hack.blogspot.com/feeds/2024241853988821902/comments/default
p2093
sS'type'
p2094
Vapplication/atom+xml
p2095
sS'rel'
p2096
Vreplies
p2097
sS'title'
p2098
VPost Comments
p2099
stRp2100
ag1
(g2
g3
(dp2101
S'href'
p2102
Vhttp://ck-hack.blogspot.com/2012/07/bfs-424-linux-34-ck3.html#comment-form
p2103
sS'type'
p2104
Vtext/html
p2105
sS'rel'
p2106
Vreplies
p2107
sS'title'
p2108
V21 Comments
p2109
stRp2110
ag1
(g2
g3
(dp2111
S'href'
p2112
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/2024241853988821902
p2113
sS'type'
p2114
Vapplication/atom+xml
p2115
sS'rel'
p2116
Vedit
p2117
stRp2118
ag1
(g2
g3
(dp2119
S'href'
p2120
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/2024241853988821902
p2121
sS'type'
p2122
Vapplication/atom+xml
p2123
sS'rel'
p2124
Vself
p2125
stRp2126
ag1
(g2
g3
(dp2127
S'href'
p2128
Vhttp://ck-hack.blogspot.com/2012/07/bfs-424-linux-34-ck3.html
p2129
sS'type'
p2130
Vtext/html
p2131
sS'rel'
p2132
Valternate
p2133
sS'title'
p2134
VBFS 424, linux-3.4-ck3
p2135
stRp2136
asg66
(lp2137
g1
(g2
g3
(dp2138
g69
V-ck
p2139
sg71
Vhttp://www.blogger.com/atom/ns#
p2140
sg72
NstRp2141
ag1
(g2
g3
(dp2142
g69
V3.4.0
p2143
sg71
Vhttp://www.blogger.com/atom/ns#
p2144
sg72
NstRp2145
ag1
(g2
g3
(dp2146
g69
Vbfs
p2147
sg71
Vhttp://www.blogger.com/atom/ns#
p2148
sg72
NstRp2149
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2150
sVthr_total
p2151
V21
p2152
sg238
(lp2153
g1
(g2
g3
(dp2154
g229
g2150
sg233
Vck
p2155
sg242
Vnoreply@blogger.com
p2156
stRp2157
asg237
g2129
sS'author_detail'
p2158
g1
(g2
g3
(dp2159
g229
g2150
sg233
g2155
sg242
g2156
stRp2160
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-2024241853988821902
p2161
sg367
g22
((I2012
I7
I3
I4
I10
I0
I1
I185
I0
t(dtRp2162
sg253
VBFS 424, linux-3.4-ck3
p2163
sg255
Vck (noreply@blogger.com)
p2164
sg371
VAs seen on this blog previously, a bug showed up in 3.4-ck2/BFS 423 to do with unplugged I/O management that would lead to severe stalls/hangs. I'm releasing BFS 424 officially and upgrading 3.4-ck2 to 3.4-ck3, incorporating just this one change.<br /><br />BFS 424: <br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4-sched-bfs-424.patch">3.4-sched-bfs-424.patch</a><br /><br />3.4-ck3: <br /><a href="http://ck.kolivas.org/patches/3.0/3.4/3.4-ck3/">3.4-ck3/</a><br /><br /><br />Others on -ck2 can simply apply the incremental patch to be up to date.<br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4bfs423-424.patch">3.4bfs423-424.patch</a><br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />
p2165
sg373
(lp2166
g1
(g2
g3
(dp2167
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2168
sg53
g261
sg262
Nsg263
g2165
stRp2169
asg265
I01
sS'title_detail'
p2170
g1
(g2
g3
(dp2171
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2172
sg53
g269
sg262
Nsg263
g2163
stRp2173
sg382
V2012-07-03T14:10:00.001+10:00
p2174
sg384
(lp2175
g386
aV*
ag387
astRp2176
ag1
(g2
g3
(dp2177
g7
V2012-07-02T08:32:46.411+10:00
p2178
sVgd_image
p2179
(dp2180
S'width'
p2181
V16
p2182
sS'src'
p2183
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2184
sS'rel'
p2185
Vhttp://schemas.google.com/g/2005#thumbnail
p2186
sS'height'
p2187
V16
p2188
ssg21
g22
((I2012
I7
I1
I22
I32
I46
I6
I183
I0
t(dtRp2189
sg24
(lp2190
g1
(g2
g3
(dp2191
S'href'
p2192
Vhttp://ck-hack.blogspot.com/feeds/8392882130362894324/comments/default
p2193
sS'type'
p2194
Vapplication/atom+xml
p2195
sS'rel'
p2196
Vreplies
p2197
sS'title'
p2198
VPost Comments
p2199
stRp2200
ag1
(g2
g3
(dp2201
S'href'
p2202
Vhttp://ck-hack.blogspot.com/2012/07/bfs-424-test.html#comment-form
p2203
sS'type'
p2204
Vtext/html
p2205
sS'rel'
p2206
Vreplies
p2207
sS'title'
p2208
V19 Comments
p2209
stRp2210
ag1
(g2
g3
(dp2211
S'href'
p2212
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8392882130362894324
p2213
sS'type'
p2214
Vapplication/atom+xml
p2215
sS'rel'
p2216
Vedit
p2217
stRp2218
ag1
(g2
g3
(dp2219
S'href'
p2220
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8392882130362894324
p2221
sS'type'
p2222
Vapplication/atom+xml
p2223
sS'rel'
p2224
Vself
p2225
stRp2226
ag1
(g2
g3
(dp2227
S'href'
p2228
Vhttp://ck-hack.blogspot.com/2012/07/bfs-424-test.html
p2229
sS'type'
p2230
Vtext/html
p2231
sS'rel'
p2232
Valternate
p2233
sS'title'
p2234
VBFS 424 test
p2235
stRp2236
asg66
(lp2237
g1
(g2
g3
(dp2238
g69
V-ck
p2239
sg71
Vhttp://www.blogger.com/atom/ns#
p2240
sg72
NstRp2241
ag1
(g2
g3
(dp2242
g69
V3.4.0
p2243
sg71
Vhttp://www.blogger.com/atom/ns#
p2244
sg72
NstRp2245
ag1
(g2
g3
(dp2246
g69
Vbfs
p2247
sg71
Vhttp://www.blogger.com/atom/ns#
p2248
sg72
NstRp2249
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2250
sVthr_total
p2251
V19
p2252
sg238
(lp2253
g1
(g2
g3
(dp2254
g229
g2250
sg233
Vck
p2255
sg242
Vnoreply@blogger.com
p2256
stRp2257
asg237
g2229
sS'author_detail'
p2258
g1
(g2
g3
(dp2259
g229
g2250
sg233
g2255
sg242
g2256
stRp2260
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-8392882130362894324
p2261
sg367
g22
((I2012
I7
I1
I13
I5
I0
I6
I183
I0
t(dtRp2262
sg253
VBFS 424 test
p2263
sg255
Vck (noreply@blogger.com)
p2264
sg371
VA couple of bug reports mostly related to disk I/O seem to have cropped up with BFS 423/3.4-ck2. The likely culprit seems to be the plugged I/O management within schedule() that I modified going from BFS 420 to BFS 423, when I adopted mainline's approach to managing the plugged I/O. It appears that the mechanism I had put in place for BFS was the correct one, and mainline's approach does not work (for BFS) so I've backed out that change and increased the version number. Here is the test patch:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/test/bfs423-424.patch" target="_blank">bfs423-424.patch</a><br /><br />Those with issues of any sort related to BFS 423 or ck2, please test this patch on top of the previous BFS patched kernel. Thanks!
p2265
sg373
(lp2266
g1
(g2
g3
(dp2267
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2268
sg53
g261
sg262
Nsg263
g2265
stRp2269
asg265
I01
sS'title_detail'
p2270
g1
(g2
g3
(dp2271
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2272
sg53
g269
sg262
Nsg263
g2263
stRp2273
sg382
V2012-07-01T23:05:00.001+10:00
p2274
sg384
(lp2275
g386
aV*
ag387
astRp2276
ag1
(g2
g3
(dp2277
g7
V2012-06-11T23:28:54.339+10:00
p2278
sVgd_image
p2279
(dp2280
S'width'
p2281
V16
p2282
sS'src'
p2283
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2284
sS'rel'
p2285
Vhttp://schemas.google.com/g/2005#thumbnail
p2286
sS'height'
p2287
V16
p2288
ssg21
g22
((I2012
I6
I11
I13
I28
I54
I0
I163
I0
t(dtRp2289
sg24
(lp2290
g1
(g2
g3
(dp2291
S'href'
p2292
Vhttp://ck-hack.blogspot.com/feeds/5624528203658372669/comments/default
p2293
sS'type'
p2294
Vapplication/atom+xml
p2295
sS'rel'
p2296
Vreplies
p2297
sS'title'
p2298
VPost Comments
p2299
stRp2300
ag1
(g2
g3
(dp2301
S'href'
p2302
Vhttp://ck-hack.blogspot.com/2012/06/upgradeable-rwlocks-and-bfs.html#comment-form
p2303
sS'type'
p2304
Vtext/html
p2305
sS'rel'
p2306
Vreplies
p2307
sS'title'
p2308
V21 Comments
p2309
stRp2310
ag1
(g2
g3
(dp2311
S'href'
p2312
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5624528203658372669
p2313
sS'type'
p2314
Vapplication/atom+xml
p2315
sS'rel'
p2316
Vedit
p2317
stRp2318
ag1
(g2
g3
(dp2319
S'href'
p2320
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5624528203658372669
p2321
sS'type'
p2322
Vapplication/atom+xml
p2323
sS'rel'
p2324
Vself
p2325
stRp2326
ag1
(g2
g3
(dp2327
S'href'
p2328
Vhttp://ck-hack.blogspot.com/2012/06/upgradeable-rwlocks-and-bfs.html
p2329
sS'type'
p2330
Vtext/html
p2331
sS'rel'
p2332
Valternate
p2333
sS'title'
p2334
VUpgradeable rwlocks and BFS
p2335
stRp2336
asg66
(lp2337
g1
(g2
g3
(dp2338
g69
Vurwlocks
p2339
sg71
Vhttp://www.blogger.com/atom/ns#
p2340
sg72
NstRp2341
ag1
(g2
g3
(dp2342
g69
Vscalability
p2343
sg71
Vhttp://www.blogger.com/atom/ns#
p2344
sg72
NstRp2345
ag1
(g2
g3
(dp2346
g69
Vbfs
p2347
sg71
Vhttp://www.blogger.com/atom/ns#
p2348
sg72
NstRp2349
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2350
sVthr_total
p2351
V21
p2352
sg238
(lp2353
g1
(g2
g3
(dp2354
g229
g2350
sg233
Vck
p2355
sg242
Vnoreply@blogger.com
p2356
stRp2357
asg237
g2329
sS'author_detail'
p2358
g1
(g2
g3
(dp2359
g229
g2350
sg233
g2355
sg242
g2356
stRp2360
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-5624528203658372669
p2361
sg367
g22
((I2012
I6
I11
I13
I27
I0
I0
I163
I0
t(dtRp2362
sg253
VUpgradeable rwlocks and BFS
p2363
sg255
Vck (noreply@blogger.com)
p2364
sg371
VI've been experimenting with improving the locking scheme in BFS and had a few ideas. I'm particularly attached to the global runqueue that makes BFS what it is and obviously having&nbsp; one queue that has one lock protecting all its data structures accessed by multiple CPUs will end up having quite significant scalability limits with many CPUs. Much like a lot of the scalability work, it tends to have the opposite effect with smaller hardware (i.e. the more scalable you make something, the more it will tend to harm the smaller hardware). Fortunately most of the scalability issues with BFS are pretty much irrelevant until you have more than 16 logical CPUs, but we've now reached the point where 8 logical CPUs is not unusual for a standard PC. Whether or not we actually need so many logical CPUs or not and can use them appropriately is an argument for a different time and place, but they're here. So I've always had at the back of my mind how I might go about making BFS more scalable in the long term and locking is one obvious area.<br /><br />Unfortunately time and realistic limitations means I'm unlikely to ever do anything on a grand scale or be able to support it. However I had ideas for how to change the locking long-term but it would require lots of incremental steps. After all that rambling, this post is about the first step to changing it. Like some of the experimental steps of the past (such as skip lists), there is absolutely no guarantee that these are worth pursuing.<br /><br />I've implemented a variant of the read/write locks as used in the kernel to better suit being used as a replacement for the spinlock that protects all the global runqueue data. The problem with read/write locks is they favour readers over writers, and you cannot upgrade or downgrade locks. Once you have grabbed them, if you drop the lock and then try to grab the other variant (eg. going from read to write), the data is no longer guaranteed to be the same. What I've put together (and I'm not remotely suggesting this is my original idea, I'm sure it's been done elsewhere) are upgradeable read/write locks where you can take either the read lock, write lock, or an upgradeable variant. Upgradeable locks can be up or downgraded to write or read locks, and write locks can be downgraded to read locks, but read locks can not be changed. These URW locks are unfortunately more overhead than either spinlocks or normal rwlocks since they're actually just taking combinations of spinlocks and rwlocks. However the overhead of the locks themself may be worthwhile if it allows you to convert otherwise locked data into sections of parallel read code.<br /><br />So here is a patch that implements them and can be put into pretty much any recent linux kernel version:<br /><a href="http://ck.kolivas.org/patches/urw-locks/urw-locks.patch">urw-locks.patch</a><br /><br />Note that patch does nothing by itself, but here is a patch to add on top of that one for BFS423 that modifies the global runqueue to use the urw locks and implements some degree of read/write separation that did not exist with the regular spinlock:<br /><a href="http://ck.kolivas.org/patches/urw-locks/bfs423-grq_urwlocks.patch">bfs423-grq_urwlocks.patch</a><br /><br />It's rather early code but I've given it a fairly thorough testing at home and it at least seems to be working as desired. On the simplest of preliminary testing I'm unable to demonstrate any throughput advantage on my quad core hardware, but the reassuring thing is I also find no disadvantage. Whether this translates to some advantage on 8x or 16x is something I don't have hardware to test for myself (hint to readers).<br /><br />Note that even if this does not prove to be any significant throughput gain, then provided it is not harmful, I hope to eventually use it as a stepping stone to a grander plan I have for the locking and scalability. I don't like vapourware and since I haven't finalised the details myself exactly how I would implement them, there's nothing more to say for now. Then there's the time issue... there never seems to be enough, but I only ever hack for fun so it's no problem really.<br /><br />P.S. Don't let this long post make you not notice that BFS 423 and 3.4-ck2 are also out in the previous post.
p2365
sg373
(lp2366
g1
(g2
g3
(dp2367
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2368
sg53
g261
sg262
Nsg263
g2365
stRp2369
asg265
I01
sS'title_detail'
p2370
g1
(g2
g3
(dp2371
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2372
sg53
g269
sg262
Nsg263
g2363
stRp2373
sg382
V2012-06-11T23:27:00.000+10:00
p2374
sg384
(lp2375
g386
aV*
ag387
astRp2376
ag1
(g2
g3
(dp2377
g7
V2012-06-11T09:36:19.056+10:00
p2378
sVgd_image
p2379
(dp2380
S'width'
p2381
V16
p2382
sS'src'
p2383
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2384
sS'rel'
p2385
Vhttp://schemas.google.com/g/2005#thumbnail
p2386
sS'height'
p2387
V16
p2388
ssg21
g22
((I2012
I6
I10
I23
I36
I19
I6
I162
I0
t(dtRp2389
sg24
(lp2390
g1
(g2
g3
(dp2391
S'href'
p2392
Vhttp://ck-hack.blogspot.com/feeds/8336361824290799030/comments/default
p2393
sS'type'
p2394
Vapplication/atom+xml
p2395
sS'rel'
p2396
Vreplies
p2397
sS'title'
p2398
VPost Comments
p2399
stRp2400
ag1
(g2
g3
(dp2401
S'href'
p2402
Vhttp://ck-hack.blogspot.com/2012/06/bfs-0423-34-ck2.html#comment-form
p2403
sS'type'
p2404
Vtext/html
p2405
sS'rel'
p2406
Vreplies
p2407
sS'title'
p2408
V48 Comments
p2409
stRp2410
ag1
(g2
g3
(dp2411
S'href'
p2412
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8336361824290799030
p2413
sS'type'
p2414
Vapplication/atom+xml
p2415
sS'rel'
p2416
Vedit
p2417
stRp2418
ag1
(g2
g3
(dp2419
S'href'
p2420
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8336361824290799030
p2421
sS'type'
p2422
Vapplication/atom+xml
p2423
sS'rel'
p2424
Vself
p2425
stRp2426
ag1
(g2
g3
(dp2427
S'href'
p2428
Vhttp://ck-hack.blogspot.com/2012/06/bfs-0423-34-ck2.html
p2429
sS'type'
p2430
Vtext/html
p2431
sS'rel'
p2432
Valternate
p2433
sS'title'
p2434
Vbfs 0.423, 3.4-ck2
p2435
stRp2436
asg66
(lp2437
g1
(g2
g3
(dp2438
g69
V-ck
p2439
sg71
Vhttp://www.blogger.com/atom/ns#
p2440
sg72
NstRp2441
ag1
(g2
g3
(dp2442
g69
V3.4.0
p2443
sg71
Vhttp://www.blogger.com/atom/ns#
p2444
sg72
NstRp2445
ag1
(g2
g3
(dp2446
g69
Vbfs
p2447
sg71
Vhttp://www.blogger.com/atom/ns#
p2448
sg72
NstRp2449
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2450
sVthr_total
p2451
V48
p2452
sg238
(lp2453
g1
(g2
g3
(dp2454
g229
g2450
sg233
Vck
p2455
sg242
Vnoreply@blogger.com
p2456
stRp2457
asg237
g2429
sS'author_detail'
p2458
g1
(g2
g3
(dp2459
g229
g2450
sg233
g2455
sg242
g2456
stRp2460
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-8336361824290799030
p2461
sg367
g22
((I2012
I6
I10
I23
I35
I0
I6
I162
I0
t(dtRp2462
sg253
Vbfs 0.423, 3.4-ck2
p2463
sg255
Vck (noreply@blogger.com)
p2464
sg371
VA couple of issues showed up with BFS 0.422, one being the "0 load" bug and the other being a build issue on non-hotplug releases. So here is BFS 0.423 and 3.4-ck2 (which is just ck1 with the BFS update) which should fix those:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4-sched-bfs-423.patch">3.4-sched-bfs-423.patch</a><br /><br /><a href="http://ck.kolivas.org/patches/3.0/3.4/3.4-ck2/">3.4-ck2/</a><br /><br />and the increment only:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4bfs422-423.patch">3.4bfs422-423.patch</a><br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />
p2465
sg373
(lp2466
g1
(g2
g3
(dp2467
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2468
sg53
g261
sg262
Nsg263
g2465
stRp2469
asg265
I01
sS'title_detail'
p2470
g1
(g2
g3
(dp2471
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2472
sg53
g269
sg262
Nsg263
g2463
stRp2473
sg382
V2012-06-11T09:35:00.003+10:00
p2474
sg384
(lp2475
g386
aV*
ag387
astRp2476
ag1
(g2
g3
(dp2477
g7
V2012-06-02T16:24:51.830+10:00
p2478
sVgd_image
p2479
(dp2480
S'width'
p2481
V16
p2482
sS'src'
p2483
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2484
sS'rel'
p2485
Vhttp://schemas.google.com/g/2005#thumbnail
p2486
sS'height'
p2487
V16
p2488
ssg21
g22
((I2012
I6
I2
I6
I24
I51
I5
I154
I0
t(dtRp2489
sg24
(lp2490
g1
(g2
g3
(dp2491
S'href'
p2492
Vhttp://ck-hack.blogspot.com/feeds/754687983626813555/comments/default
p2493
sS'type'
p2494
Vapplication/atom+xml
p2495
sS'rel'
p2496
Vreplies
p2497
sS'title'
p2498
VPost Comments
p2499
stRp2500
ag1
(g2
g3
(dp2501
S'href'
p2502
Vhttp://ck-hack.blogspot.com/2012/06/bfs-0422-34-ck1.html#comment-form
p2503
sS'type'
p2504
Vtext/html
p2505
sS'rel'
p2506
Vreplies
p2507
sS'title'
p2508
V31 Comments
p2509
stRp2510
ag1
(g2
g3
(dp2511
S'href'
p2512
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/754687983626813555
p2513
sS'type'
p2514
Vapplication/atom+xml
p2515
sS'rel'
p2516
Vedit
p2517
stRp2518
ag1
(g2
g3
(dp2519
S'href'
p2520
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/754687983626813555
p2521
sS'type'
p2522
Vapplication/atom+xml
p2523
sS'rel'
p2524
Vself
p2525
stRp2526
ag1
(g2
g3
(dp2527
S'href'
p2528
Vhttp://ck-hack.blogspot.com/2012/06/bfs-0422-34-ck1.html
p2529
sS'type'
p2530
Vtext/html
p2531
sS'rel'
p2532
Valternate
p2533
sS'title'
p2534
VBFS 0.422, 3.4.0-ck1
p2535
stRp2536
asg66
(lp2537
g1
(g2
g3
(dp2538
g69
V-ck
p2539
sg71
Vhttp://www.blogger.com/atom/ns#
p2540
sg72
NstRp2541
ag1
(g2
g3
(dp2542
g69
V3.4.0
p2543
sg71
Vhttp://www.blogger.com/atom/ns#
p2544
sg72
NstRp2545
ag1
(g2
g3
(dp2546
g69
Vbfs
p2547
sg71
Vhttp://www.blogger.com/atom/ns#
p2548
sg72
NstRp2549
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2550
sVthr_total
p2551
V31
p2552
sg238
(lp2553
g1
(g2
g3
(dp2554
g229
g2550
sg233
Vck
p2555
sg242
Vnoreply@blogger.com
p2556
stRp2557
asg237
g2529
sS'author_detail'
p2558
g1
(g2
g3
(dp2559
g229
g2550
sg233
g2555
sg242
g2556
stRp2560
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-754687983626813555
p2561
sg367
g22
((I2012
I6
I2
I4
I55
I0
I5
I154
I0
t(dtRp2562
sg253
VBFS 0.422, 3.4.0-ck1
p2563
sg255
Vck (noreply@blogger.com)
p2564
sg371
VAnnouncing the release of BFS for 3.4, along with the complete -ck1 patch.<br /><br />BFS alone:<br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4-sched-bfs-422.patch">3.4-sched-bfs-422.patch</a><br /><br />Full 3.4-ck1 patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.4/3.4-ck1/">3.4-ck1</a><br /><br />Alas I was unable to keep the 420 number for BFS due to a number of minor changes. I also incremented the number beyond the unofficial 421 patch put to lkml so there was no confusion. The only changes are that some trivial display accounting fixes were added, along with forcing SLUB in the config by default as other SLAB allocators crash with BFS (you should all be using SLUB anyway). The rest of the BFS changes are a resync with the new code going into linux 3.4, along with more merging of code from mainline into BFS where suitable. Note that I have adopted the mainline approach of dealing with unplugged I/O. Previously I had spent a lot of time making it work with BFS for those who remember that period of instability, so hopefully the mainline approach will work seamlessly now (since mainline ended up having the same bug but it was harder to reproduce).<br /><br />3.4-ck1 is just a resync of the remainder of the patches from 3.3-ck1.<br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />EDIT: If you build on SMP without enabling CPU hotplug you will need this patch on top for BFS to build:<br /><a href="http://www.blogger.com/\u005c%20http://ck.kolivas.org/patches/bfs/3.4.0/bfs422-nohotplug_fix.patch">bfs422-nohotplug_fix.patch</a><br /><br />
p2565
sg373
(lp2566
g1
(g2
g3
(dp2567
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2568
sg53
g261
sg262
Nsg263
VAnnouncing the release of BFS for 3.4, along with the complete -ck1 patch.<br /><br />BFS alone:<br /><a href="http://ck.kolivas.org/patches/bfs/3.4.0/3.4-sched-bfs-422.patch">3.4-sched-bfs-422.patch</a><br /><br />Full 3.4-ck1 patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.4/3.4-ck1/">3.4-ck1</a><br /><br />Alas I was unable to keep the 420 number for BFS due to a number of minor changes. I also incremented the number beyond the unofficial 421 patch put to lkml so there was no confusion. The only changes are that some trivial display accounting fixes were added, along with forcing SLUB in the config by default as other SLAB allocators crash with BFS (you should all be using SLUB anyway). The rest of the BFS changes are a resync with the new code going into linux 3.4, along with more merging of code from mainline into BFS where suitable. Note that I have adopted the mainline approach of dealing with unplugged I/O. Previously I had spent a lot of time making it work with BFS for those who remember that period of instability, so hopefully the mainline approach will work seamlessly now (since mainline ended up having the same bug but it was harder to reproduce).<br /><br />3.4-ck1 is just a resync of the remainder of the patches from 3.3-ck1.<br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />EDIT: If you build on SMP without enabling CPU hotplug you will need this patch on top for BFS to build:<br /><a href="http://www.blogger.com/\u005c%20http://ck.kolivas.org/patches/bfs/3.4.0/bfs422-nohotplug_fix.patch">bfs422-nohotplug_fix.patch</a><br /><br />
p2569
stRp2570
asg265
I01
sS'title_detail'
p2571
g1
(g2
g3
(dp2572
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2573
sg53
g269
sg262
Nsg263
g2563
stRp2574
sg382
V2012-06-02T14:55:00.002+10:00
p2575
sg384
(lp2576
g386
aV*
ag387
astRp2577
ag1
(g2
g3
(dp2578
g7
V2012-03-24T20:22:21.109+11:00
p2579
sVgd_image
p2580
(dp2581
S'width'
p2582
V16
p2583
sS'src'
p2584
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2585
sS'rel'
p2586
Vhttp://schemas.google.com/g/2005#thumbnail
p2587
sS'height'
p2588
V16
p2589
ssg21
g22
((I2012
I3
I24
I9
I22
I21
I5
I84
I0
t(dtRp2590
sg24
(lp2591
g1
(g2
g3
(dp2592
S'href'
p2593
Vhttp://ck-hack.blogspot.com/feeds/1946491224068457708/comments/default
p2594
sS'type'
p2595
Vapplication/atom+xml
p2596
sS'rel'
p2597
Vreplies
p2598
sS'title'
p2599
VPost Comments
p2600
stRp2601
ag1
(g2
g3
(dp2602
S'href'
p2603
Vhttp://ck-hack.blogspot.com/2012/03/330-ck1.html#comment-form
p2604
sS'type'
p2605
Vtext/html
p2606
sS'rel'
p2607
Vreplies
p2608
sS'title'
p2609
V91 Comments
p2610
stRp2611
ag1
(g2
g3
(dp2612
S'href'
p2613
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/1946491224068457708
p2614
sS'type'
p2615
Vapplication/atom+xml
p2616
sS'rel'
p2617
Vedit
p2618
stRp2619
ag1
(g2
g3
(dp2620
S'href'
p2621
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/1946491224068457708
p2622
sS'type'
p2623
Vapplication/atom+xml
p2624
sS'rel'
p2625
Vself
p2626
stRp2627
ag1
(g2
g3
(dp2628
S'href'
p2629
Vhttp://ck-hack.blogspot.com/2012/03/330-ck1.html
p2630
sS'type'
p2631
Vtext/html
p2632
sS'rel'
p2633
Valternate
p2634
sS'title'
p2635
V3.3.0-ck1
p2636
stRp2637
asg66
(lp2638
g1
(g2
g3
(dp2639
g69
V3.3.0
p2640
sg71
Vhttp://www.blogger.com/atom/ns#
p2641
sg72
NstRp2642
ag1
(g2
g3
(dp2643
g69
V-ck
p2644
sg71
Vhttp://www.blogger.com/atom/ns#
p2645
sg72
NstRp2646
ag1
(g2
g3
(dp2647
g69
Vbfs
p2648
sg71
Vhttp://www.blogger.com/atom/ns#
p2649
sg72
NstRp2650
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2651
sVthr_total
p2652
V91
p2653
sg238
(lp2654
g1
(g2
g3
(dp2655
g229
g2651
sg233
Vck
p2656
sg242
Vnoreply@blogger.com
p2657
stRp2658
asg237
g2630
sS'author_detail'
p2659
g1
(g2
g3
(dp2660
g229
g2651
sg233
g2656
sg242
g2657
stRp2661
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-1946491224068457708
p2662
sg367
g22
((I2012
I3
I24
I9
I21
I0
I5
I84
I0
t(dtRp2663
sg253
V3.3.0-ck1
p2664
sg255
Vck (noreply@blogger.com)
p2665
sg371
VNew -ck version for the latest mainline linux kernel, 3.3.0:<br /><a href="http://www.blogger.com/goog_283755054"><br /></a><br /><a href="http://ck.kolivas.org/patches/3.0/3.3/3.3-ck1/">3.3-ck1</a><br /><br />Changes since 3.2.0-ck1:<br /><br />New BFS version 0.420 AKA smoking as discussed here:<br /><a href="http://ck-hack.blogspot.com.au/2012/03/bfs-420-aka-smoking-for-linux-33.html">bfs-420-aka-smoking-for-linux-33</a><br /><br />Includes one build bugfix for UP compared to that first release candidate.<br /><br />Other changes:<br />These patches have been dropped: <br />-mm-background_scan.patch<br />-mm-lru_cache_add_lru_tail-2.patch<br /><br /><br />The Virtual Memory subsystem has changed so much it's hard to know if these patches do what they originally intended to do, nor if they are helpful any more. In the absence of being able to test their validity, it seems safer to just drop them.<br /><br />The rest of the patchset is just a resync.<br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u4e0b\u3055\u3044
p2666
sg373
(lp2667
g1
(g2
g3
(dp2668
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2669
sg53
g261
sg262
Nsg263
g2666
stRp2670
asg265
I01
sS'title_detail'
p2671
g1
(g2
g3
(dp2672
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2673
sg53
g269
sg262
Nsg263
g2664
stRp2674
sg382
V2012-03-24T20:21:00.001+11:00
p2675
sg384
(lp2676
g386
aV*
ag387
astRp2677
ag1
(g2
g3
(dp2678
g7
V2012-03-22T15:03:00.286+11:00
p2679
sVgd_image
p2680
(dp2681
S'width'
p2682
V16
p2683
sS'src'
p2684
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2685
sS'rel'
p2686
Vhttp://schemas.google.com/g/2005#thumbnail
p2687
sS'height'
p2688
V16
p2689
ssg21
g22
((I2012
I3
I22
I4
I3
I0
I3
I82
I0
t(dtRp2690
sg24
(lp2691
g1
(g2
g3
(dp2692
S'href'
p2693
Vhttp://ck-hack.blogspot.com/feeds/4564456818641338596/comments/default
p2694
sS'type'
p2695
Vapplication/atom+xml
p2696
sS'rel'
p2697
Vreplies
p2698
sS'title'
p2699
VPost Comments
p2700
stRp2701
ag1
(g2
g3
(dp2702
S'href'
p2703
Vhttp://ck-hack.blogspot.com/2012/03/bfs-420-aka-smoking-for-linux-33.html#comment-form
p2704
sS'type'
p2705
Vtext/html
p2706
sS'rel'
p2707
Vreplies
p2708
sS'title'
p2709
V20 Comments
p2710
stRp2711
ag1
(g2
g3
(dp2712
S'href'
p2713
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4564456818641338596
p2714
sS'type'
p2715
Vapplication/atom+xml
p2716
sS'rel'
p2717
Vedit
p2718
stRp2719
ag1
(g2
g3
(dp2720
S'href'
p2721
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4564456818641338596
p2722
sS'type'
p2723
Vapplication/atom+xml
p2724
sS'rel'
p2725
Vself
p2726
stRp2727
ag1
(g2
g3
(dp2728
S'href'
p2729
Vhttp://ck-hack.blogspot.com/2012/03/bfs-420-aka-smoking-for-linux-33.html
p2730
sS'type'
p2731
Vtext/html
p2732
sS'rel'
p2733
Valternate
p2734
sS'title'
p2735
VBFS 420 AKA smoking for linux 3.3
p2736
stRp2737
asg66
(lp2738
g1
(g2
g3
(dp2739
g69
V3.3.0
p2740
sg71
Vhttp://www.blogger.com/atom/ns#
p2741
sg72
NstRp2742
ag1
(g2
g3
(dp2743
g69
Vbfs
p2744
sg71
Vhttp://www.blogger.com/atom/ns#
p2745
sg72
NstRp2746
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2747
sVthr_total
p2748
V20
p2749
sg238
(lp2750
g1
(g2
g3
(dp2751
g229
g2747
sg233
Vck
p2752
sg242
Vnoreply@blogger.com
p2753
stRp2754
asg237
g2730
sS'author_detail'
p2755
g1
(g2
g3
(dp2756
g229
g2747
sg233
g2752
sg242
g2753
stRp2757
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-4564456818641338596
p2758
sg367
g22
((I2012
I3
I22
I3
I58
I0
I3
I82
I0
t(dtRp2759
sg253
VBFS 420 AKA smoking for linux 3.3
p2760
sg255
Vck (noreply@blogger.com)
p2761
sg371
VHere's the release candidate for the first stable release of BFS for linux 3.3. BFS hadn't received much attention lately so I felt a little guilty and worked on a few things that had been nagging me:<br /><br /><b><a href="http://ck.kolivas.org/patches/bfs/test/3.3-sched-bfs-420.patch">3.3-sched-bfs-420.patch</a></b><br /><br />It is not clear whether the bug which I posted about here is present any more or not, given that it is extremely rare and hard to reproduce it is impossible to know for sure. A number of minor issues were addressed in the code which hopefully have fixed it (and hardly anyone was affected anyway).<br /><br />The changes since BFS version 0.416 include a fairly large architectural change just to bring the codebase in sync with 3.3, but none of the changes should be noticeable in any way. One change that may be user-visible is that the high resolution IRQ accounting now appears to be on by default for x86 architectures. There is an issue that system time accounting is wrong without this feature enabled in BFS so this should correct that problem.<br /><br /><b>Other changes:</b><br /><b>416-417:</b> A number of ints were changed to bool which though unlikely to have any performance impact, do make the code cleaner and the compiled code does often come out different. rq_running_iso was converted from a function to macro to avoid it being a separate function call when compiled in with the attendant overhead. requeue_task within the scheduler tick was moved to being done under lock which may prevent rare races.&nbsp; test_ret_isorefractory() was optimised. set_rq_task() was not being called on tasks that were being requeued within schedule() which could possibly have led to issues if the task ran out of timeslice during that requeue and should have had its deadline offset. The need_resched() check that occurs at the end of schedule() was changed to unlikely() since it really is that. Moved the scheduler version print function to bfs.c to avoid recompiling the entire kernel if the version number is changed.<br /><br /><b>417-418:</b> Fixed a problem with the accounting resync for linux 3.3.<br /><br /><b>418-419: </b>There was a small possibility that an unnecessary resched would occur in try_preempt if a task had changed affinity and called try_preempt with its -&gt;cpu still set to the old cpu it could no longer run on, so try_preempt was reworked slightly. Reintroduced the deadline offset based on CPU cache locality on sticky tasks in a way that was cheaper than we currently offset the deadline.<br /><br /><b>419-420:</b> Finally rewrote the earliest_deadline_task code. This has long been one of the hottest code paths in the scheduler and small changes here that made it look nice would often slow it down. I spent quite a few hours reworking it to include less GOTOs while disassembling the code to make sure it was actually getting smaller with every change.&nbsp; Then I wrote a scheduler specific version of find_next_bit which could be inlined into this code and avoid another function call in the hot path. The overall behaviour is unchanged from previous BFS versions, but <b><i>initial benchmarking confirms slight improvements in throughput</i></b>.<br /><br />Now I'll leave it open for wider testing confirming it's all good and then I have to think about what I should do with the full -ck patchset. As I've said on numerous posts before, I'm no longer sure about the validity of some of the patches in the set with all the changes to the virtual memory subsystem in the mainline kernel.
p2762
sg373
(lp2763
g1
(g2
g3
(dp2764
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2765
sg53
g261
sg262
Nsg263
g2762
stRp2766
asg265
I01
sS'title_detail'
p2767
g1
(g2
g3
(dp2768
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2769
sg53
g269
sg262
Nsg263
g2760
stRp2770
sg382
V2012-03-22T14:58:00.000+11:00
p2771
sg384
(lp2772
g386
aV*
ag387
astRp2773
ag1
(g2
g3
(dp2774
g7
V2012-03-20T20:30:05.786+11:00
p2775
sVgd_image
p2776
(dp2777
S'width'
p2778
V16
p2779
sS'src'
p2780
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2781
sS'rel'
p2782
Vhttp://schemas.google.com/g/2005#thumbnail
p2783
sS'height'
p2784
V16
p2785
ssg21
g22
((I2012
I3
I20
I9
I30
I5
I1
I80
I0
t(dtRp2786
sg24
(lp2787
g1
(g2
g3
(dp2788
S'href'
p2789
Vhttp://ck-hack.blogspot.com/feeds/8594479449521932730/comments/default
p2790
sS'type'
p2791
Vapplication/atom+xml
p2792
sS'rel'
p2793
Vreplies
p2794
sS'title'
p2795
VPost Comments
p2796
stRp2797
ag1
(g2
g3
(dp2798
S'href'
p2799
Vhttp://ck-hack.blogspot.com/2012/03/bfs-issues-and-linux-33.html#comment-form
p2800
sS'type'
p2801
Vtext/html
p2802
sS'rel'
p2803
Vreplies
p2804
sS'title'
p2805
V18 Comments
p2806
stRp2807
ag1
(g2
g3
(dp2808
S'href'
p2809
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8594479449521932730
p2810
sS'type'
p2811
Vapplication/atom+xml
p2812
sS'rel'
p2813
Vedit
p2814
stRp2815
ag1
(g2
g3
(dp2816
S'href'
p2817
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8594479449521932730
p2818
sS'type'
p2819
Vapplication/atom+xml
p2820
sS'rel'
p2821
Vself
p2822
stRp2823
ag1
(g2
g3
(dp2824
S'href'
p2825
Vhttp://ck-hack.blogspot.com/2012/03/bfs-issues-and-linux-33.html
p2826
sS'type'
p2827
Vtext/html
p2828
sS'rel'
p2829
Valternate
p2830
sS'title'
p2831
VBFS issues and linux 3.3
p2832
stRp2833
asg66
(lp2834
g1
(g2
g3
(dp2835
g69
Vbug
p2836
sg71
Vhttp://www.blogger.com/atom/ns#
p2837
sg72
NstRp2838
ag1
(g2
g3
(dp2839
g69
Vbfs
p2840
sg71
Vhttp://www.blogger.com/atom/ns#
p2841
sg72
NstRp2842
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2843
sVthr_total
p2844
V18
p2845
sg238
(lp2846
g1
(g2
g3
(dp2847
g229
g2843
sg233
Vck
p2848
sg242
Vnoreply@blogger.com
p2849
stRp2850
asg237
g2826
sS'author_detail'
p2851
g1
(g2
g3
(dp2852
g229
g2843
sg233
g2848
sg242
g2849
stRp2853
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-8594479449521932730
p2854
sg367
g22
((I2012
I3
I19
I23
I51
I0
I0
I79
I0
t(dtRp2855
sg253
VBFS issues and linux 3.3
p2856
sg255
Vck (noreply@blogger.com)
p2857
sg371
VLinux 3.3 is out, but I'm not releasing BFS for it at this stage. The reason is that a regression has been reported as showing up in BFS and it's proving hard to track down.<br /><br />The issue involves a slowdown under load when the load is niced. The problem is the slowdown does not occur all the time, and I've only seen it in the wild once and have not been able to repeat it since. I've audited the code and have not yet found the culprit, but when it does happen, it is very obvious with mouse stalling for seconds. The 'top' output is usually a give away that something has gone wrong because the 'PR' column should normally report values of 1-41 for a nice 19 load. However when it happens, it will show values much higher, in the 42-81 range which should not happen. Unfortunately, the best hint for me would be to find what version of BFS it was introduced, and look for the change responsible, and since I can't even reproduce the problem most of the time, I can't do this regression testing.<br /><br />So I'm appealing to the BFS users out there to see if anyone has this problem more regularly that has the time to try older versions of BFS. By older versions of BFS, I don't mean the same version of BFS on older kernels, but to try the first version of BFS that was available for that kernel.   Running something continuously as a 'nice'd load is required to reproduce it, where the load is equal to the number of CPUs, so for example 'nice -19 make -j4' continuously in a kernel tree on a quad core machine.  I'm hoping that someone out there is able to reproduce it and can do the regression testing. Thanks in advance. In the meantime, I'll keep auditing code and comparing new to old versions in the hope something stands out.<br /><br />EDIT: An alternative approach was to try moving to 3.3 and make minor fixes along the way to see if the problem persists. Consider this patch a pre-release for now (CPU accounting appears all screwy still):<br /><br />EDIT2: Fixed CPU accounting, bumped version to 418: <br /><a href="http://ck.kolivas.org/patches/bfs/test/3.3-sched-bfs-418.patch">3.3-sched-bfs-418.patch</a>
p2858
sg373
(lp2859
g1
(g2
g3
(dp2860
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2861
sg53
g261
sg262
Nsg263
g2858
stRp2862
asg265
I01
sS'title_detail'
p2863
g1
(g2
g3
(dp2864
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2865
sg53
g269
sg262
Nsg263
g2856
stRp2866
sg382
V2012-03-20T10:51:00.000+11:00
p2867
sg384
(lp2868
g386
aV*
ag387
astRp2869
ag1
(g2
g3
(dp2870
g7
V2012-03-19T23:18:12.249+11:00
p2871
sVgd_image
p2872
(dp2873
S'width'
p2874
V16
p2875
sS'src'
p2876
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2877
sS'rel'
p2878
Vhttp://schemas.google.com/g/2005#thumbnail
p2879
sS'height'
p2880
V16
p2881
ssg21
g22
((I2012
I3
I19
I12
I18
I12
I0
I79
I0
t(dtRp2882
sg24
(lp2883
g1
(g2
g3
(dp2884
S'href'
p2885
Vhttp://ck-hack.blogspot.com/feeds/6836199137376238436/comments/default
p2886
sS'type'
p2887
Vapplication/atom+xml
p2888
sS'rel'
p2889
Vreplies
p2890
sS'title'
p2891
VPost Comments
p2892
stRp2893
ag1
(g2
g3
(dp2894
S'href'
p2895
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0612.html#comment-form
p2896
sS'type'
p2897
Vtext/html
p2898
sS'rel'
p2899
Vreplies
p2900
sS'title'
p2901
V9 Comments
p2902
stRp2903
ag1
(g2
g3
(dp2904
S'href'
p2905
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/6836199137376238436
p2906
sS'type'
p2907
Vapplication/atom+xml
p2908
sS'rel'
p2909
Vedit
p2910
stRp2911
ag1
(g2
g3
(dp2912
S'href'
p2913
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/6836199137376238436
p2914
sS'type'
p2915
Vapplication/atom+xml
p2916
sS'rel'
p2917
Vself
p2918
stRp2919
ag1
(g2
g3
(dp2920
S'href'
p2921
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0612.html
p2922
sS'type'
p2923
Vtext/html
p2924
sS'rel'
p2925
Valternate
p2926
sS'title'
p2927
Vlrzip-0.612
p2928
stRp2929
asg66
(lp2930
g1
(g2
g3
(dp2931
g69
Vlrzip
p2932
sg71
Vhttp://www.blogger.com/atom/ns#
p2933
sg72
NstRp2934
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p2935
sVthr_total
p2936
V9
sg238
(lp2937
g1
(g2
g3
(dp2938
g229
g2935
sg233
Vck
p2939
sg242
Vnoreply@blogger.com
p2940
stRp2941
asg237
g2922
sS'author_detail'
p2942
g1
(g2
g3
(dp2943
g229
g2935
sg233
g2939
sg242
g2940
stRp2944
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-6836199137376238436
p2945
sg367
g22
((I2012
I3
I17
I13
I34
I0
I5
I77
I0
t(dtRp2946
sg253
Vlrzip-0.612
p2947
sg255
Vck (noreply@blogger.com)
p2948
sg371
VJust for good measure, here's yet another lrzip release.<br /><br /><a href="http://freecode.com/projects/long-range-zip/releases/342746">lrzip 0.612 on freecode</a><br /><br />This time the main update is a new zpaq library back end instead of using the ageing zpipe code. There are a number of advantages to using the libzpaq library over the old zpipe code.<br /><br />First, the old code required a FILE type stream as it was written with STDIO in mind, so it was the only compression back end that required the use of some lesser known but handy, yet (virtually) linux only memory features like fmemopen, open_memstream and friends. These were not portable for osx and others so they were emulated on those platforms through the incredibly clunky use of&nbsp; temporary files on disk. Using the new library has killed off the need for these features making the code more portable.<br /><br />Second, the code is significantly faster since it is the latest full c++ version of the zpaq code. Unfortunately it also means it takes a LOT longer to compile this part of lrzip now, but that's not a big deal since you usually only compile it once ;)<br /><br />Third, it supports 3 different compression levels, one of which is higher than the previously supported one in lrzip. As lrzip uses 9 levels of compression, I've mapped the 3 levels to -L 1-3, 4-7 and 8-9 since -L 7 is the default and that provides the "mid level" compression from zpaq.<br /><br />Finally, the beauty of the zpaq compression algorithm is the reference decoder can decompress <i>any</i> zpaq compressed data of any profile. This means you are able to use the latest version of lrzip with compression -L 9 (max profile), yet it is still backwardly compatible with older 0.6x versions of lrzip, not requiring an updated minor version and file format. The release archive I provide of lrzip-0.612.tar.lrz is self compressed with the new max profile. Even though there is significantly more code than ever in the lrzip release tarball, it has actually shrunk for the first time in a while.<br /><br />So all that talk is boring and all, so let's throw around some benchmark results which are much more fun.<br /><br />From the original readme benchmarks, I had compressed the linux 2.6.37 tarball, so I used that again for comparison. Tests were performed on an Intel quad core 3Ghz core 2 duo.<br /><br /><br /><tt><pre><br />Compression Size  Percentage Compress Decompress<br />None     430612480 100<br />7z        63636839 14.8  2m28s  0m6.6s<br />xz        63291156 14.7  4m02s  0m8.7<br />lrzip     64561485 14.9  1m12s  0m4.3s<br />lrzip -z  51588423 12.0  2m02s  2m08s<br />lrzip -l 137515997 31.9  0m14s  0m2.7s<br />lrzip -g  86142459 20.0  0m17s  0m3.0s<br />lrzip -b  72103197 16.7  0m21s  0m6.5s<br />bzip2     74060625 17.2  0m48s  0m12.8s<br />gzip      94512561 21.9  0m17s  0m4.0s<br /></tt></pre><br />As you can see, the improvements in speed of the rzip stage have made all the compression back ends pretty snappy, and most fun of all is that lrzip -z on this workload is even faster on compression than the multithreaded 7z and is significantly smaller. Alas the major disadvantage of zpaq remains that it takes about as long to decompress as it takes to compress. However, with the trend towards more CPU cores as time goes on, one could argue that zpaq compression, as used within lrzip, is getting to a speed where it can be in regular use instead of just research/experimental use, especially when files are small like the lrzip distributed tarball I provide.<br /><br />I also repeated my old classic 10GB virtual image benchmarks<br /><br /><br /><br /><tt><pre><br />Compression Size  Percentage Compress Time Decompress Time<br />None     10737418240 100.0<br />gzip      2772899756  25.8  05m47s  2m46s<br />bzip2     2704781700  25.2  16m15s  6m19s<br />xz        2272322208  21.2  50m58s  3m52s<br />7z        2242897134  20.9  26m36s  5m41s<br />lrzip     1372218189  12.8  10m23s  2m53s<br />lrzip -U  1095735108  10.2  08m44s  2m45s<br />lrzip -l  1831894161  17.1  04m53s  2m37s<br />lrzip -lU 1414959433  13.2  04m48s  2m38s<br />lrzip -zU 1067169419   9.9  39m32s  39m46s<br /></tt></pre><br />Using "U"nlimited "z"paq options, it is actually faster than xz now. Note that about 30\u005c% of this image is blank space but that's a not-uncommon type of virtual image. If it were full of data, the difference would be less. Anyway I think it's fair to say that it's worth watching zpaq in the future.  Edit: I've sent Matt Mahoney (zpaq author) the latest benchmarks for lrzip and how it performs on the large file benchmark and he's updated his site: <a href="http://mattmahoney.net/dc/text.html">http://mattmahoney.net/dc/text.html</a>I think it's performing pretty well for a general compression utility.
p2949
sg373
(lp2950
g1
(g2
g3
(dp2951
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2952
sg53
g261
sg262
Nsg263
VJust for good measure, here's yet another lrzip release.<br /><br /><a href="http://freecode.com/projects/long-range-zip/releases/342746">lrzip 0.612 on freecode</a><br /><br />This time the main update is a new zpaq library back end instead of using the ageing zpipe code. There are a number of advantages to using the libzpaq library over the old zpipe code.<br /><br />First, the old code required a FILE type stream as it was written with STDIO in mind, so it was the only compression back end that required the use of some lesser known but handy, yet (virtually) linux only memory features like fmemopen, open_memstream and friends. These were not portable for osx and others so they were emulated on those platforms through the incredibly clunky use of&nbsp; temporary files on disk. Using the new library has killed off the need for these features making the code more portable.<br /><br />Second, the code is significantly faster since it is the latest full c++ version of the zpaq code. Unfortunately it also means it takes a LOT longer to compile this part of lrzip now, but that's not a big deal since you usually only compile it once ;)<br /><br />Third, it supports 3 different compression levels, one of which is higher than the previously supported one in lrzip. As lrzip uses 9 levels of compression, I've mapped the 3 levels to -L 1-3, 4-7 and 8-9 since -L 7 is the default and that provides the "mid level" compression from zpaq.<br /><br />Finally, the beauty of the zpaq compression algorithm is the reference decoder can decompress <i>any</i> zpaq compressed data of any profile. This means you are able to use the latest version of lrzip with compression -L 9 (max profile), yet it is still backwardly compatible with older 0.6x versions of lrzip, not requiring an updated minor version and file format. The release archive I provide of lrzip-0.612.tar.lrz is self compressed with the new max profile. Even though there is significantly more code than ever in the lrzip release tarball, it has actually shrunk for the first time in a while.<br /><br />So all that talk is boring and all, so let's throw around some benchmark results which are much more fun.<br /><br />From the original readme benchmarks, I had compressed the linux 2.6.37 tarball, so I used that again for comparison. Tests were performed on an Intel quad core 3Ghz core 2 duo.<br /><br /><br /><tt><pre><br />Compression Size  Percentage Compress Decompress<br />None     430612480 100<br />7z        63636839 14.8  2m28s  0m6.6s<br />xz        63291156 14.7  4m02s  0m8.7<br />lrzip     64561485 14.9  1m12s  0m4.3s<br />lrzip -z  51588423 12.0  2m02s  2m08s<br />lrzip -l 137515997 31.9  0m14s  0m2.7s<br />lrzip -g  86142459 20.0  0m17s  0m3.0s<br />lrzip -b  72103197 16.7  0m21s  0m6.5s<br />bzip2     74060625 17.2  0m48s  0m12.8s<br />gzip      94512561 21.9  0m17s  0m4.0s<br /></tt></pre><br />As you can see, the improvements in speed of the rzip stage have made all the compression back ends pretty snappy, and most fun of all is that lrzip -z on this workload is even faster on compression than the multithreaded 7z and is significantly smaller. Alas the major disadvantage of zpaq remains that it takes about as long to decompress as it takes to compress. However, with the trend towards more CPU cores as time goes on, one could argue that zpaq compression, as used within lrzip, is getting to a speed where it can be in regular use instead of just research/experimental use, especially when files are small like the lrzip distributed tarball I provide.<br /><br />I also repeated my old classic 10GB virtual image benchmarks<br /><br /><br /><br /><tt><pre><br />Compression Size  Percentage Compress Time Decompress Time<br />None     10737418240 100.0<br />gzip      2772899756  25.8  05m47s  2m46s<br />bzip2     2704781700  25.2  16m15s  6m19s<br />xz        2272322208  21.2  50m58s  3m52s<br />7z        2242897134  20.9  26m36s  5m41s<br />lrzip     1372218189  12.8  10m23s  2m53s<br />lrzip -U  1095735108  10.2  08m44s  2m45s<br />lrzip -l  1831894161  17.1  04m53s  2m37s<br />lrzip -lU 1414959433  13.2  04m48s  2m38s<br />lrzip -zU 1067169419   9.9  39m32s  39m46s<br /></tt></pre><br />Using "U"nlimited "z"paq options, it is actually faster than xz now. Note that about 30\u005c% of this image is blank space but that's a not-uncommon type of virtual image. If it were full of data, the difference would be less. Anyway I think it's fair to say that it's worth watching zpaq in the future.  Edit: I've sent Matt Mahoney (zpaq author) the latest benchmarks for lrzip and how it performs on the large file benchmark and he's updated his site: <a href="http://mattmahoney.net/dc/text.html">http://mattmahoney.net/dc/text.html</a>I think it's performing pretty well for a general compression utility.
p2953
stRp2954
asg265
I01
sS'title_detail'
p2955
g1
(g2
g3
(dp2956
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p2957
sg53
g269
sg262
Nsg263
g2947
stRp2958
sg382
V2012-03-18T00:34:00.000+11:00
p2959
sg384
(lp2960
g386
aV*
ag387
astRp2961
ag1
(g2
g3
(dp2962
g7
V2012-03-11T22:38:43.318+11:00
p2963
sVgd_image
p2964
(dp2965
S'width'
p2966
V16
p2967
sS'src'
p2968
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p2969
sS'rel'
p2970
Vhttp://schemas.google.com/g/2005#thumbnail
p2971
sS'height'
p2972
V16
p2973
ssg21
g22
((I2012
I3
I11
I11
I38
I43
I6
I71
I0
t(dtRp2974
sg24
(lp2975
g1
(g2
g3
(dp2976
S'href'
p2977
Vhttp://ck-hack.blogspot.com/feeds/8525849405750695449/comments/default
p2978
sS'type'
p2979
Vapplication/atom+xml
p2980
sS'rel'
p2981
Vreplies
p2982
sS'title'
p2983
VPost Comments
p2984
stRp2985
ag1
(g2
g3
(dp2986
S'href'
p2987
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0611.html#comment-form
p2988
sS'type'
p2989
Vtext/html
p2990
sS'rel'
p2991
Vreplies
p2992
sS'title'
p2993
V3 Comments
p2994
stRp2995
ag1
(g2
g3
(dp2996
S'href'
p2997
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8525849405750695449
p2998
sS'type'
p2999
Vapplication/atom+xml
p3000
sS'rel'
p3001
Vedit
p3002
stRp3003
ag1
(g2
g3
(dp3004
S'href'
p3005
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/8525849405750695449
p3006
sS'type'
p3007
Vapplication/atom+xml
p3008
sS'rel'
p3009
Vself
p3010
stRp3011
ag1
(g2
g3
(dp3012
S'href'
p3013
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0611.html
p3014
sS'type'
p3015
Vtext/html
p3016
sS'rel'
p3017
Valternate
p3018
sS'title'
p3019
Vlrzip-0.611
p3020
stRp3021
asg66
(lp3022
g1
(g2
g3
(dp3023
g69
Vlrzip
p3024
sg71
Vhttp://www.blogger.com/atom/ns#
p3025
sg72
NstRp3026
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3027
sVthr_total
p3028
V3
sg238
(lp3029
g1
(g2
g3
(dp3030
g229
g3027
sg233
Vck
p3031
sg242
Vnoreply@blogger.com
p3032
stRp3033
asg237
g3014
sS'author_detail'
p3034
g1
(g2
g3
(dp3035
g229
g3027
sg233
g3031
sg242
g3032
stRp3036
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-8525849405750695449
p3037
sg367
g22
((I2012
I3
I11
I11
I36
I0
I6
I71
I0
t(dtRp3038
sg253
Vlrzip-0.611
p3039
sg255
Vck (noreply@blogger.com)
p3040
sg371
VIt usually doesn't take long to find bugs in a new significantly larger release and that was the case with lrzip 0.610. Since I'm loathe to leaving a buggy release lying around, I've released a new version hot on the heels of the old one.<br /><br /><a href="http://www.blogger.com/\u005c%20http://freecode.com/projects/long-range-zip/releases/342531">lrzip 0.611 on freecode</a><br /><br /><a href="http://lrzip.kolivas.org\u005c%20/">http://lrzip.kolivas.org </a><br /><br />lrzcat and lrzuntar were broken on the last release and they've now been fixed. lrzuntar also had the nasty habit of overwriting existing directories without warning so I've modified the code so it will not overwrite it without the -f option.<br /><br />With the report of slowdowns on the last release, almost certainly due to incorporating the liblrzip library support, since nothing else changed, I figured it was time to do some hot spot profiling. So I pulled out oprofile and found where most of the time was spent in the code during the rzip stage. Then I went in and carefully rewrote small areas of the hottest functions as though they were critical code paths in the CPU scheduler and managed to find a few small speed improvements. Most of the improvements won't be noticeable unless you're running one of the faster compression modes like lzo, or none at all with -n, but it is faster. I also moved the checksum routines (crc32 and md5) into separate threads as they now use a significant amount of CPU time of their own during the rzip phase, and this should speed things up slightly too.<br /><br />Then I went to the decompression side of things and did some profiling on the runzip stage and got a surprise. Most of the time during decompression is simply spent on the md5 update code. If I disabled the md5 update code, it was much faster during the runzip stage. After arguing with myself for a day, I figured it was still better to have integrity checking enabled and consider the addition of a fast mode for decompression since that will actually be almost lightning quick.<br /><br />Interestingly, when profiling decompression, I was using the test option (-t) which does not write anything to disk, and things changed quite dramatically when I changed to actual decompression to disk. It took four times longer to decompress a 1GB archive to disk than it did to just test decompression in ram. Now this all seems obvious if you consider how long it takes to write something to disk, but that was not the case at all. In fact, virtually none of the data is written to disk by the time decompression is complete; it is just all in "dirty ram" as writeback. This did not change whether I used a -ck kernel with a low dirty ratio setting or the mainline default of 10. After some more prodding around I discovered that doing a simple write() of a 1GB buffer took over 7 seconds on modern hardware. This is only 140MB/s for a copy from memory to memory! It should be 20 times faster than that. I even tried taking the write function out of the equation and doing an mmap on the file and then memcpy from the buffer to the mmaped ram and it took the same amount of time, so the slowdown was not in the write() function call. After speaking to a few people and googling, it appears I'm not alone in this finding and it may be only happening in recent linux kernels. At this point I gave up trying to find what was causing this slow decompression on lrzip since it seemed unrelated to the lrzip code, and concentrated on getting this release out. I wonder if this is related to the writeback code that I was actually so looking forward to in 3.2ish. However others reported the problem continues as far back as 2.6.38 whereas it's not there in 2.6.35. I'll wait and see.<br /><br />Anyway it may be possible to get lrzip integration into libarchive and therefore a number of package managers and decompression programs that use this library. The GPL license in lrzip may be a sticking point, though, and the authors of lzo and the original rzip have not responded about queries about the possibility of making the library LGPL which would make it easier to incorporate into the BSD licensed libarchive. So for now, it's stuck on GPL version 2.<br /><br />Enjoy.
p3041
sg373
(lp3042
g1
(g2
g3
(dp3043
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3044
sg53
g261
sg262
Nsg263
VIt usually doesn't take long to find bugs in a new significantly larger release and that was the case with lrzip 0.610. Since I'm loathe to leaving a buggy release lying around, I've released a new version hot on the heels of the old one.<br /><br /><a href="http://www.blogger.com/\u005c%20http://freecode.com/projects/long-range-zip/releases/342531">lrzip 0.611 on freecode</a><br /><br /><a href="http://lrzip.kolivas.org\u005c%20/">http://lrzip.kolivas.org </a><br /><br />lrzcat and lrzuntar were broken on the last release and they've now been fixed. lrzuntar also had the nasty habit of overwriting existing directories without warning so I've modified the code so it will not overwrite it without the -f option.<br /><br />With the report of slowdowns on the last release, almost certainly due to incorporating the liblrzip library support, since nothing else changed, I figured it was time to do some hot spot profiling. So I pulled out oprofile and found where most of the time was spent in the code during the rzip stage. Then I went in and carefully rewrote small areas of the hottest functions as though they were critical code paths in the CPU scheduler and managed to find a few small speed improvements. Most of the improvements won't be noticeable unless you're running one of the faster compression modes like lzo, or none at all with -n, but it is faster. I also moved the checksum routines (crc32 and md5) into separate threads as they now use a significant amount of CPU time of their own during the rzip phase, and this should speed things up slightly too.<br /><br />Then I went to the decompression side of things and did some profiling on the runzip stage and got a surprise. Most of the time during decompression is simply spent on the md5 update code. If I disabled the md5 update code, it was much faster during the runzip stage. After arguing with myself for a day, I figured it was still better to have integrity checking enabled and consider the addition of a fast mode for decompression since that will actually be almost lightning quick.<br /><br />Interestingly, when profiling decompression, I was using the test option (-t) which does not write anything to disk, and things changed quite dramatically when I changed to actual decompression to disk. It took four times longer to decompress a 1GB archive to disk than it did to just test decompression in ram. Now this all seems obvious if you consider how long it takes to write something to disk, but that was not the case at all. In fact, virtually none of the data is written to disk by the time decompression is complete; it is just all in "dirty ram" as writeback. This did not change whether I used a -ck kernel with a low dirty ratio setting or the mainline default of 10. After some more prodding around I discovered that doing a simple write() of a 1GB buffer took over 7 seconds on modern hardware. This is only 140MB/s for a copy from memory to memory! It should be 20 times faster than that. I even tried taking the write function out of the equation and doing an mmap on the file and then memcpy from the buffer to the mmaped ram and it took the same amount of time, so the slowdown was not in the write() function call. After speaking to a few people and googling, it appears I'm not alone in this finding and it may be only happening in recent linux kernels. At this point I gave up trying to find what was causing this slow decompression on lrzip since it seemed unrelated to the lrzip code, and concentrated on getting this release out. I wonder if this is related to the writeback code that I was actually so looking forward to in 3.2ish. However others reported the problem continues as far back as 2.6.38 whereas it's not there in 2.6.35. I'll wait and see.<br /><br />Anyway it may be possible to get lrzip integration into libarchive and therefore a number of package managers and decompression programs that use this library. The GPL license in lrzip may be a sticking point, though, and the authors of lzo and the original rzip have not responded about queries about the possibility of making the library LGPL which would make it easier to incorporate into the BSD licensed libarchive. So for now, it's stuck on GPL version 2.<br /><br />Enjoy.
p3045
stRp3046
asg265
I01
sS'title_detail'
p3047
g1
(g2
g3
(dp3048
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3049
sg53
g269
sg262
Nsg263
g3039
stRp3050
sg382
V2012-03-11T22:36:00.000+11:00
p3051
sg384
(lp3052
g386
aV*
ag387
astRp3053
ag1
(g2
g3
(dp3054
g7
V2012-03-08T14:42:01.594+11:00
p3055
sVgd_image
p3056
(dp3057
S'width'
p3058
V16
p3059
sS'src'
p3060
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p3061
sS'rel'
p3062
Vhttp://schemas.google.com/g/2005#thumbnail
p3063
sS'height'
p3064
V16
p3065
ssg21
g22
((I2012
I3
I8
I3
I42
I1
I3
I68
I0
t(dtRp3066
sg24
(lp3067
g1
(g2
g3
(dp3068
S'href'
p3069
Vhttp://ck-hack.blogspot.com/feeds/6069991681506715476/comments/default
p3070
sS'type'
p3071
Vapplication/atom+xml
p3072
sS'rel'
p3073
Vreplies
p3074
sS'title'
p3075
VPost Comments
p3076
stRp3077
ag1
(g2
g3
(dp3078
S'href'
p3079
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0610.html#comment-form
p3080
sS'type'
p3081
Vtext/html
p3082
sS'rel'
p3083
Vreplies
p3084
sS'title'
p3085
V3 Comments
p3086
stRp3087
ag1
(g2
g3
(dp3088
S'href'
p3089
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/6069991681506715476
p3090
sS'type'
p3091
Vapplication/atom+xml
p3092
sS'rel'
p3093
Vedit
p3094
stRp3095
ag1
(g2
g3
(dp3096
S'href'
p3097
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/6069991681506715476
p3098
sS'type'
p3099
Vapplication/atom+xml
p3100
sS'rel'
p3101
Vself
p3102
stRp3103
ag1
(g2
g3
(dp3104
S'href'
p3105
Vhttp://ck-hack.blogspot.com/2012/03/lrzip-0610.html
p3106
sS'type'
p3107
Vtext/html
p3108
sS'rel'
p3109
Valternate
p3110
sS'title'
p3111
Vlrzip-0.610
p3112
stRp3113
asg66
(lp3114
g1
(g2
g3
(dp3115
g69
Vlrzip
p3116
sg71
Vhttp://www.blogger.com/atom/ns#
p3117
sg72
NstRp3118
ag1
(g2
g3
(dp3119
g69
Vcompression window
p3120
sg71
Vhttp://www.blogger.com/atom/ns#
p3121
sg72
NstRp3122
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3123
sVthr_total
p3124
V3
sg238
(lp3125
g1
(g2
g3
(dp3126
g229
g3123
sg233
Vck
p3127
sg242
Vnoreply@blogger.com
p3128
stRp3129
asg237
g3106
sS'author_detail'
p3130
g1
(g2
g3
(dp3131
g229
g3123
sg233
g3127
sg242
g3128
stRp3132
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-6069991681506715476
p3133
sg367
g22
((I2012
I3
I8
I3
I39
I0
I3
I68
I0
t(dtRp3134
sg253
Vlrzip-0.610
p3135
sg255
Vck (noreply@blogger.com)
p3136
sg371
VI haven't been idle all this time. In all honesty I've spent a lot of time playing with my bitcoin mining code in cgminer and after a couple of hardware failures with my mining rig I was finally able to turn my attention back to lrzip which has been really fairly quiet in the bug reporting department since the last stable release.<br /><br />Here is version 0.610 (when freecode updates):<br /><a href="http://freecode.com/projects/long-range-zip">http://freecode.com/projects/long-range-zip</a><br /><br />Or directly:<br /><a href="http://lrzip.kolivas.org/">http://lrzip.kolivas.org</a><br /><br />The major feature addition in this latest version is largely thanks to the work of Michael Blumenkrantz in the form of a liblrzip library! This means you can now link in lrzip compression and decompression into any other application. There is a range of APIs available to use this capability from the simplest gzip equivalent lrzip_compress and lrzip_decompress functions to ones that expose all the low level features knobs and dials in lrzip. There are also a couple of demo examples of using these functions included in the source code, but in their simplest form they should be very easy to use. I look forward to seeing package managers, archivers and maybe even git and so on having lrzip support in the future ;) Being a large chunk of new code it is not entirely impossible that bugs or issues with using the library may show up.<br /><br />WHATS-NEW summary:<br />The new liblrzip library allows you to add lrzip compression and decompression<br />to other applications with either simple lrzip_compress and lrzip_decompress<br />functions or fine control over all the options with low level functions.<br />Faster rzip stage when files are large enough to require the sliding mmap<br />feature (usually &gt;1/3 of ram) and in unlimited mode.<br />A bug where multiple files being compressed or decompressed from the one<br />command line could have gotten corrupted was fixed.<br />Modification date of the decompressed file is now set to that of the lrzip<br />archive (support for storing the original file's date would require modifying<br />the archive format again).<br />Compilation warning fixes.<br />Make lrztar work with directories with spaces in their names.<br /><br /><br />The full changelog follows:<br />* Implement complete set of liblrzip libraries, documentation and example uses<br />with support for simple lrzip_compress() and lrzip_decompress() or complete<br />fine-grained control over all compression and decompression options.<br />* Use as much of the low buffer as possible with a single memcopy before going<br />fine grained byte by byte.<br />* Preserve the compressed time on decompression where suitable.<br />* Store a copy of the control struct to be reused on subsequent files to prevent<br />variables being modified in the control struct on the first file that corrupt<br />compression/decompression of the 2nd file.<br />* Explicitly select C99 to avoid certain warnings.<br />* Generic modifications to silence -Wextra warnings.<br />* Fix typos.<br />* Use an array of parameters in lrztar to allow working with directories with<br />spaces in their names.<br /><br />Enjoy.
p3137
sg373
(lp3138
g1
(g2
g3
(dp3139
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3140
sg53
g261
sg262
Nsg263
g3137
stRp3141
asg265
I01
sS'title_detail'
p3142
g1
(g2
g3
(dp3143
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3144
sg53
g269
sg262
Nsg263
g3135
stRp3145
sg382
V2012-03-08T14:39:00.000+11:00
p3146
sg384
(lp3147
g386
aV*
ag387
astRp3148
ag1
(g2
g3
(dp3149
g7
V2012-01-16T10:57:29.823+11:00
p3150
sVgd_image
p3151
(dp3152
S'width'
p3153
V16
p3154
sS'src'
p3155
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p3156
sS'rel'
p3157
Vhttp://schemas.google.com/g/2005#thumbnail
p3158
sS'height'
p3159
V16
p3160
ssg21
g22
((I2012
I1
I15
I23
I57
I29
I6
I15
I0
t(dtRp3161
sg24
(lp3162
g1
(g2
g3
(dp3163
Vhref
p3164
Vhttp://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/patch-3.2-ck1.bz2
p3165
sg503
g504
sg253
g1
(g505
g506
Vpatch-3.2-ck1.bz2
tRp3166
(dp3167
g509
Nsg510
g1
(g511
g512
NtRp3168
(dp3169
g515
I00
sg516
Vbr
p3170
sg518
g1
(g519
g512
NtRp3171
(dp3172
g522
Nsg523
I0
sg509
Nsg524
(lp3173
sg526
I00
sg527
I00
sg528
(lp3174
g1
(g505
g506
VThese are patches designed to improve system responsiveness and interactivity with specific emphasis on the desktop, but suitable to any commodity hardware workload.
tRp3175
(dp3176
g509
g1
(g511
g512
NtRp3177
(dp3178
g515
I00
sg516
Vbr
p3179
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3180
(dp3181
g515
I00
sg516
Vbr
p3182
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VThis is an upgrade to BFS 416, trivial bugfixes and a resync from 3.1.0-ck1 . I've changed the versioning to not specify a 3 point release since it usually applies to successive 3 point releases for some time.
tRp3183
(dp3184
g509
g1
(g511
g512
NtRp3185
(dp3186
g515
I00
sg516
Vbr
p3187
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3188
(dp3189
g515
I00
sg516
Vbr
p3190
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VApply to 3.2.x:
tRp3191
(dp3192
g509
g1
(g511
g512
NtRp3193
(dp3194
g515
I00
sg516
Vbr
p3195
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3196
(dp3197
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g3168
sg546
I00
sg510
g3166
sg547
I00
sg524
(lp3198
(g3164
g3165
tp3199
asg550
(dp3200
g3164
g3165
sg503
g504
sg253
g3166
ssg526
I00
sg552
I00
sg553
g3193
sg527
I00
sg528
(lp3201
g3166
asg555
g3193
sbsg546
I00
sg510
g3196
sg547
I01
sg524
(lp3202
sg550
(dp3203
sg526
I00
sg552
I00
sg553
g3191
sg527
I00
sg528
(lp3204
sg555
g3191
sbsg510
g3193
sg553
g3188
sg518
g3171
sg555
g3188
sbsg546
I00
sg510
g3191
sg547
I01
sg524
(lp3205
sg550
(dp3206
sg526
I00
sg552
I00
sg553
g3185
sg527
I00
sg528
(lp3207
sg555
g3185
sbsg546
I00
sg510
g3188
sg547
I01
sg524
(lp3208
sg550
(dp3209
sg526
I00
sg552
I00
sg553
g3183
sg527
I00
sg528
(lp3210
sg555
g3183
sbsg510
g3185
sg553
g3180
sg518
g3171
sg555
g3180
sbsg546
I00
sg510
g3183
sg547
I01
sg524
(lp3211
sg550
(dp3212
sg526
I00
sg552
I00
sg553
g3177
sg527
I00
sg528
(lp3213
sg555
g3177
sbsg546
I00
sg510
g3180
sg547
I01
sg524
(lp3214
sg550
(dp3215
sg526
I00
sg552
I00
sg553
g3175
sg527
I00
sg528
(lp3216
sg555
g3175
sbsg510
g3177
sg553
Nsg518
g3171
sg555
Nsbag3177
ag3180
ag3183
ag3185
ag3188
ag3191
ag3193
ag3196
ag3168
ag1
(g511
g512
NtRp3217
(dp3218
g515
I00
sg516
Vbr
p3219
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3220
(dp3221
g515
I00
sg516
Vbr
p3222
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VBroken out tarball:
tRp3223
(dp3224
g509
g1
(g511
g512
NtRp3225
(dp3226
g515
I00
sg516
Vbr
p3227
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3228
(dp3229
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3230
(dp3231
g515
I00
sg516
Vbr
p3232
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3233
(dp3234
g515
I00
sg516
Vbr
p3235
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VDiscrete patches:
tRp3236
(dp3237
g509
g1
(g511
g512
NtRp3238
(dp3239
g515
I00
sg516
Vbr
p3240
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3241
(dp3242
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3243
(dp3244
g515
I00
sg516
Vbr
p3245
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3246
(dp3247
g515
I00
sg516
Vbr
p3248
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3249
(dp3250
g515
I00
sg516
Vbr
p3251
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VBFS by itself:
tRp3252
(dp3253
g509
g1
(g511
g512
NtRp3254
(dp3255
g515
I00
sg516
Vbr
p3256
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3257
(dp3258
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3259
(dp3260
g515
I00
sg516
Vbr
p3261
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3262
(dp3263
g515
I00
sg516
Vbr
p3264
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3265
(dp3266
g515
I00
sg516
Vbr
p3267
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VWeb:
tRp3268
(dp3269
g509
g1
(g511
g512
NtRp3270
(dp3271
g515
I00
sg516
Vbr
p3272
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3273
(dp3274
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3275
(dp3276
g515
I00
sg516
Vbr
p3277
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3278
(dp3279
g515
I00
sg516
Vbr
p3280
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3281
(dp3282
g515
I00
sg516
Vbr
p3283
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VCode blog when I feel like it:
tRp3284
(dp3285
g509
g1
(g511
g512
NtRp3286
(dp3287
g515
I00
sg516
Vbr
p3288
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3289
(dp3290
g515
I00
sg516
Va
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3291
(dp3292
g515
I00
sg516
Vbr
p3293
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3294
(dp3295
g515
I00
sg516
Vbr
p3296
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3297
(dp3298
g515
I00
sg516
Vbr
p3299
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VEach discrete patch usually contains a brief description of what it does at 
tRp3300
(dp3301
g509
g1
(g511
g512
NtRp3302
(dp3303
g515
I00
sg516
Vbr
p3304
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vthe top of the patch itself.
tRp3305
(dp3306
g509
g1
(g511
g512
NtRp3307
(dp3308
g515
I00
sg516
Vbr
p3309
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3310
(dp3311
g515
I00
sg516
Vbr
p3312
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VFull patchlist:
tRp3313
(dp3314
g509
g1
(g511
g512
NtRp3315
(dp3316
g515
I00
sg516
Vbr
p3317
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3318
(dp3319
g515
I00
sg516
Vbr
p3320
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
V3.2-sched-bfs-416.patch
tRp3321
(dp3322
g509
g1
(g511
g512
NtRp3323
(dp3324
g515
I00
sg516
Vbr
p3325
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-minimal_swappiness.patch
tRp3326
(dp3327
g509
g1
(g511
g512
NtRp3328
(dp3329
g515
I00
sg516
Vbr
p3330
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-enable_swaptoken_only_when_swap_full.patch
tRp3331
(dp3332
g509
g1
(g511
g512
NtRp3333
(dp3334
g515
I00
sg516
Vbr
p3335
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-drop_swap_cache_aggressively.patch
tRp3336
(dp3337
g509
g1
(g511
g512
NtRp3338
(dp3339
g515
I00
sg516
Vbr
p3340
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-kswapd_inherit_prio-1.patch
tRp3341
(dp3342
g509
g1
(g511
g512
NtRp3343
(dp3344
g515
I00
sg516
Vbr
p3345
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-background_scan.patch
tRp3346
(dp3347
g509
g1
(g511
g512
NtRp3348
(dp3349
g515
I00
sg516
Vbr
p3350
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-idleprio_prio-1.patch
tRp3351
(dp3352
g509
g1
(g511
g512
NtRp3353
(dp3354
g515
I00
sg516
Vbr
p3355
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-lru_cache_add_lru_tail-2.patch
tRp3356
(dp3357
g509
g1
(g511
g512
NtRp3358
(dp3359
g515
I00
sg516
Vbr
p3360
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vmm-decrease_default_dirty_ratio-1.patch
tRp3361
(dp3362
g509
g1
(g511
g512
NtRp3363
(dp3364
g515
I00
sg516
Vbr
p3365
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vkconfig-expose_vmsplit_option.patch
tRp3366
(dp3367
g509
g1
(g511
g512
NtRp3368
(dp3369
g515
I00
sg516
Vbr
p3370
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vhz-default_1000.patch
tRp3371
(dp3372
g509
g1
(g511
g512
NtRp3373
(dp3374
g515
I00
sg516
Vbr
p3375
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vhz-no_default_250.patch
tRp3376
(dp3377
g509
g1
(g511
g512
NtRp3378
(dp3379
g515
I00
sg516
Vbr
p3380
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vhz-raise_max.patch
tRp3381
(dp3382
g509
g1
(g511
g512
NtRp3383
(dp3384
g515
I00
sg516
Vbr
p3385
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vpreempt-desktop-tune.patch
tRp3386
(dp3387
g509
g1
(g511
g512
NtRp3388
(dp3389
g515
I00
sg516
Vbr
p3390
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
Vck1-version.patch
tRp3391
(dp3392
g509
g1
(g511
g512
NtRp3393
(dp3394
g515
I00
sg516
Vbr
p3395
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3396
(dp3397
g515
I00
sg516
Vbr
p3398
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VEnjoy!
tRp3399
(dp3400
g509
g1
(g511
g512
NtRp3401
(dp3402
g515
I00
sg516
Vbr
p3403
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
V\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044
tRp3404
(dp3405
g509
g1
(g511
g512
NtRp3406
(dp3407
g515
I00
sg516
Vbr
p3408
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3409
(dp3410
g515
I00
sg516
Vbr
p3411
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
V--ck
tRp3412
(dp3413
g509
g1
(g511
g512
NtRp3414
(dp3415
g515
I00
sg516
Vbr
p3416
sg518
g3171
sg535
g519
sg509
g1
(g511
g512
NtRp3417
(dp3418
g515
I00
sg516
Vbr
p3419
sg518
g3171
sg535
g519
sg509
g1
(g505
g506
VP.S. What this really means is I finished playing zelda.
tRp3420
(dp3421
g509
Nsg510
Nsg553
g3417
sg518
g3171
sg555
g3417
sbsg546
I00
sg510
g3420
sg547
I01
sg524
(lp3422
sg550
(dp3423
sg526
I00
sg552
I00
sg553
g3414
sg527
I00
sg528
(lp3424
sg555
g3414
sbsg546
I00
sg510
g3417
sg547
I01
sg524
(lp3425
sg550
(dp3426
sg526
I00
sg552
I00
sg553
g3412
sg527
I00
sg528
(lp3427
sg555
g3412
sbsg510
g3414
sg553
g3409
sg518
g3171
sg555
g3409
sbsg546
I00
sg510
g3412
sg547
I01
sg524
(lp3428
sg550
(dp3429
sg526
I00
sg552
I00
sg553
g3406
sg527
I00
sg528
(lp3430
sg555
g3406
sbsg546
I00
sg510
g3409
sg547
I01
sg524
(lp3431
sg550
(dp3432
sg526
I00
sg552
I00
sg553
g3404
sg527
I00
sg528
(lp3433
sg555
g3404
sbsg510
g3406
sg553
g3401
sg518
g3171
sg555
g3401
sbsg546
I00
sg510
g3404
sg547
I01
sg524
(lp3434
sg550
(dp3435
sg526
I00
sg552
I00
sg553
g3399
sg527
I00
sg528
(lp3436
sg555
g3399
sbsg510
g3401
sg553
g3396
sg518
g3171
sg555
g3396
sbsg546
I00
sg510
g3399
sg547
I01
sg524
(lp3437
sg550
(dp3438
sg526
I00
sg552
I00
sg553
g3393
sg527
I00
sg528
(lp3439
sg555
g3393
sbsg546
I00
sg510
g3396
sg547
I01
sg524
(lp3440
sg550
(dp3441
sg526
I00
sg552
I00
sg553
g3391
sg527
I00
sg528
(lp3442
sg555
g3391
sbsg510
g3393
sg553
g3388
sg518
g3171
sg555
g3388
sbsg546
I00
sg510
g3391
sg547
I01
sg524
(lp3443
sg550
(dp3444
sg526
I00
sg552
I00
sg553
g3386
sg527
I00
sg528
(lp3445
sg555
g3386
sbsg510
g3388
sg553
g3383
sg518
g3171
sg555
g3383
sbsg546
I00
sg510
g3386
sg547
I01
sg524
(lp3446
sg550
(dp3447
sg526
I00
sg552
I00
sg553
g3381
sg527
I00
sg528
(lp3448
sg555
g3381
sbsg510
g3383
sg553
g3378
sg518
g3171
sg555
g3378
sbsg546
I00
sg510
g3381
sg547
I01
sg524
(lp3449
sg550
(dp3450
sg526
I00
sg552
I00
sg553
g3376
sg527
I00
sg528
(lp3451
sg555
g3376
sbsg510
g3378
sg553
g3373
sg518
g3171
sg555
g3373
sbsg546
I00
sg510
g3376
sg547
I01
sg524
(lp3452
sg550
(dp3453
sg526
I00
sg552
I00
sg553
g3371
sg527
I00
sg528
(lp3454
sg555
g3371
sbsg510
g3373
sg553
g3368
sg518
g3171
sg555
g3368
sbsg546
I00
sg510
g3371
sg547
I01
sg524
(lp3455
sg550
(dp3456
sg526
I00
sg552
I00
sg553
g3366
sg527
I00
sg528
(lp3457
sg555
g3366
sbsg510
g3368
sg553
g3363
sg518
g3171
sg555
g3363
sbsg546
I00
sg510
g3366
sg547
I01
sg524
(lp3458
sg550
(dp3459
sg526
I00
sg552
I00
sg553
g3361
sg527
I00
sg528
(lp3460
sg555
g3361
sbsg510
g3363
sg553
g3358
sg518
g3171
sg555
g3358
sbsg546
I00
sg510
g3361
sg547
I01
sg524
(lp3461
sg550
(dp3462
sg526
I00
sg552
I00
sg553
g3356
sg527
I00
sg528
(lp3463
sg555
g3356
sbsg510
g3358
sg553
g3353
sg518
g3171
sg555
g3353
sbsg546
I00
sg510
g3356
sg547
I01
sg524
(lp3464
sg550
(dp3465
sg526
I00
sg552
I00
sg553
g3351
sg527
I00
sg528
(lp3466
sg555
g3351
sbsg510
g3353
sg553
g3348
sg518
g3171
sg555
g3348
sbsg546
I00
sg510
g3351
sg547
I01
sg524
(lp3467
sg550
(dp3468
sg526
I00
sg552
I00
sg553
g3346
sg527
I00
sg528
(lp3469
sg555
g3346
sbsg510
g3348
sg553
g3343
sg518
g3171
sg555
g3343
sbsg546
I00
sg510
g3346
sg547
I01
sg524
(lp3470
sg550
(dp3471
sg526
I00
sg552
I00
sg553
g3341
sg527
I00
sg528
(lp3472
sg555
g3341
sbsg510
g3343
sg553
g3338
sg518
g3171
sg555
g3338
sbsg546
I00
sg510
g3341
sg547
I01
sg524
(lp3473
sg550
(dp3474
sg526
I00
sg552
I00
sg553
g3336
sg527
I00
sg528
(lp3475
sg555
g3336
sbsg510
g3338
sg553
g3333
sg518
g3171
sg555
g3333
sbsg546
I00
sg510
g3336
sg547
I01
sg524
(lp3476
sg550
(dp3477
sg526
I00
sg552
I00
sg553
g3331
sg527
I00
sg528
(lp3478
sg555
g3331
sbsg510
g3333
sg553
g3328
sg518
g3171
sg555
g3328
sbsg546
I00
sg510
g3331
sg547
I01
sg524
(lp3479
sg550
(dp3480
sg526
I00
sg552
I00
sg553
g3326
sg527
I00
sg528
(lp3481
sg555
g3326
sbsg510
g3328
sg553
g3323
sg518
g3171
sg555
g3323
sbsg546
I00
sg510
g3326
sg547
I01
sg524
(lp3482
sg550
(dp3483
sg526
I00
sg552
I00
sg553
g3321
sg527
I00
sg528
(lp3484
sg555
g3321
sbsg510
g3323
sg553
g3318
sg518
g3171
sg555
g3318
sbsg546
I00
sg510
g3321
sg547
I01
sg524
(lp3485
sg550
(dp3486
sg526
I00
sg552
I00
sg553
g3315
sg527
I00
sg528
(lp3487
sg555
g3315
sbsg546
I00
sg510
g3318
sg547
I01
sg524
(lp3488
sg550
(dp3489
sg526
I00
sg552
I00
sg553
g3313
sg527
I00
sg528
(lp3490
sg555
g3313
sbsg510
g3315
sg553
g3310
sg518
g3171
sg555
g3310
sbsg546
I00
sg510
g3313
sg547
I01
sg524
(lp3491
sg550
(dp3492
sg526
I00
sg552
I00
sg553
g3307
sg527
I00
sg528
(lp3493
sg555
g3307
sbsg546
I00
sg510
g3310
sg547
I01
sg524
(lp3494
sg550
(dp3495
sg526
I00
sg552
I00
sg553
g3305
sg527
I00
sg528
(lp3496
sg555
g3305
sbsg510
g3307
sg553
g3302
sg518
g3171
sg555
g3302
sbsg546
I00
sg510
g3305
sg547
I01
sg524
(lp3497
sg550
(dp3498
sg526
I00
sg552
I00
sg553
g3300
sg527
I00
sg528
(lp3499
sg555
g3300
sbsg510
g3302
sg553
g3297
sg518
g3171
sg555
g3297
sbsg546
I00
sg510
g3300
sg547
I01
sg524
(lp3500
sg550
(dp3501
sg526
I00
sg552
I00
sg553
g3294
sg527
I00
sg528
(lp3502
sg555
g3294
sbsg546
I00
sg510
g3297
sg547
I01
sg524
(lp3503
sg550
(dp3504
sg526
I00
sg552
I00
sg553
g3291
sg527
I00
sg528
(lp3505
sg555
g3291
sbsg546
I00
sg510
g3294
sg547
I01
sg524
(lp3506
sg550
(dp3507
sg526
I00
sg552
I00
sg553
g3289
sg527
I00
sg528
(lp3508
sg555
g1
(g505
g506
Vck-hack.blogspot.com
tRp3509
(dp3510
g509
Nsg510
g3291
sg553
Nsg518
g3289
sg555
g3289
sbsbsg546
I00
sg510
g3509
sg547
I00
sg524
(lp3511
(Vhref
p3512
Vhttp://ck-hack.blogspot.com/
p3513
tp3514
asg550
(dp3515
g3512
g3513
ssg526
I00
sg552
I00
sg553
g3286
sg527
I00
sg528
(lp3516
g3509
asg555
g3286
sbsg546
I00
sg510
g3289
sg547
I01
sg524
(lp3517
sg550
(dp3518
sg526
I00
sg552
I00
sg553
g3284
sg527
I00
sg528
(lp3519
sg555
g3284
sbsg510
g3286
sg553
g3281
sg518
g3171
sg555
g3281
sbsg546
I00
sg510
g3284
sg547
I01
sg524
(lp3520
sg550
(dp3521
sg526
I00
sg552
I00
sg553
g3278
sg527
I00
sg528
(lp3522
sg555
g3278
sbsg546
I00
sg510
g3281
sg547
I01
sg524
(lp3523
sg550
(dp3524
sg526
I00
sg552
I00
sg553
g3275
sg527
I00
sg528
(lp3525
sg555
g3275
sbsg546
I00
sg510
g3278
sg547
I01
sg524
(lp3526
sg550
(dp3527
sg526
I00
sg552
I00
sg553
g3273
sg527
I00
sg528
(lp3528
sg555
g1
(g505
g506
Vkernel.kolivas.org
tRp3529
(dp3530
g509
Nsg510
g3275
sg553
Nsg518
g3273
sg555
g3273
sbsbsg546
I00
sg510
g3529
sg547
I00
sg524
(lp3531
(Vhref
p3532
Vhttp://kernel.kolivas.org/
p3533
tp3534
asg550
(dp3535
g3532
g3533
ssg526
I00
sg552
I00
sg553
g3270
sg527
I00
sg528
(lp3536
g3529
asg555
g3270
sbsg546
I00
sg510
g3273
sg547
I01
sg524
(lp3537
sg550
(dp3538
sg526
I00
sg552
I00
sg553
g3268
sg527
I00
sg528
(lp3539
sg555
g3268
sbsg510
g3270
sg553
g3265
sg518
g3171
sg555
g3265
sbsg546
I00
sg510
g3268
sg547
I01
sg524
(lp3540
sg550
(dp3541
sg526
I00
sg552
I00
sg553
g3262
sg527
I00
sg528
(lp3542
sg555
g3262
sbsg546
I00
sg510
g3265
sg547
I01
sg524
(lp3543
sg550
(dp3544
sg526
I00
sg552
I00
sg553
g3259
sg527
I00
sg528
(lp3545
sg555
g3259
sbsg546
I00
sg510
g3262
sg547
I01
sg524
(lp3546
sg550
(dp3547
sg526
I00
sg552
I00
sg553
g3257
sg527
I00
sg528
(lp3548
sg555
g1
(g505
g506
Vbfs
tRp3549
(dp3550
g509
Nsg510
g3259
sg553
Nsg518
g3257
sg555
g3257
sbsbsg546
I00
sg510
g3549
sg547
I00
sg524
(lp3551
(Vhref
p3552
Vhttp://ck.kolivas.org/patches/bfs/
p3553
tp3554
asg550
(dp3555
g3552
g3553
ssg526
I00
sg552
I00
sg553
g3254
sg527
I00
sg528
(lp3556
g3549
asg555
g3254
sbsg546
I00
sg510
g3257
sg547
I01
sg524
(lp3557
sg550
(dp3558
sg526
I00
sg552
I00
sg553
g3252
sg527
I00
sg528
(lp3559
sg555
g3252
sbsg510
g3254
sg553
g3249
sg518
g3171
sg555
g3249
sbsg546
I00
sg510
g3252
sg547
I01
sg524
(lp3560
sg550
(dp3561
sg526
I00
sg552
I00
sg553
g3246
sg527
I00
sg528
(lp3562
sg555
g3246
sbsg546
I00
sg510
g3249
sg547
I01
sg524
(lp3563
sg550
(dp3564
sg526
I00
sg552
I00
sg553
g3243
sg527
I00
sg528
(lp3565
sg555
g3243
sbsg546
I00
sg510
g3246
sg547
I01
sg524
(lp3566
sg550
(dp3567
sg526
I00
sg552
I00
sg553
g3241
sg527
I00
sg528
(lp3568
sg555
g1
(g505
g506
Vpatches
tRp3569
(dp3570
g509
Nsg510
g3243
sg553
Nsg518
g3241
sg555
g3241
sbsbsg546
I00
sg510
g3569
sg547
I00
sg524
(lp3571
(Vhref
p3572
Vhttp://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/patches/
p3573
tp3574
asg550
(dp3575
g3572
g3573
ssg526
I00
sg552
I00
sg553
g3238
sg527
I00
sg528
(lp3576
g3569
asg555
g3238
sbsg546
I00
sg510
g3241
sg547
I01
sg524
(lp3577
sg550
(dp3578
sg526
I00
sg552
I00
sg553
g3236
sg527
I00
sg528
(lp3579
sg555
g3236
sbsg510
g3238
sg553
g3233
sg518
g3171
sg555
g3233
sbsg546
I00
sg510
g3236
sg547
I01
sg524
(lp3580
sg550
(dp3581
sg526
I00
sg552
I00
sg553
g3230
sg527
I00
sg528
(lp3582
sg555
g3230
sbsg546
I00
sg510
g3233
sg547
I01
sg524
(lp3583
sg550
(dp3584
sg526
I00
sg552
I00
sg553
g3228
sg527
I00
sg528
(lp3585
sg555
g1
(g505
g506
V3.2-ck1-broken-out.tar.bz2
tRp3586
(dp3587
g509
Nsg510
g3230
sg553
Nsg518
g3228
sg555
g3228
sbsbsg546
I00
sg510
g3586
sg547
I00
sg524
(lp3588
(Vhref
p3589
Vhttp://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/3.2-ck1-broken-out.tar.bz2
p3590
tp3591
asg550
(dp3592
g3589
g3590
sg503
g504
sg253
g3586
ssg526
I00
sg552
I00
sg553
g3225
sg527
I00
sg528
(lp3593
g3586
asg555
g3225
sbsg546
I00
sg510
g3228
sg547
I01
sg524
(lp3594
sg550
(dp3595
sg526
I00
sg552
I00
sg553
g3223
sg527
I00
sg528
(lp3596
sg555
g3223
sbsg510
g3225
sg553
g3220
sg518
g3171
sg555
g3220
sbsg546
I00
sg510
g3223
sg547
I01
sg524
(lp3597
sg550
(dp3598
sg526
I00
sg552
I00
sg553
g3217
sg527
I00
sg528
(lp3599
sg555
g3217
sbsg546
I00
sg510
g3220
sg547
I01
sg524
(lp3600
sg550
(dp3601
sg526
I00
sg552
I00
sg553
g3168
sg527
I00
sg528
(lp3602
sg555
g3168
sbag3220
ag3223
ag3225
ag3228
ag3230
ag3233
ag3236
ag3238
ag3241
ag3243
ag3246
ag3249
ag3252
ag3254
ag3257
ag3259
ag3262
ag3265
ag3268
ag3270
ag3273
ag3275
ag3278
ag3281
ag3284
ag3286
ag3289
ag3291
ag3294
ag3297
ag3300
ag3302
ag3305
ag3307
ag3310
ag3313
ag3315
ag3318
ag3321
ag3323
ag3326
ag3328
ag3331
ag3333
ag3336
ag3338
ag3341
ag3343
ag3346
ag3348
ag3351
ag3353
ag3356
ag3358
ag3361
ag3363
ag3366
ag3368
ag3371
ag3373
ag3376
ag3378
ag3381
ag3383
ag3386
ag3388
ag3391
ag3393
ag3396
ag3399
ag3401
ag3404
ag3406
ag3409
ag3412
ag3414
ag3417
ag3420
asg555
g3420
sg987
(lp3603
g3171
asg515
I00
sg989
g990
sg991
I0
sg510
Nsg992
I0
sg993
I1
sg552
I1
sg553
Nsg994
Nsg995
Nsg518
Nsg535
g519
sg546
I00
sg996
V<br  />
p3604
sg547
I00
sg998
I0
sg999
(dp3605
NNssg1001
Nsg1002
(lp3606
sg1004
(lp3607
sg516
g1006
sg1007
Nsg1008
V
sg1009
g3419
sg1010
g1011
sg1012
g3171
sg1013
(lp3608
sbsg535
g519
sg509
g3217
sg546
I00
sg510
g3217
sg547
I01
sg524
(lp3609
sg550
(dp3610
sg526
I00
sg552
I00
sg553
g3196
sg527
I00
sg528
(lp3611
sg555
g3166
sbsg553
Nsg518
g3196
sg555
g3196
sbstRp3612
ag1
(g2
g3
(dp3613
g3589
g3590
sg503
g504
sg253
g3586
stRp3614
ag1
(g2
g3
(dp3615
S'href'
p3616
Vhttp://ck-hack.blogspot.com/feeds/7626090612235910862/comments/default
p3617
sS'type'
p3618
Vapplication/atom+xml
p3619
sS'rel'
p3620
Vreplies
p3621
sS'title'
p3622
VPost Comments
p3623
stRp3624
ag1
(g2
g3
(dp3625
S'href'
p3626
Vhttp://ck-hack.blogspot.com/2012/01/32-ck1.html#comment-form
p3627
sS'type'
p3628
Vtext/html
p3629
sS'rel'
p3630
Vreplies
p3631
sS'title'
p3632
V53 Comments
p3633
stRp3634
ag1
(g2
g3
(dp3635
S'href'
p3636
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/7626090612235910862
p3637
sS'type'
p3638
Vapplication/atom+xml
p3639
sS'rel'
p3640
Vedit
p3641
stRp3642
ag1
(g2
g3
(dp3643
S'href'
p3644
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/7626090612235910862
p3645
sS'type'
p3646
Vapplication/atom+xml
p3647
sS'rel'
p3648
Vself
p3649
stRp3650
ag1
(g2
g3
(dp3651
S'href'
p3652
Vhttp://ck-hack.blogspot.com/2012/01/32-ck1.html
p3653
sS'type'
p3654
Vtext/html
p3655
sS'rel'
p3656
Valternate
p3657
sS'title'
p3658
V3.2-ck1
p3659
stRp3660
asg66
(lp3661
g1
(g2
g3
(dp3662
g69
V-ck
p3663
sg71
Vhttp://www.blogger.com/atom/ns#
p3664
sg72
NstRp3665
ag1
(g2
g3
(dp3666
g69
V3.2.0
p3667
sg71
Vhttp://www.blogger.com/atom/ns#
p3668
sg72
NstRp3669
ag1
(g2
g3
(dp3670
g69
Vbfs
p3671
sg71
Vhttp://www.blogger.com/atom/ns#
p3672
sg72
NstRp3673
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3674
sVthr_total
p3675
V53
p3676
sg238
(lp3677
g1
(g2
g3
(dp3678
g229
g3674
sg233
Vck
p3679
sg242
Vnoreply@blogger.com
p3680
stRp3681
asg237
g3653
sS'author_detail'
p3682
g1
(g2
g3
(dp3683
g229
g3674
sg233
g3679
sg242
g3680
stRp3684
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-7626090612235910862
p3685
sg367
g22
((I2012
I1
I15
I23
I51
I0
I6
I15
I0
t(dtRp3686
sg253
V3.2-ck1
p3687
sg255
Vck (noreply@blogger.com)
p3688
sg371
VThese are patches designed to improve system responsiveness and interactivity with specific emphasis on the desktop, but suitable to any commodity hardware workload.<br /><br />This is an upgrade to BFS 416, trivial bugfixes and a resync from 3.1.0-ck1 . I've changed the versioning to not specify a 3 point release since it usually applies to successive 3 point releases for some time.<br /><br />Apply to 3.2.x:<br /><a href="http://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/patch-3.2-ck1.bz2">patch-3.2-ck1.bz2</a><br /><br /><br />Broken out tarball:<br /><a href="http://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/3.2-ck1-broken-out.tar.bz2">3.2-ck1-broken-out.tar.bz2</a><br /><br />Discrete patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.2/3.2-ck1/patches/">patches</a><br /><br /><br />BFS by itself:<br /><a href="http://ck.kolivas.org/patches/bfs/">bfs</a><br /><br /><br />Web:<br /><a href="http://kernel.kolivas.org/">kernel.kolivas.org</a><br /><br /><br />Code blog when I feel like it:<br /><a href="http://ck-hack.blogspot.com/">ck-hack.blogspot.com</a><br /><br /><br />Each discrete patch usually contains a brief description of what it does at <br />the top of the patch itself.<br /><br />Full patchlist:<br /><br />3.2-sched-bfs-416.patch<br />mm-minimal_swappiness.patch<br />mm-enable_swaptoken_only_when_swap_full.patch<br />mm-drop_swap_cache_aggressively.patch<br />mm-kswapd_inherit_prio-1.patch<br />mm-background_scan.patch<br />mm-idleprio_prio-1.patch<br />mm-lru_cache_add_lru_tail-2.patch<br />mm-decrease_default_dirty_ratio-1.patch<br />kconfig-expose_vmsplit_option.patch<br />hz-default_1000.patch<br />hz-no_default_250.patch<br />hz-raise_max.patch<br />preempt-desktop-tune.patch<br />ck1-version.patch<br /><br />Enjoy!<br />\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044<br /><br />--ck<br /><br />P.S. What this really means is I finished playing zelda.
p3689
sg373
(lp3690
g1
(g2
g3
(dp3691
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3692
sg53
g261
sg262
Nsg263
g3689
stRp3693
asg265
I01
sS'title_detail'
p3694
g1
(g2
g3
(dp3695
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3696
sg53
g269
sg262
Nsg263
g3687
stRp3697
sg382
V2012-01-16T10:51:00.007+11:00
p3698
sg384
(lp3699
g386
aV*
ag387
astRp3700
ag1
(g2
g3
(dp3701
g7
V2012-01-09T09:25:41.607+11:00
p3702
sVgd_image
p3703
(dp3704
S'width'
p3705
V16
p3706
sS'src'
p3707
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p3708
sS'rel'
p3709
Vhttp://schemas.google.com/g/2005#thumbnail
p3710
sS'height'
p3711
V16
p3712
ssg21
g22
((I2012
I1
I8
I22
I25
I41
I6
I8
I0
t(dtRp3713
sg24
(lp3714
g1
(g2
g3
(dp3715
S'href'
p3716
Vhttp://ck-hack.blogspot.com/feeds/7930416397144157874/comments/default
p3717
sS'type'
p3718
Vapplication/atom+xml
p3719
sS'rel'
p3720
Vreplies
p3721
sS'title'
p3722
VPost Comments
p3723
stRp3724
ag1
(g2
g3
(dp3725
S'href'
p3726
Vhttp://ck-hack.blogspot.com/2012/01/towards-transparent-cpu-scheduling.html#comment-form
p3727
sS'type'
p3728
Vtext/html
p3729
sS'rel'
p3730
Vreplies
p3731
sS'title'
p3732
V9 Comments
p3733
stRp3734
ag1
(g2
g3
(dp3735
S'href'
p3736
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/7930416397144157874
p3737
sS'type'
p3738
Vapplication/atom+xml
p3739
sS'rel'
p3740
Vedit
p3741
stRp3742
ag1
(g2
g3
(dp3743
S'href'
p3744
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/7930416397144157874
p3745
sS'type'
p3746
Vapplication/atom+xml
p3747
sS'rel'
p3748
Vself
p3749
stRp3750
ag1
(g2
g3
(dp3751
S'href'
p3752
Vhttp://ck-hack.blogspot.com/2012/01/towards-transparent-cpu-scheduling.html
p3753
sS'type'
p3754
Vtext/html
p3755
sS'rel'
p3756
Valternate
p3757
sS'title'
p3758
VTowards Transparent CPU Scheduling
p3759
stRp3760
asg66
(lp3761
g1
(g2
g3
(dp3762
g69
Vdeterministic
p3763
sg71
Vhttp://www.blogger.com/atom/ns#
p3764
sg72
NstRp3765
ag1
(g2
g3
(dp3766
g69
Vfairness
p3767
sg71
Vhttp://www.blogger.com/atom/ns#
p3768
sg72
NstRp3769
ag1
(g2
g3
(dp3770
g69
Vlatency
p3771
sg71
Vhttp://www.blogger.com/atom/ns#
p3772
sg72
NstRp3773
ag1
(g2
g3
(dp3774
g69
Vbfs
p3775
sg71
Vhttp://www.blogger.com/atom/ns#
p3776
sg72
NstRp3777
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3778
sVthr_total
p3779
V9
sg238
(lp3780
g1
(g2
g3
(dp3781
g229
g3778
sg233
Vck
p3782
sg242
Vnoreply@blogger.com
p3783
stRp3784
asg237
g3753
sS'author_detail'
p3785
g1
(g2
g3
(dp3786
g229
g3778
sg233
g3782
sg242
g3783
stRp3787
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-7930416397144157874
p3788
sg367
g22
((I2012
I1
I8
I22
I25
I0
I6
I8
I0
t(dtRp3789
sg253
VTowards Transparent CPU Scheduling
p3790
sg255
Vck (noreply@blogger.com)
p3791
sg371
VOf BFS related interest is an excellent thesis by Joseph T. Meehean<br />entitled "Towards Transparent CPU Scheduling". Of particular note is<br />the virtually deterministic nature of BFS, especially in fairness and<br />latency. While this of course interests me greatly because of<br />extensive testing of the BFS CPU scheduler, there are many aspects of<br />both the current CFS CPU scheduler and the older O(1) CPU scheduler<br />that are discussed that anyone working on issues to do with<br />predictability, scalability, fairness and latency should read.<br /><br /><a href="http://research.cs.wisc.edu/wind/Publications/meehean-thesis11.html" target="_blank">http://research.cs.wisc.edu/wind/Publications/meehean-thesis11.html</a><br /><br /><br /><h3>Abstract:</h3>In this thesis we propose using the scientific method to develop a deeper understanding of CPU schedulers; we use this approach to explain and understand the sometimes erratic behavior of CPU schedulers.  This approach begins with introducing controlled workloads into commodity operating systems and observing the CPU scheduler's behavior.  From these observations we are able to infer the underlying CPU scheduling policy and create models that predict scheduling behavior.  <br /> We have made two advances in the area of applying scientific analysis to CPU schedulers.  The first, CPU Futures, is a combination of predictive scheduling models embedded into the CPU scheduler and user-space controller that steers applications using feedback from these models.  We have developed these predictive models for two different Linux schedulers (CFS and O(1)), based on two different scheduling paradigms (timesharing and proportional-share).  Using three different case studies, we demonstrate that applications can use our predictive models to reduce interference from low-importance applications by over 70\u005c%, reduce web server starvation by an order of magnitude, and enforce scheduling policies that contradict the CPU scheduler's.  <br /> Harmony, our second contribution, is a framework and set of experiments for extracting multiprocessor scheduling policy from commodity operating systems.  We used this tool to extract and analyze the policies of three Linux schedulers: O(1), CFS, and BFS.  These schedulers often implement strikingly different policies.  At the high level, the O(1) scheduler carefully selects processes for migration and strongly values processor affinity.  In contrast, CFS continuously searches for a better balance and, as a result, selects processes for migration at random.  BFS strongly values fairness and often disregards processor affinity.
p3792
sg373
(lp3793
g1
(g2
g3
(dp3794
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3795
sg53
g261
sg262
Nsg263
VOf BFS related interest is an excellent thesis by Joseph T. Meehean<br />entitled "Towards Transparent CPU Scheduling". Of particular note is<br />the virtually deterministic nature of BFS, especially in fairness and<br />latency. While this of course interests me greatly because of<br />extensive testing of the BFS CPU scheduler, there are many aspects of<br />both the current CFS CPU scheduler and the older O(1) CPU scheduler<br />that are discussed that anyone working on issues to do with<br />predictability, scalability, fairness and latency should read.<br /><br /><a href="http://research.cs.wisc.edu/wind/Publications/meehean-thesis11.html" target="_blank">http://research.cs.wisc.edu/wind/Publications/meehean-thesis11.html</a><br /><br /><br /><h3>Abstract:</h3>In this thesis we propose using the scientific method to develop a deeper understanding of CPU schedulers; we use this approach to explain and understand the sometimes erratic behavior of CPU schedulers.  This approach begins with introducing controlled workloads into commodity operating systems and observing the CPU scheduler's behavior.  From these observations we are able to infer the underlying CPU scheduling policy and create models that predict scheduling behavior.  <br /> We have made two advances in the area of applying scientific analysis to CPU schedulers.  The first, CPU Futures, is a combination of predictive scheduling models embedded into the CPU scheduler and user-space controller that steers applications using feedback from these models.  We have developed these predictive models for two different Linux schedulers (CFS and O(1)), based on two different scheduling paradigms (timesharing and proportional-share).  Using three different case studies, we demonstrate that applications can use our predictive models to reduce interference from low-importance applications by over 70\u005c%, reduce web server starvation by an order of magnitude, and enforce scheduling policies that contradict the CPU scheduler's.  <br /> Harmony, our second contribution, is a framework and set of experiments for extracting multiprocessor scheduling policy from commodity operating systems.  We used this tool to extract and analyze the policies of three Linux schedulers: O(1), CFS, and BFS.  These schedulers often implement strikingly different policies.  At the high level, the O(1) scheduler carefully selects processes for migration and strongly values processor affinity.  In contrast, CFS continuously searches for a better balance and, as a result, selects processes for migration at random.  BFS strongly values fairness and often disregards processor affinity.
p3796
stRp3797
asg265
I01
sS'title_detail'
p3798
g1
(g2
g3
(dp3799
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3800
sg53
g269
sg262
Nsg263
g3790
stRp3801
sg382
V2012-01-09T09:25:00.003+11:00
p3802
sg384
(lp3803
g386
aV*
ag387
astRp3804
ag1
(g2
g3
(dp3805
g7
V2012-01-05T20:37:51.989+11:00
p3806
sVgd_image
p3807
(dp3808
S'width'
p3809
V16
p3810
sS'src'
p3811
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p3812
sS'rel'
p3813
Vhttp://schemas.google.com/g/2005#thumbnail
p3814
sS'height'
p3815
V16
p3816
ssg21
g22
((I2012
I1
I5
I9
I37
I51
I3
I5
I0
t(dtRp3817
sg24
(lp3818
g1
(g2
g3
(dp3819
S'href'
p3820
Vhttp://ck-hack.blogspot.com/feeds/5329896675633658611/comments/default
p3821
sS'type'
p3822
Vapplication/atom+xml
p3823
sS'rel'
p3824
Vreplies
p3825
sS'title'
p3826
VPost Comments
p3827
stRp3828
ag1
(g2
g3
(dp3829
S'href'
p3830
Vhttp://ck-hack.blogspot.com/2012/01/bfs-0416-for-320.html#comment-form
p3831
sS'type'
p3832
Vtext/html
p3833
sS'rel'
p3834
Vreplies
p3835
sS'title'
p3836
V25 Comments
p3837
stRp3838
ag1
(g2
g3
(dp3839
S'href'
p3840
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5329896675633658611
p3841
sS'type'
p3842
Vapplication/atom+xml
p3843
sS'rel'
p3844
Vedit
p3845
stRp3846
ag1
(g2
g3
(dp3847
S'href'
p3848
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/5329896675633658611
p3849
sS'type'
p3850
Vapplication/atom+xml
p3851
sS'rel'
p3852
Vself
p3853
stRp3854
ag1
(g2
g3
(dp3855
S'href'
p3856
Vhttp://ck-hack.blogspot.com/2012/01/bfs-0416-for-320.html
p3857
sS'type'
p3858
Vtext/html
p3859
sS'rel'
p3860
Valternate
p3861
sS'title'
p3862
VBFS 0.416 for 3.2.0
p3863
stRp3864
asg66
(lp3865
g1
(g2
g3
(dp3866
g69
V3.2.0
p3867
sg71
Vhttp://www.blogger.com/atom/ns#
p3868
sg72
NstRp3869
ag1
(g2
g3
(dp3870
g69
Vbfs
p3871
sg71
Vhttp://www.blogger.com/atom/ns#
p3872
sg72
NstRp3873
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3874
sVthr_total
p3875
V25
p3876
sg238
(lp3877
g1
(g2
g3
(dp3878
g229
g3874
sg233
Vck
p3879
sg242
Vnoreply@blogger.com
p3880
stRp3881
asg237
g3857
sS'author_detail'
p3882
g1
(g2
g3
(dp3883
g229
g3874
sg233
g3879
sg242
g3880
stRp3884
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-5329896675633658611
p3885
sg367
g22
((I2012
I1
I5
I9
I37
I0
I3
I5
I0
t(dtRp3886
sg253
VBFS 0.416 for 3.2.0
p3887
sg255
Vck (noreply@blogger.com)
p3888
sg371
VWell 3.2.0 is finally out.<br /><br />I've done a quick and dirty port of BFS from 3.1 with mostly trivial changes and a minor change to idle CPU selection (it will choose the old CPU first now even if the other "thread" is busy on hyperthreaded CPUs). For the most part the changes are trivial only to stay in sync with the new scheduler changes in mainline so it should be a very safe upgrade. Nonetheless, I'm putting this up for testing here because my Ubuntu laptop seems unhappy starting X but that seems 3.2 related rather than BFS related. I've since moved my home desktop to arch linux and have been very happy on that distro.<br /><br />So anyway here's BFS for 3.2.0 for those who want things hot off the press:<br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.2.0/3.2-sched-bfs-416.patch">3.2-sched-bfs-416.patch</a><br /><br />The -ck patch will not be far behind assuming the first few testers report no problems with this BFS patch. To be honest, the Virtual Memory subsystem has changed so much that I'm having trouble predicting how it will behave now and have no way of confirming the VM patches that go into -ck are even helpful any more, so I'm not even sure if I should continue to support them in light of that.<br /><br />Besides, I've been too busy playing Zelda - Skyward Sword to really care much about anything code related. I've loved every 3D rendition of Zelda since Ocarina of time, but this latest incarnation is the most amazing game ever...
p3889
sg373
(lp3890
g1
(g2
g3
(dp3891
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3892
sg53
g261
sg262
Nsg263
g3889
stRp3893
asg265
I01
sS'title_detail'
p3894
g1
(g2
g3
(dp3895
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3896
sg53
g269
sg262
Nsg263
g3887
stRp3897
sg382
V2012-01-05T20:37:00.002+11:00
p3898
sg384
(lp3899
g386
aV*
ag387
astRp3900
ag1
(g2
g3
(dp3901
g7
V2011-11-11T16:58:02.579+11:00
p3902
sVgd_image
p3903
(dp3904
S'width'
p3905
V16
p3906
sS'src'
p3907
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p3908
sS'rel'
p3909
Vhttp://schemas.google.com/g/2005#thumbnail
p3910
sS'height'
p3911
V16
p3912
ssg21
g22
((I2011
I11
I11
I5
I58
I2
I4
I315
I0
t(dtRp3913
sg24
(lp3914
g1
(g2
g3
(dp3915
S'href'
p3916
Vhttp://ck-hack.blogspot.com/feeds/4806674638596977598/comments/default
p3917
sS'type'
p3918
Vapplication/atom+xml
p3919
sS'rel'
p3920
Vreplies
p3921
sS'title'
p3922
VPost Comments
p3923
stRp3924
ag1
(g2
g3
(dp3925
S'href'
p3926
Vhttp://ck-hack.blogspot.com/2011/11/310-ck2-bfs-0415.html#comment-form
p3927
sS'type'
p3928
Vtext/html
p3929
sS'rel'
p3930
Vreplies
p3931
sS'title'
p3932
V47 Comments
p3933
stRp3934
ag1
(g2
g3
(dp3935
S'href'
p3936
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4806674638596977598
p3937
sS'type'
p3938
Vapplication/atom+xml
p3939
sS'rel'
p3940
Vedit
p3941
stRp3942
ag1
(g2
g3
(dp3943
S'href'
p3944
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/4806674638596977598
p3945
sS'type'
p3946
Vapplication/atom+xml
p3947
sS'rel'
p3948
Vself
p3949
stRp3950
ag1
(g2
g3
(dp3951
S'href'
p3952
Vhttp://ck-hack.blogspot.com/2011/11/310-ck2-bfs-0415.html
p3953
sS'type'
p3954
Vtext/html
p3955
sS'rel'
p3956
Valternate
p3957
sS'title'
p3958
V3.1.0-ck2, BFS 0.415
p3959
stRp3960
asg66
(lp3961
g1
(g2
g3
(dp3962
g69
V-ck
p3963
sg71
Vhttp://www.blogger.com/atom/ns#
p3964
sg72
NstRp3965
ag1
(g2
g3
(dp3966
g69
V3.1.0
p3967
sg71
Vhttp://www.blogger.com/atom/ns#
p3968
sg72
NstRp3969
ag1
(g2
g3
(dp3970
g69
Vbfs
p3971
sg71
Vhttp://www.blogger.com/atom/ns#
p3972
sg72
NstRp3973
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p3974
sVthr_total
p3975
V47
p3976
sg238
(lp3977
g1
(g2
g3
(dp3978
g229
g3974
sg233
Vck
p3979
sg242
Vnoreply@blogger.com
p3980
stRp3981
asg237
g3953
sS'author_detail'
p3982
g1
(g2
g3
(dp3983
g229
g3974
sg233
g3979
sg242
g3980
stRp3984
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-4806674638596977598
p3985
sg367
g22
((I2011
I11
I11
I5
I53
I0
I4
I315
I0
t(dtRp3986
sg253
V3.1.0-ck2, BFS 0.415
p3987
sg255
Vck (noreply@blogger.com)
p3988
sg371
VBlah blah fixes blah blah rollbacks, anyway here's a new -ck and bfs 415. Nothing new here, just bugfixes. <br /><br /><a href="http://ck.kolivas.org/patches/3.0/3.1/3.1.0-ck2/">3.1.0-ck2</a><br /><br /><a href="http://ck.kolivas.org/patches/bfs/3.1.0/3.1-sched-bfs-415.patch">3.1-sched-bfs-415.patch</a><br /><br /><br />Full -ck patchlist:<br /><br /><pre>3.1-sched-bfs-414.patch<br />sched-add-above-background-load-function.patch<br />mm-minimal_swappiness.patch<br />mm-enable_swaptoken_only_when_swap_full.patch<br />mm-drop_swap_cache_aggressively.patch<br />mm-kswapd_inherit_prio-1.patch<br />mm-background_scan.patch<br />mm-idleprio_prio-1.patch<br />mm-lru_cache_add_lru_tail-1.patch<br />mm-decrease_default_dirty_ratio.patch<br />kconfig-expose_vmsplit_option.patch<br />hz-default_1000.patch<br />hz-no_default_250.patch<br />hz-raise_max.patch<br />preempt-desktop-tune.patch<br />cpufreq-bfs_tweaks.patch<br />bfs414-noprefetch.patch<br />bfs414-remove_rqpreempt.patch<br />bfs414-correct_int_size.patch<br />bfs414-stickybool.patch<br />bfs414-dont_use_task.patch<br />bfs414-clear_deactivated_sticky.patch<br />bfs414-fix-nonbfs-build.patch<br />bfs414-415version.patch<br />ck2-version.patch&nbsp;</pre><pre>&nbsp;</pre><pre>&nbsp;</pre><pre>BFS 415 is now the following patches from -ck2 above:</pre><pre>&nbsp;</pre><pre>3.1-sched-bfs-414.patch<br />sched-add-above-background-load-function.patch<br />cpufreq-bfs_tweaks.patch<br />bfs414-noprefetch.patch<br />bfs414-remove_rqpreempt.patch<br />bfs414-correct_int_size.patch<br />bfs414-stickybool.patch<br />bfs414-dont_use_task.patch<br />bfs414-clear_deactivated_sticky.patch<br />bfs414-fix-nonbfs-build.patch<br />bfs414-415version.patch&nbsp;</pre><pre>&nbsp;</pre><pre>Enjoy!</pre>
p3989
sg373
(lp3990
g1
(g2
g3
(dp3991
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3992
sg53
g261
sg262
Nsg263
g3989
stRp3993
asg265
I01
sS'title_detail'
p3994
g1
(g2
g3
(dp3995
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p3996
sg53
g269
sg262
Nsg263
g3987
stRp3997
sg382
V2011-11-11T16:53:00.001+11:00
p3998
sg384
(lp3999
g386
aV*
ag387
astRp4000
ag1
(g2
g3
(dp4001
g7
V2011-11-08T22:05:48.485+11:00
p4002
sVgd_image
p4003
(dp4004
S'width'
p4005
V16
p4006
sS'src'
p4007
Vhttp://img2.blogblog.com/img/b16-rounded.gif
p4008
sS'rel'
p4009
Vhttp://schemas.google.com/g/2005#thumbnail
p4010
sS'height'
p4011
V16
p4012
ssg21
g22
((I2011
I11
I8
I11
I5
I48
I1
I312
I0
t(dtRp4013
sg24
(lp4014
g1
(g2
g3
(dp4015
S'href'
p4016
Vhttp://ck-hack.blogspot.com/feeds/2950164654518499899/comments/default
p4017
sS'type'
p4018
Vapplication/atom+xml
p4019
sS'rel'
p4020
Vreplies
p4021
sS'title'
p4022
VPost Comments
p4023
stRp4024
ag1
(g2
g3
(dp4025
S'href'
p4026
Vhttp://ck-hack.blogspot.com/2011/11/31-ck1-bfs-0414.html#comment-form
p4027
sS'type'
p4028
Vtext/html
p4029
sS'rel'
p4030
Vreplies
p4031
sS'title'
p4032
V20 Comments
p4033
stRp4034
ag1
(g2
g3
(dp4035
S'href'
p4036
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/2950164654518499899
p4037
sS'type'
p4038
Vapplication/atom+xml
p4039
sS'rel'
p4040
Vedit
p4041
stRp4042
ag1
(g2
g3
(dp4043
S'href'
p4044
Vhttp://www.blogger.com/feeds/6469704299235308349/posts/default/2950164654518499899
p4045
sS'type'
p4046
Vapplication/atom+xml
p4047
sS'rel'
p4048
Vself
p4049
stRp4050
ag1
(g2
g3
(dp4051
S'href'
p4052
Vhttp://ck-hack.blogspot.com/2011/11/31-ck1-bfs-0414.html
p4053
sS'type'
p4054
Vtext/html
p4055
sS'rel'
p4056
Valternate
p4057
sS'title'
p4058
V3.1.0-ck1, BFS 0.414
p4059
stRp4060
asg66
(lp4061
g1
(g2
g3
(dp4062
g69
V-ck
p4063
sg71
Vhttp://www.blogger.com/atom/ns#
p4064
sg72
NstRp4065
ag1
(g2
g3
(dp4066
g69
V3.1.0
p4067
sg71
Vhttp://www.blogger.com/atom/ns#
p4068
sg72
NstRp4069
ag1
(g2
g3
(dp4070
g69
Vbfs
p4071
sg71
Vhttp://www.blogger.com/atom/ns#
p4072
sg72
NstRp4073
asg229
Vhttp://www.blogger.com/profile/02904761195451530213
p4074
sVthr_total
p4075
V20
p4076
sg238
(lp4077
g1
(g2
g3
(dp4078
g229
g4074
sg233
Vck
p4079
sg242
Vnoreply@blogger.com
p4080
stRp4081
asg237
g4053
sS'author_detail'
p4082
g1
(g2
g3
(dp4083
g229
g4074
sg233
g4079
sg242
g4080
stRp4084
sg250
Vtag:blogger.com,1999:blog-6469704299235308349.post-2950164654518499899
p4085
sg367
g22
((I2011
I11
I3
I5
I41
I0
I3
I307
I0
t(dtRp4086
sg253
V3.1.0-ck1, BFS 0.414
p4087
sg255
Vck (noreply@blogger.com)
p4088
sg371
VI finally found enough time to sync up BFS with the latest 3.1.0 linux kernel. In keeping with the fact that there are some changes to support new scheduler features in linux-3.1, and the general code churn that happens on every release, the version number is updated from the last 0.413 release but from the user perspective it should behave identically. There were some build fixes pending and one bug involving displayed hard interrupt usage that were fixed. Overall most users should notice no significant change.<br /><br />Apply to linux-3.1.x:<br /><a href="http://ck.kolivas.org/patches/bfs/3.1.0/3.1-sched-bfs-414.patch">3.1-sched-bfs-414.patch</a><br /><br />Closely following on with syncing up with the latest kernel is an updated -ck kernel which is almost identical, apart from relaxing the swappiness from 0 to 10. Some very low ram users reported the virtual memory subsystem tried so hard to not swap anything at 0 that they experienced stalls while the VM twiddled its thumbs screwing around so I've relaxed the value to 10 which avoids these stalls and should still be quite aggressive at avoiding swapping.<br /><br />Apart from that the -ck patch is a resync from the last 3.0.0-ck1 release:<br /><br />Directory containing combined ck1 patch and separate patches:<br /><a href="http://ck.kolivas.org/patches/3.0/3.1/3.1.0-ck1/">3.1.0-ck1</a><br /><br />With the recent kernel.org hacking it has become a lot harder to get a kernel.org account and as I would have great difficulty getting a gpg key personally signed by any other kernel developer in my area it could be a while before I can set up an account there again. So I've decided to just use my own storage once more instead of putting it on kernel.org. Unfortunately I don't have quite a few of the older -ck kernels since I never bothered to upload them there. I foolishly thought that kernel.org storage would be permanent cloud storage for them so I don't even have a copy of many of them. If someone has archived the 2.6 -ck patches, or has an old mirror of kernel.org please forward them on to me.<br /><br />Enjoy!<br /><br />EDIT: A few bugs are showing up in this latest BFS release, and I'm currently accumulating fixes fort them and putting them in the directory listed above for ck1. There will be a ck2 soon to follow with all the fixes.
p4089
sg373
(lp4090
g1
(g2
g3
(dp4091
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p4092
sg53
g261
sg262
Nsg263
g4089
stRp4093
asg265
I01
sS'title_detail'
p4094
g1
(g2
g3
(dp4095
g259
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p4096
sg53
g269
sg262
Nsg263
g4087
stRp4097
sg382
V2011-11-03T16:41:00.001+11:00
p4098
sg384
(lp4099
g386
aV*
ag387
astRp4100
asS'canto_update'
p4101
F1364190581.123095
sS'headers'
p4102
(dp4103
S'x-xss-protection'
p4104
S'1; mode=block'
p4105
sS'x-content-type-options'
p4106
S'nosniff'
p4107
sS'expires'
p4108
S'Mon, 25 Mar 2013 05:47:46 GMT'
p4109
sS'server'
p4110
S'GSE'
p4111
sS'last-modified'
p4112
g276
sS'connection'
p4113
S'close'
p4114
sS'etag'
p4115
S'W/"C0ICRXg6fSl7ImA9WhBQF0Q."'
p4116
sS'cache-control'
p4117
S'private, max-age=0'
p4118
sS'date'
p4119
S'Mon, 25 Mar 2013 05:47:46 GMT'
p4120
sS'content-type'
p4121
S'text/xml; charset=UTF-8'
p4122
ssS'etag'
p4123
VW/"C0ICRXg6fSl7ImA9WhBQF0Q."
p4124
sg384
(lp4125
sg229
Vhttp://ck-hack.blogspot.com/feeds/posts/default
p4126
sS'version'
p4127
Vatom10
p4128
sS'canto_version'
p4129
(I0
I7
I10
tp4130
sS'namespaces'
p4131
(dp4132
S''
Vhttp://www.w3.org/2005/Atom
p4133
sVopenSearch
p4134
Vhttp://a9.com/-/spec/opensearchrss/1.0/
p4135
sVblogger
p4136
Vhttp://schemas.google.com/blogger/2008
p4137
sVthr
p4138
Vhttp://purl.org/syndication/thread/1.0
p4139
sVgeorss
p4140
Vhttp://www.georss.org/georss
p4141
sVgd
p4142
Vhttp://schemas.google.com/g/2005
p4143
sstRp4144
.